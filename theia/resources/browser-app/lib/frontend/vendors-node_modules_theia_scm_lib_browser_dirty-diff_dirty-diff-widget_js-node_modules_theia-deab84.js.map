{"version":3,"file":"vendors-node_modules_theia_scm_lib_browser_dirty-diff_dirty-diff-widget_js-node_modules_theia-deab84.js","mappings":"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","sources":["webpack:///../node_modules/@theia/monaco/src/browser/monaco-editor-peek-view-widget.ts?","webpack:///../node_modules/@theia/scm/src/browser/dirty-diff/diff-computer.ts?","webpack:///../node_modules/@theia/scm/src/browser/dirty-diff/dirty-diff-widget.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-colors.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-context-key-service.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-tree-model.ts?","webpack:///../node_modules/@theia/scm/src/browser/scm-tree-widget.tsx?","webpack:///../node_modules/diff/src/convert/dmp.js?","webpack:///../node_modules/diff/src/convert/xml.js?","webpack:///../node_modules/diff/src/diff/array.js?","webpack:///../node_modules/diff/src/diff/base.js?","webpack:///../node_modules/diff/src/diff/character.js?","webpack:///../node_modules/diff/src/diff/css.js?","webpack:///../node_modules/diff/src/diff/json.js?","webpack:///../node_modules/diff/src/diff/line.js?","webpack:///../node_modules/diff/src/diff/sentence.js?","webpack:///../node_modules/diff/src/diff/word.js?","webpack:///../node_modules/diff/src/index.js?","webpack:///../node_modules/diff/src/patch/apply.js?","webpack:///../node_modules/diff/src/patch/create.js?","webpack:///../node_modules/diff/src/patch/merge.js?","webpack:///../node_modules/diff/src/patch/parse.js?","webpack:///../node_modules/diff/src/patch/reverse.js?","webpack:///../node_modules/diff/src/util/array.js?","webpack:///../node_modules/diff/src/util/distance-iterator.js?","webpack:///../node_modules/diff/src/util/params.js?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2024 1C-Soft LLC and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Position, Range } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { DisposableCollection } from '@theia/core';\nimport { MonacoEditor } from './monaco-editor';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { PeekViewWidget, IPeekViewOptions, IPeekViewStyles } from '@theia/monaco-editor-core/esm/vs/editor/contrib/peekView/browser/peekView';\nimport { ICodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorBrowser';\nimport { ActionBar } from '@theia/monaco-editor-core/esm/vs/base/browser/ui/actionbar/actionbar';\nimport { Action } from '@theia/monaco-editor-core/esm/vs/base/common/actions';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IInstantiationService } from '@theia/monaco-editor-core/esm/vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from '@theia/monaco-editor-core/esm/vs/platform/theme/common/themeService';\nimport { Color } from '@theia/monaco-editor-core/esm/vs/base/common/color';\n\nexport { peekViewBorder, peekViewTitleBackground, peekViewTitleForeground, peekViewTitleInfoForeground }\n    from '@theia/monaco-editor-core/esm/vs/editor/contrib/peekView/browser/peekView';\n\nexport namespace MonacoEditorPeekViewWidget {\n    export interface Styles {\n        frameColor?: string;\n        arrowColor?: string;\n        headerBackgroundColor?: string;\n        primaryHeadingColor?: string;\n        secondaryHeadingColor?: string;\n    }\n    export interface Options {\n        showFrame?: boolean;\n        showArrow?: boolean;\n        frameWidth?: number;\n        className?: string;\n        isAccessible?: boolean;\n        isResizeable?: boolean;\n        keepEditorSelection?: boolean;\n        allowUnlimitedHeight?: boolean;\n        ordinal?: number;\n        showInHiddenAreas?: boolean;\n        supportOnTitleClick?: boolean;\n    }\n    export interface Action {\n        readonly id: string;\n        label: string;\n        tooltip: string;\n        class: string | undefined;\n        enabled: boolean;\n        checked?: boolean;\n        run(...args: unknown[]): unknown;\n    }\n    export interface ActionOptions {\n        icon?: boolean;\n        label?: boolean;\n        keybinding?: string;\n        index?: number;\n    }\n}\n\nexport class MonacoEditorPeekViewWidget {\n\n    protected readonly toDispose = new DisposableCollection();\n\n    readonly onDidClose = this.toDispose.onDispose;\n\n    private readonly themeService = StandaloneServices.get(IThemeService);\n\n    private readonly delegate;\n\n    constructor(\n        readonly editor: MonacoEditor,\n        options: MonacoEditorPeekViewWidget.Options = {},\n        protected styles: MonacoEditorPeekViewWidget.Styles = {}\n    ) {\n        const that = this;\n        this.toDispose.push(this.delegate = new class extends PeekViewWidget {\n\n            get actionBar(): ActionBar | undefined {\n                return this._actionbarWidget;\n            }\n\n            fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n                super._fillHead(container, noCloseAction);\n            }\n\n            protected override _fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n                that.fillHead(container, noCloseAction);\n            }\n\n            fillBody(container: HTMLElement): void {\n                // super._fillBody is an abstract method\n            }\n\n            protected override _fillBody(container: HTMLElement): void {\n                that.fillBody(container);\n            };\n\n            doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n                super._doLayoutHead(heightInPixel, widthInPixel);\n            }\n\n            protected override _doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n                that.doLayoutHead(heightInPixel, widthInPixel);\n            }\n\n            doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n                super._doLayoutBody(heightInPixel, widthInPixel);\n            }\n\n            protected override _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n                that.doLayoutBody(heightInPixel, widthInPixel);\n            }\n\n            onWidth(widthInPixel: number): void {\n                super._onWidth(widthInPixel);\n            }\n\n            protected override _onWidth(widthInPixel: number): void {\n                that.onWidth(widthInPixel);\n            }\n\n            doRevealRange(range: monaco.Range, isLastLine: boolean): void {\n                super.revealRange(range, isLastLine);\n            }\n\n            protected override revealRange(range: monaco.Range, isLastLine: boolean): void {\n                that.doRevealRange(that.editor['m2p'].asRange(range), isLastLine);\n            }\n        }(\n            editor.getControl() as unknown as ICodeEditor,\n            Object.assign(<IPeekViewOptions>{}, options, this.convertStyles(styles)),\n            StandaloneServices.get(IInstantiationService)\n        ));\n        this.toDispose.push(this.themeService.onDidColorThemeChange(() => this.style(this.styles)));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    create(): void {\n        this.delegate.create();\n    }\n\n    setTitle(primaryHeading: string, secondaryHeading?: string): void {\n        this.delegate.setTitle(primaryHeading, secondaryHeading);\n    }\n\n    style(styles: MonacoEditorPeekViewWidget.Styles): void {\n        this.delegate.style(this.convertStyles(this.styles = styles));\n    }\n\n    show(rangeOrPos: Range | Position, heightInLines: number): void {\n        this.delegate.show(this.convertRangeOrPosition(rangeOrPos), heightInLines);\n    }\n\n    hide(): void {\n        this.delegate.hide();\n    }\n\n    clearActions(): void {\n        this.delegate.actionBar?.clear();\n    }\n\n    addAction(id: string, label: string, cssClass: string | undefined, enabled: boolean, actionCallback: (arg: unknown) => unknown,\n        options?: MonacoEditorPeekViewWidget.ActionOptions): MonacoEditorPeekViewWidget.Action {\n        options = cssClass ? { icon: true, label: false, ...options } : { icon: false, label: true, ...options };\n        const { actionBar } = this.delegate;\n        if (!actionBar) {\n            throw new Error('Action bar has not been created.');\n        }\n        const action = new Action(id, label, cssClass, enabled, actionCallback);\n        actionBar.push(action, options);\n        return action;\n    }\n\n    protected fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n        this.delegate.fillHead(container, noCloseAction);\n    }\n\n    protected fillBody(container: HTMLElement): void {\n        this.delegate.fillBody(container);\n    }\n\n    protected doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n        this.delegate.doLayoutHead(heightInPixel, widthInPixel);\n    }\n\n    protected doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n        this.delegate.doLayoutBody(heightInPixel, widthInPixel);\n    }\n\n    protected onWidth(widthInPixel: number): void {\n        this.delegate.onWidth(widthInPixel);\n    }\n\n    protected doRevealRange(range: Range, isLastLine: boolean): void {\n        this.delegate.doRevealRange(this.editor['p2m'].asRange(range), isLastLine);\n    }\n\n    private convertStyles(styles: MonacoEditorPeekViewWidget.Styles): IPeekViewStyles {\n        return {\n            frameColor: this.convertColor(styles.frameColor),\n            arrowColor: this.convertColor(styles.arrowColor),\n            headerBackgroundColor: this.convertColor(styles.headerBackgroundColor),\n            primaryHeadingColor: this.convertColor(styles.primaryHeadingColor),\n            secondaryHeadingColor: this.convertColor(styles.secondaryHeadingColor),\n        };\n    }\n\n    private convertColor(color?: string): Color | undefined {\n        if (color === undefined) {\n            return undefined;\n        }\n        return this.themeService.getColorTheme().getColor(color) || Color.fromHex(color);\n    }\n\n    private convertRangeOrPosition(arg: Range | Position): monaco.Range | monaco.Position {\n        const p2m = this.editor['p2m'];\n        return Range.is(arg) ? p2m.asRange(arg) : p2m.asPosition(arg);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as jsdiff from 'diff';\nimport { ContentLinesArrayLike } from './content-lines';\nimport { Position, Range, uinteger } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport class DiffComputer {\n\n    computeDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DiffResult[] {\n        const diffResult = diffArrays(previous, current);\n        return diffResult;\n    }\n\n    computeDirtyDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DirtyDiff {\n        const changes: Change[] = [];\n        const diffResult = this.computeDiff(previous, current);\n        let currentRevisionLine = -1;\n        let previousRevisionLine = -1;\n        for (let i = 0; i < diffResult.length; i++) {\n            const change = diffResult[i];\n            const next = diffResult[i + 1];\n            if (change.added) {\n                // case: addition\n                changes.push({ previousRange: LineRange.createEmptyLineRange(previousRevisionLine + 1), currentRange: toLineRange(change) });\n                currentRevisionLine += change.count!;\n            } else if (change.removed && next && next.added) {\n                const isFirstChange = i === 0;\n                const isLastChange = i === diffResult.length - 2;\n                const isNextEmptyLine = next.value.length > 0 && current[next.value[0]].length === 0;\n                const isPrevEmptyLine = change.value.length > 0 && previous[change.value[0]].length === 0;\n\n                if (isFirstChange && isNextEmptyLine) {\n                    // special case: removing at the beginning\n                    changes.push({ previousRange: toLineRange(change), currentRange: LineRange.createEmptyLineRange(0) });\n                    previousRevisionLine += change.count!;\n                } else if (isFirstChange && isPrevEmptyLine) {\n                    // special case: adding at the beginning\n                    changes.push({ previousRange: LineRange.createEmptyLineRange(0), currentRange: toLineRange(next) });\n                    currentRevisionLine += next.count!;\n                } else if (isLastChange && isNextEmptyLine) {\n                    changes.push({ previousRange: toLineRange(change), currentRange: LineRange.createEmptyLineRange(currentRevisionLine + 2) });\n                    previousRevisionLine += change.count!;\n                } else {\n                    // default case is a modification\n                    changes.push({ previousRange: toLineRange(change), currentRange: toLineRange(next) });\n                    currentRevisionLine += next.count!;\n                    previousRevisionLine += change.count!;\n                }\n                i++; // consume next eagerly\n            } else if (change.removed && !(next && next.added)) {\n                // case: removal\n                changes.push({ previousRange: toLineRange(change), currentRange: LineRange.createEmptyLineRange(currentRevisionLine + 1) });\n                previousRevisionLine += change.count!;\n            } else {\n                // case: unchanged region\n                currentRevisionLine += change.count!;\n                previousRevisionLine += change.count!;\n            }\n        }\n        return { changes };\n    }\n\n}\n\nclass ArrayDiff extends jsdiff.Diff {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override tokenize(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override join(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override removeEmpty(value: any): any {\n        return value;\n    }\n}\n\nconst arrayDiff = new ArrayDiff();\n\n/**\n * Computes diff without copying data.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction diffArrays(oldArr: ContentLinesArrayLike, newArr: ContentLinesArrayLike): DiffResult[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return arrayDiff.diff(oldArr as any, newArr as any) as any;\n}\n\nfunction toLineRange({ value }: DiffResult): LineRange {\n    const [start, end] = value;\n    return LineRange.create(start, end + 1);\n}\n\nexport interface DiffResult {\n    value: [number, number];\n    count?: number;\n    added?: boolean;\n    removed?: boolean;\n}\n\nexport interface DirtyDiff {\n    readonly changes: readonly Change[];\n}\n\nexport interface Change {\n    readonly previousRange: LineRange;\n    readonly currentRange: LineRange;\n}\n\nexport namespace Change {\n    export function isAddition(change: Change): boolean {\n        return LineRange.isEmpty(change.previousRange);\n    }\n    export function isRemoval(change: Change): boolean {\n        return LineRange.isEmpty(change.currentRange);\n    }\n    export function isModification(change: Change): boolean {\n        return !isAddition(change) && !isRemoval(change);\n    }\n}\n\nexport interface LineRange {\n    readonly start: number;\n    readonly end: number;\n}\n\nexport namespace LineRange {\n    export function create(start: number, end: number): LineRange {\n        if (start < 0 || end < 0 || start > end) {\n            throw new Error(`Invalid line range: { start: ${start}, end: ${end} }`);\n        }\n        return { start, end };\n    }\n    export function createSingleLineRange(line: number): LineRange {\n        return create(line, line + 1);\n    }\n    export function createEmptyLineRange(line: number): LineRange {\n        return create(line, line);\n    }\n    export function isEmpty(range: LineRange): boolean {\n        return range.start === range.end;\n    }\n    export function getStartPosition(range: LineRange): Position {\n        if (isEmpty(range)) {\n            return getEndPosition(range);\n        }\n        return Position.create(range.start, 0);\n    }\n    export function getEndPosition(range: LineRange): Position {\n        if (range.end < 1) {\n            return Position.create(0, 0);\n        }\n        return Position.create(range.end - 1, uinteger.MAX_VALUE);\n    }\n    export function toRange(range: LineRange): Range {\n        return Range.create(getStartPosition(range), getEndPosition(range));\n    }\n    export function getLineCount(range: LineRange): number {\n        return range.end - range.start;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 1C-Soft LLC and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Position, Range } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ActionMenuNode, Disposable, Emitter, Event, MenuCommandExecutor, MenuModelRegistry, MenuPath, URI, nls } from '@theia/core';\nimport { codicon } from '@theia/core/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { MonacoDiffEditor } from '@theia/monaco/lib/browser/monaco-diff-editor';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { MonacoEditorPeekViewWidget, peekViewBorder, peekViewTitleBackground, peekViewTitleForeground, peekViewTitleInfoForeground }\n    from '@theia/monaco/lib/browser/monaco-editor-peek-view-widget';\nimport { Change, LineRange } from './diff-computer';\nimport { ScmColors } from '../scm-colors';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport const SCM_CHANGE_TITLE_MENU: MenuPath = ['scm-change-title-menu'];\n/** Reserved for plugin contributions, corresponds to contribution point 'scm/change/title'. */\nexport const PLUGIN_SCM_CHANGE_TITLE_MENU: MenuPath = ['plugin-scm-change-title-menu'];\n\nexport const DirtyDiffWidgetProps = Symbol('DirtyDiffWidgetProps');\nexport interface DirtyDiffWidgetProps {\n    readonly editor: MonacoEditor;\n    readonly previousRevisionUri: URI;\n    readonly changes: readonly Change[];\n}\n\nexport const DirtyDiffWidgetFactory = Symbol('DirtyDiffWidgetFactory');\nexport type DirtyDiffWidgetFactory = (props: DirtyDiffWidgetProps) => DirtyDiffWidget;\n\n@injectable()\nexport class DirtyDiffWidget implements Disposable {\n\n    private readonly onDidCloseEmitter = new Emitter<unknown>();\n    readonly onDidClose: Event<unknown> = this.onDidCloseEmitter.event;\n    protected index: number = -1;\n    private peekView?: DirtyDiffPeekView;\n    private diffEditorPromise?: Promise<MonacoDiffEditor>;\n\n    constructor(\n        @inject(DirtyDiffWidgetProps) protected readonly props: DirtyDiffWidgetProps,\n        @inject(MonacoEditorProvider) readonly editorProvider: MonacoEditorProvider,\n        @inject(ContextKeyService) readonly contextKeyService: ContextKeyService,\n        @inject(MenuModelRegistry) readonly menuModelRegistry: MenuModelRegistry,\n        @inject(MenuCommandExecutor) readonly menuCommandExecutor: MenuCommandExecutor\n    ) { }\n\n    @postConstruct()\n    create(): void {\n        this.peekView = new DirtyDiffPeekView(this);\n        this.peekView.onDidClose(e => this.onDidCloseEmitter.fire(e));\n        this.diffEditorPromise = this.peekView.create();\n    }\n\n    get editor(): MonacoEditor {\n        return this.props.editor;\n    }\n\n    get uri(): URI {\n        return this.editor.uri;\n    }\n\n    get previousRevisionUri(): URI {\n        return this.props.previousRevisionUri;\n    }\n\n    get changes(): readonly Change[] {\n        return this.props.changes;\n    }\n\n    get currentChange(): Change | undefined {\n        return this.changes[this.index];\n    }\n\n    get currentChangeIndex(): number {\n        return this.index;\n    }\n\n    showChange(index: number): void {\n        this.checkCreated();\n        if (index >= 0 && index < this.changes.length) {\n            this.index = index;\n            this.showCurrentChange();\n        }\n    }\n\n    showNextChange(): void {\n        this.checkCreated();\n        const index = this.index;\n        const length = this.changes.length;\n        if (length > 0 && (index < 0 || length > 1)) {\n            this.index = index < 0 ? 0 : cycle(index, 1, length);\n            this.showCurrentChange();\n        }\n    }\n\n    showPreviousChange(): void {\n        this.checkCreated();\n        const index = this.index;\n        const length = this.changes.length;\n        if (length > 0 && (index < 0 || length > 1)) {\n            this.index = index < 0 ? length - 1 : cycle(index, -1, length);\n            this.showCurrentChange();\n        }\n    }\n\n    async getContentWithSelectedChanges(predicate: (change: Change, index: number, changes: readonly Change[]) => boolean): Promise<string> {\n        this.checkCreated();\n        const changes = this.changes.filter(predicate);\n        const { diffEditor } = await this.diffEditorPromise!;\n        const diffEditorModel = diffEditor.getModel()!;\n        return applyChanges(changes, diffEditorModel.original, diffEditorModel.modified);\n    }\n\n    dispose(): void {\n        this.peekView?.dispose();\n        this.onDidCloseEmitter.dispose();\n    }\n\n    protected showCurrentChange(): void {\n        this.peekView!.setTitle(this.computePrimaryHeading(), this.computeSecondaryHeading());\n        const { previousRange, currentRange } = this.changes[this.index];\n        this.peekView!.show(Position.create(LineRange.getEndPosition(currentRange).line, 0),\n            this.computeHeightInLines());\n        this.diffEditorPromise!.then(({ diffEditor }) => {\n            let startLine = LineRange.getStartPosition(currentRange).line;\n            let endLine = LineRange.getEndPosition(currentRange).line;\n            if (LineRange.isEmpty(currentRange)) { // the change is a removal\n                ++endLine;\n            } else if (!LineRange.isEmpty(previousRange)) { // the change is a modification\n                --startLine;\n                ++endLine;\n            }\n            diffEditor.revealLinesInCenter(startLine + 1, endLine + 1, // monaco line numbers are 1-based\n                monaco.editor.ScrollType.Immediate);\n        });\n        this.editor.focus();\n    }\n\n    protected computePrimaryHeading(): string {\n        return this.uri.path.base;\n    }\n\n    protected computeSecondaryHeading(): string {\n        const index = this.index + 1;\n        const length = this.changes.length;\n        return length > 1 ? nls.localizeByDefault('{0} of {1} changes', index, length) :\n            nls.localizeByDefault('{0} of {1} change', index, length);\n    }\n\n    protected computeHeightInLines(): number {\n        const editor = this.editor.getControl();\n        const lineHeight = editor.getOption(monaco.editor.EditorOption.lineHeight);\n        const editorHeight = editor.getLayoutInfo().height;\n        const editorHeightInLines = Math.floor(editorHeight / lineHeight);\n\n        const { previousRange, currentRange } = this.changes[this.index];\n        const changeHeightInLines = LineRange.getLineCount(currentRange) + LineRange.getLineCount(previousRange);\n\n        return Math.min(changeHeightInLines + /* padding */ 8, Math.floor(editorHeightInLines / 3));\n    }\n\n    protected checkCreated(): void {\n        if (!this.peekView) {\n            throw new Error('create() method needs to be called first.');\n        }\n    }\n}\n\nfunction cycle(index: number, offset: -1 | 1, length: number): number {\n    return (index + offset + length) % length;\n}\n\n// adapted from https://github.com/microsoft/vscode/blob/823d54f86ee13eb357bc6e8e562e89d793f3c43b/extensions/git/src/staging.ts\nfunction applyChanges(changes: readonly Change[], original: monaco.editor.ITextModel, modified: monaco.editor.ITextModel): string {\n    const result: string[] = [];\n    let currentLine = 1;\n\n    for (const change of changes) {\n        const { previousRange, currentRange } = change;\n\n        const isInsertion = LineRange.isEmpty(previousRange);\n        const isDeletion = LineRange.isEmpty(currentRange);\n\n        const convert = (range: LineRange): [number, number] => {\n            let startLineNumber;\n            let endLineNumber;\n            if (!LineRange.isEmpty(range)) {\n                startLineNumber = range.start + 1;\n                endLineNumber = range.end;\n            } else {\n                startLineNumber = range.start;\n                endLineNumber = 0;\n            }\n            return [startLineNumber, endLineNumber];\n        };\n\n        const [originalStartLineNumber, originalEndLineNumber] = convert(previousRange);\n        const [modifiedStartLineNumber, modifiedEndLineNumber] = convert(currentRange);\n\n        let toLine = isInsertion ? originalStartLineNumber + 1 : originalStartLineNumber;\n        let toCharacter = 1;\n\n        // if this is a deletion at the very end of the document,\n        // we need to account for a newline at the end of the last line,\n        // which may have been deleted\n        if (isDeletion && originalEndLineNumber === original.getLineCount()) {\n            toLine--;\n            toCharacter = original.getLineMaxColumn(toLine);\n        }\n\n        result.push(original.getValueInRange(new monaco.Range(currentLine, 1, toLine, toCharacter)));\n\n        if (!isDeletion) {\n            let fromLine = modifiedStartLineNumber;\n            let fromCharacter = 1;\n\n            // if this is an insertion at the very end of the document,\n            // we must start the next range after the last character of the previous line,\n            // in order to take the correct eol\n            if (isInsertion && originalStartLineNumber === original.getLineCount()) {\n                fromLine--;\n                fromCharacter = modified.getLineMaxColumn(fromLine);\n            }\n\n            result.push(modified.getValueInRange(new monaco.Range(fromLine, fromCharacter, modifiedEndLineNumber + 1, 1)));\n        }\n\n        currentLine = isInsertion ? originalStartLineNumber + 1 : originalEndLineNumber + 1;\n    }\n\n    result.push(original.getValueInRange(new monaco.Range(currentLine, 1, original.getLineCount() + 1, 1)));\n\n    return result.join('');\n}\n\nclass DirtyDiffPeekView extends MonacoEditorPeekViewWidget {\n\n    private diffEditorPromise?: Promise<MonacoDiffEditor>;\n    private height?: number;\n\n    constructor(readonly widget: DirtyDiffWidget) {\n        super(widget.editor, { isResizeable: true, showArrow: true, frameWidth: 1, keepEditorSelection: true, className: 'dirty-diff' });\n    }\n\n    override async create(): Promise<MonacoDiffEditor> {\n        try {\n            super.create();\n            const diffEditor = await this.diffEditorPromise!;\n            return new Promise(resolve => {\n            // setTimeout is needed here because the non-side-by-side diff editor might still not have created the view zones;\n            // otherwise, the first change shown might not be properly revealed in the diff editor.\n            // see also https://github.com/microsoft/vscode/blob/b30900b56c4b3ca6c65d7ab92032651f4cb23f15/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts#L248\n                const disposable = diffEditor.diffEditor.onDidUpdateDiff(() => setTimeout(() => {\n                    resolve(diffEditor);\n                    disposable.dispose();\n                }));\n            });\n        } catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n\n    override show(rangeOrPos: Range | Position, heightInLines: number): void {\n        const borderColor = this.getBorderColor();\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: peekViewTitleBackground,\n            primaryHeadingColor: peekViewTitleForeground,\n            secondaryHeadingColor: peekViewTitleInfoForeground\n        });\n        this.updateActions();\n        super.show(rangeOrPos, heightInLines);\n    }\n\n    private getBorderColor(): string {\n        const { currentChange } = this.widget;\n        if (!currentChange) {\n            return peekViewBorder;\n        }\n        if (Change.isAddition(currentChange)) {\n            return ScmColors.editorGutterAddedBackground;\n        } else if (Change.isRemoval(currentChange)) {\n            return ScmColors.editorGutterDeletedBackground;\n        } else {\n            return ScmColors.editorGutterModifiedBackground;\n        }\n    }\n\n    private updateActions(): void {\n        this.clearActions();\n        const { contextKeyService, menuModelRegistry, menuCommandExecutor } = this.widget;\n        contextKeyService.with({ originalResourceScheme: this.widget.previousRevisionUri.scheme }, () => {\n            for (const menuPath of [SCM_CHANGE_TITLE_MENU, PLUGIN_SCM_CHANGE_TITLE_MENU]) {\n                const menu = menuModelRegistry.getMenu(menuPath);\n                for (const item of menu.children) {\n                    if (item instanceof ActionMenuNode) {\n                        const { command, id, label, icon, when } = item;\n                        if (icon && menuCommandExecutor.isVisible(menuPath, command, this.widget) && (!when || contextKeyService.match(when))) {\n                            this.addAction(id, label, icon, menuCommandExecutor.isEnabled(menuPath, command, this.widget), () => {\n                                menuCommandExecutor.executeCommand(menuPath, command, this.widget);\n                            });\n                        }\n                    }\n                }\n            }\n        });\n        this.addAction('dirtydiff.next', nls.localizeByDefault('Show Next Change'), codicon('arrow-down'), true,\n            () => this.widget.showNextChange());\n        this.addAction('dirtydiff.previous', nls.localizeByDefault('Show Previous Change'), codicon('arrow-up'), true,\n            () => this.widget.showPreviousChange());\n        this.addAction('peekview.close', nls.localizeByDefault('Close'), codicon('close'), true,\n            () => this.dispose());\n    }\n\n    protected override fillHead(container: HTMLElement): void {\n        super.fillHead(container, true);\n    }\n\n    protected override fillBody(container: HTMLElement): void {\n        this.diffEditorPromise = this.widget.editorProvider.createEmbeddedDiffEditor(this.editor, container, this.widget.previousRevisionUri).then(diffEditor => {\n            this.toDispose.push(diffEditor);\n            return diffEditor;\n        });\n    }\n\n    protected override doLayoutBody(height: number, width: number): void {\n        super.doLayoutBody(height, width);\n        this.layout(height, width);\n        this.height = height;\n    }\n\n    protected override onWidth(width: number): void {\n        super.onWidth(width);\n        const { height } = this;\n        if (height !== undefined) {\n            this.layout(height, width);\n        }\n    }\n\n    private layout(height: number, width: number): void {\n        this.diffEditorPromise?.then(({ diffEditor }) => diffEditor.layout({ height, width }));\n    }\n\n    protected override doRevealRange(range: Range): void {\n        this.editor.revealPosition(Position.create(range.end.line, 0), { vertical: 'centerIfOutsideViewport' });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport namespace ScmColors {\n    export const editorGutterModifiedBackground = 'editorGutter.modifiedBackground';\n    export const editorGutterAddedBackground = 'editorGutter.addedBackground';\n    export const editorGutterDeletedBackground = 'editorGutter.deletedBackground';\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class ScmContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _scmProvider: ContextKey<string | undefined>;\n    get scmProvider(): ContextKey<string | undefined> {\n        return this._scmProvider;\n    }\n\n    protected _scmResourceGroup: ContextKey<string | undefined>;\n    get scmResourceGroup(): ContextKey<string | undefined> {\n        return this._scmResourceGroup;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._scmProvider = this.contextKeyService.createKey<string | undefined>('scmProvider', undefined);\n        this._scmResourceGroup = this.contextKeyService.createKey<string | undefined>('scmResourceGroup', undefined);\n    }\n\n    match(expression: string | undefined): boolean {\n        return !expression || this.contextKeyService.match(expression);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { TreeModelImpl, TreeNode, TreeProps, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser/tree';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmProvider, ScmResourceGroup, ScmResource, ScmResourceDecorations } from './scm-provider';\nimport { ScmContextKeyService } from './scm-context-key-service';\n\nexport const ScmTreeModelProps = Symbol('ScmTreeModelProps');\nexport interface ScmTreeModelProps {\n    defaultExpansion?: 'collapsed' | 'expanded';\n    nestingThreshold?: number;\n}\n\nexport interface ScmFileChangeRootNode extends CompositeTreeNode {\n    rootUri: string;\n    children: ScmFileChangeGroupNode[];\n}\n\nexport interface ScmFileChangeGroupNode extends ExpandableTreeNode {\n    groupId: string;\n    groupLabel: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeGroupNode {\n    export function is(node: TreeNode): node is ScmFileChangeGroupNode {\n        return 'groupId' in node && 'children' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n}\n\nexport interface ScmFileChangeFolderNode extends ExpandableTreeNode, SelectableTreeNode {\n    groupId: string;\n    path: string;\n    sourceUri: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeFolderNode {\n    export function is(node: TreeNode): node is ScmFileChangeFolderNode {\n        return 'groupId' in node && 'sourceUri' in node && 'path' in node && 'children' in node;\n    }\n}\n\nexport interface ScmFileChangeNode extends SelectableTreeNode {\n    sourceUri: string;\n    decorations?: ScmResourceDecorations;\n}\n\nexport namespace ScmFileChangeNode {\n    export function is(node: TreeNode): node is ScmFileChangeNode {\n        return 'sourceUri' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n    export function getGroupId(node: ScmFileChangeNode): string {\n        const parentNode = node.parent;\n        if (!(parentNode && (ScmFileChangeFolderNode.is(parentNode) || ScmFileChangeGroupNode.is(parentNode)))) {\n            throw new Error('bad node');\n        }\n        return parentNode.groupId;\n    }\n\n}\n\n@injectable()\nexport abstract class ScmTreeModel extends TreeModelImpl {\n\n    private _languageId: string | undefined;\n\n    protected provider: ScmProvider | undefined;\n\n    @inject(TreeProps) protected readonly props: ScmTreeModelProps;\n\n    @inject(ScmContextKeyService) protected readonly contextKeys: ScmContextKeyService;\n\n    get languageId(): string | undefined {\n        return this._languageId;\n    }\n\n    abstract canTabToWidget(): boolean;\n\n    protected _viewMode: 'tree' | 'list' = 'list';\n    set viewMode(id: 'tree' | 'list') {\n        const oldSelection = this.selectedNodes;\n        this._viewMode = id;\n        if (this.root) {\n            this.root = this.createTree();\n\n            for (const oldSelectedNode of oldSelection) {\n                const newNode = this.getNode(oldSelectedNode.id);\n                if (SelectableTreeNode.is(newNode)) {\n                    this.revealNode(newNode);  // this call can run asynchronously\n                }\n            }\n        }\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this._viewMode;\n    }\n\n    abstract get rootUri(): string | undefined;\n    abstract get groups(): ScmResourceGroup[];\n\n    protected createTree(): ScmFileChangeRootNode {\n        const root = {\n            id: 'file-change-tree-root',\n            parent: undefined,\n            visible: false,\n            rootUri: this.rootUri,\n            children: []\n        } as ScmFileChangeRootNode;\n\n        const groupNodes = this.groups\n            .filter(group => !!group.resources.length || !group.hideWhenEmpty)\n            .map(group => this.toGroupNode(group, root));\n        root.children = groupNodes;\n\n        return root;\n    }\n\n    protected toGroupNode(group: ScmResourceGroup, parent: CompositeTreeNode): ScmFileChangeGroupNode {\n        const groupNode: ScmFileChangeGroupNode = {\n            id: `${group.id}`,\n            groupId: group.id,\n            groupLabel: group.label,\n            parent,\n            children: [],\n            expanded: true,\n        };\n\n        const sortedResources = group.resources.sort((r1, r2) =>\n            r1.sourceUri.toString().localeCompare(r2.sourceUri.toString())\n        );\n\n        switch (this._viewMode) {\n            case 'list':\n                groupNode.children = sortedResources.map(resource => this.toFileChangeNode(resource, groupNode));\n                break;\n            case 'tree':\n                const rootUri = group.provider.rootUri;\n                if (rootUri) {\n                    const resourcePaths = sortedResources.map(resource => {\n                        const relativePath = new URI(rootUri).relative(resource.sourceUri);\n                        const pathParts = relativePath ? relativePath.toString().split('/') : [];\n                        return { resource, pathParts };\n                    });\n                    groupNode.children = this.buildFileChangeTree(resourcePaths, 0, sortedResources.length, 0, groupNode);\n                }\n                break;\n        }\n\n        return groupNode;\n    }\n\n    protected buildFileChangeTree(\n        sortedResources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): (ScmFileChangeFolderNode | ScmFileChangeNode)[] {\n        const result: (ScmFileChangeFolderNode | ScmFileChangeNode)[] = [];\n\n        let folderStart = start;\n        while (folderStart < end) {\n            const firstFileChange = sortedResources[folderStart];\n            if (level === firstFileChange.pathParts.length - 1) {\n                result.push(this.toFileChangeNode(firstFileChange.resource, parent));\n                folderStart++;\n            } else {\n                let index = folderStart + 1;\n                while (index < end) {\n                    if (sortedResources[index].pathParts[level] !== firstFileChange.pathParts[level]) {\n                        break;\n                    }\n                    index++;\n                }\n                const folderEnd = index;\n\n                const nestingThreshold = this.props.nestingThreshold || 1;\n                if (folderEnd - folderStart < nestingThreshold) {\n                    // Inline these (i.e. do not create another level in the tree)\n                    for (let i = folderStart; i < folderEnd; i++) {\n                        result.push(this.toFileChangeNode(sortedResources[i].resource, parent));\n                    }\n                } else {\n                    const firstFileParts = firstFileChange.pathParts;\n                    const lastFileParts = sortedResources[folderEnd - 1].pathParts;\n                    // Multiple files with first folder.\n                    // See if more folder levels match and include those if so.\n                    let thisLevel = level + 1;\n                    while (thisLevel < firstFileParts.length - 1 && thisLevel < lastFileParts.length - 1 && firstFileParts[thisLevel] === lastFileParts[thisLevel]) {\n                        thisLevel++;\n                    }\n                    const nodeRelativePath = firstFileParts.slice(level, thisLevel).join('/');\n                    result.push(this.toFileChangeFolderNode(sortedResources, folderStart, folderEnd, thisLevel, nodeRelativePath, parent));\n                }\n                folderStart = folderEnd;\n            }\n        };\n        return result.sort(this.compareNodes);\n    }\n\n    protected compareNodes = (a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode) => this.doCompareNodes(a, b);\n    protected doCompareNodes(a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode): number {\n        const isFolderA = ScmFileChangeFolderNode.is(a);\n        const isFolderB = ScmFileChangeFolderNode.is(b);\n        if (isFolderA && !isFolderB) {\n            return -1;\n        }\n        if (isFolderB && !isFolderA) {\n            return 1;\n        }\n        return a.sourceUri.localeCompare(b.sourceUri);\n    }\n\n    protected toFileChangeFolderNode(\n        resources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        nodeRelativePath: string,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): ScmFileChangeFolderNode {\n        const rootUri = this.getRoot(parent).rootUri;\n        let parentPath: string = rootUri;\n        if (ScmFileChangeFolderNode.is(parent)) {\n            parentPath = parent.sourceUri;\n        }\n        const sourceUri = new URI(parentPath).resolve(nodeRelativePath);\n\n        const defaultExpansion = this.props.defaultExpansion ? (this.props.defaultExpansion === 'expanded') : true;\n        const id = `${parent.groupId}:${String(sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const folderNode: ScmFileChangeFolderNode = {\n            id,\n            groupId: parent.groupId,\n            path: nodeRelativePath,\n            sourceUri: String(sourceUri),\n            children: [],\n            parent,\n            expanded: ExpandableTreeNode.is(oldNode) ? oldNode.expanded : defaultExpansion,\n            selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        folderNode.children = this.buildFileChangeTree(resources, start, end, level, folderNode);\n        return folderNode;\n    }\n\n    protected getRoot(node: ScmFileChangeGroupNode | ScmFileChangeFolderNode): ScmFileChangeRootNode {\n        let parent = node.parent!;\n        while (ScmFileChangeGroupNode.is(parent) && ScmFileChangeFolderNode.is(parent)) {\n            parent = parent.parent!;\n        }\n        return parent as ScmFileChangeRootNode;\n    }\n\n    protected toFileChangeNode(resource: ScmResource, parent: CompositeTreeNode): ScmFileChangeNode {\n        const id = `${resource.group.id}:${String(resource.sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const node = {\n            id,\n            sourceUri: String(resource.sourceUri),\n            decorations: resource.decorations,\n            parent,\n            selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        if (node.selected) {\n            this.selectionService.addSelection(node);\n        }\n        return node;\n    }\n\n    protected async revealNode(node: TreeNode): Promise<void> {\n        if (ScmFileChangeFolderNode.is(node) || ScmFileChangeNode.is(node)) {\n            const parentNode = node.parent;\n            if (ExpandableTreeNode.is(parentNode)) {\n                await this.revealNode(parentNode);\n                if (!parentNode.expanded) {\n                    await this.expandNode(parentNode);\n                }\n            }\n        }\n    }\n\n    getResourceFromNode(node: ScmFileChangeNode): ScmResource | undefined {\n        const groupId = ScmFileChangeNode.getGroupId(node);\n        const group = this.findGroup(groupId);\n        if (group) {\n            return group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n        }\n    }\n\n    getResourceGroupFromNode(node: ScmFileChangeGroupNode): ScmResourceGroup | undefined {\n        return this.findGroup(node.groupId);\n    }\n\n    getResourcesFromFolderNode(node: ScmFileChangeFolderNode): ScmResource[] {\n        const resources: ScmResource[] = [];\n        const group = this.findGroup(node.groupId);\n        if (group) {\n            this.collectResources(resources, node, group);\n        }\n        return resources;\n\n    }\n    getSelectionArgs(selectedNodes: Readonly<SelectableTreeNode[]>): ScmResource[] {\n        const resources: ScmResource[] = [];\n        for (const node of selectedNodes) {\n            if (ScmFileChangeNode.is(node)) {\n                const groupId = ScmFileChangeNode.getGroupId(node);\n                const group = this.findGroup(groupId);\n                if (group) {\n                    const selectedResource = group.resources.find(r => String(r.sourceUri) === node.sourceUri);\n                    if (selectedResource) {\n                        resources.push(selectedResource);\n                    }\n                }\n            }\n            if (ScmFileChangeFolderNode.is(node)) {\n                const group = this.findGroup(node.groupId);\n                if (group) {\n                    this.collectResources(resources, node, group);\n                }\n            }\n        }\n        // Remove duplicates which may occur if user selected folder and nested folder\n        return resources.filter((item1, index) => resources.findIndex(item2 => item1.sourceUri === item2.sourceUri) === index);\n    }\n\n    protected collectResources(resources: ScmResource[], node: TreeNode, group: ScmResourceGroup): void {\n        if (ScmFileChangeFolderNode.is(node)) {\n            for (const child of node.children) {\n                this.collectResources(resources, child, group);\n            }\n        } else if (ScmFileChangeNode.is(node)) {\n            const resource = group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n            resources.push(resource);\n        }\n    }\n\n    execInNodeContext(node: TreeNode, callback: () => void): void {\n        if (!this.provider) {\n            return;\n        }\n\n        let groupId: string;\n        if (ScmFileChangeGroupNode.is(node) || ScmFileChangeFolderNode.is(node)) {\n            groupId = node.groupId;\n        } else if (ScmFileChangeNode.is(node)) {\n            groupId = ScmFileChangeNode.getGroupId(node);\n        } else {\n            return;\n        }\n\n        this.contextKeys.scmProvider.set(this.provider.id);\n        this.contextKeys.scmResourceGroup.set(groupId);\n        try {\n            callback();\n        } finally {\n        }\n    }\n\n    /*\n     * Normally the group would always be expected to be found.  However if the tree is restored\n     * in restoreState then the tree may be rendered before the groups have been created\n     * in the provider.  The provider's groups property will be empty in such a situation.\n     * We want to render the tree (as that is the point of restoreState, we can render\n     * the tree in the saved state before the provider has provided status).  We therefore must\n     * be prepared to render the tree without having the ScmResourceGroup or ScmResource\n     * objects.\n     */\n    findGroup(groupId: string): ScmResourceGroup | undefined {\n        return this.groups.find(g => g.id === groupId);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override storeState(): any {\n        return {\n            ...super.storeState(),\n            mode: this.viewMode,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override restoreState(oldState: any): void {\n        super.restoreState(oldState);\n        this.viewMode = oldState.mode === 'tree' ? 'tree' : 'list';\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport * as React from '@theia/core/shared/react';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { DisposableCollection, Disposable } from '@theia/core/lib/common/disposable';\nimport { TreeWidget, TreeNode, SelectableTreeNode, TreeModel, TreeProps, NodeProps, TREE_NODE_SEGMENT_CLASS, TREE_NODE_SEGMENT_GROW_CLASS } from '@theia/core/lib/browser/tree';\nimport { ScmTreeModel, ScmFileChangeRootNode, ScmFileChangeGroupNode, ScmFileChangeFolderNode, ScmFileChangeNode } from './scm-tree-model';\nimport { MenuCommandExecutor, MenuModelRegistry, ActionMenuNode, CompoundMenuNode, MenuPath } from '@theia/core/lib/common/menu';\nimport { ScmResource } from './scm-provider';\nimport { ContextMenuRenderer, LabelProvider, CorePreferences, DiffUris, ACTION_ITEM } from '@theia/core/lib/browser';\nimport { ScmContextKeyService } from './scm-context-key-service';\nimport { EditorWidget, EditorManager, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { IconThemeService } from '@theia/core/lib/browser/icon-theme-service';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { Decoration, DecorationsService } from '@theia/core/lib/browser/decorations-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\n\n@injectable()\nexport class ScmTreeWidget extends TreeWidget {\n\n    static ID = 'scm-resource-widget';\n\n    static RESOURCE_GROUP_CONTEXT_MENU = ['RESOURCE_GROUP_CONTEXT_MENU'];\n    static RESOURCE_GROUP_INLINE_MENU = ['RESOURCE_GROUP_CONTEXT_MENU', 'inline'];\n\n    static RESOURCE_FOLDER_CONTEXT_MENU = ['RESOURCE_FOLDER_CONTEXT_MENU'];\n    static RESOURCE_FOLDER_INLINE_MENU = ['RESOURCE_FOLDER_CONTEXT_MENU', 'inline'];\n\n    static RESOURCE_CONTEXT_MENU = ['RESOURCE_CONTEXT_MENU'];\n    static RESOURCE_INLINE_MENU = ['RESOURCE_CONTEXT_MENU', 'inline'];\n\n    @inject(MenuCommandExecutor) protected readonly menuCommandExecutor: MenuCommandExecutor;\n    @inject(MenuModelRegistry) protected readonly menus: MenuModelRegistry;\n    @inject(ScmContextKeyService) protected readonly contextKeys: ScmContextKeyService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(DiffNavigatorProvider) protected readonly diffNavigatorProvider: DiffNavigatorProvider;\n    @inject(IconThemeService) protected readonly iconThemeService: IconThemeService;\n    @inject(DecorationsService) protected readonly decorationsService: DecorationsService;\n    @inject(ColorRegistry) protected readonly colors: ColorRegistry;\n    @inject(ThemeService) protected readonly themeService: ThemeService;\n\n    // TODO: Make TreeWidget generic to better type those fields.\n    override readonly model: ScmTreeModel;\n\n    constructor(\n        @inject(TreeProps) props: TreeProps,\n        @inject(TreeModel) treeModel: ScmTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super(props, treeModel, contextMenuRenderer);\n        this.id = ScmTreeWidget.ID;\n        this.addClass('groups-outer-container');\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.toDispose.push(this.themeService.onDidColorThemeChange(() => this.update()));\n    }\n\n    set viewMode(id: 'tree' | 'list') {\n        // Close the search box because the structure of the tree will change dramatically\n        // and the search results will be out of date.\n        this.searchBox.hide();\n        this.model.viewMode = id;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.model.viewMode;\n    }\n\n    /**\n     * Render the node given the tree node and node properties.\n     * @param node the tree node.\n     * @param props the node properties.\n     */\n    protected override renderNode(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n        const label = this.labelProvider.getName(node);\n        const searchHighlights = this.searchHighlights?.get(node.id);\n        // The group nodes should not be subject to highlighting.\n        const caption = (searchHighlights && !ScmFileChangeGroupNode.is(node)) ? this.toReactNode(label, searchHighlights) : label;\n\n        if (ScmFileChangeGroupNode.is(node)) {\n            const content = <ScmResourceGroupElement\n                key={`${node.groupId}`}\n                model={this.model}\n                treeNode={node}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                commandExecutor={this.menuCommandExecutor}\n                contextMenuRenderer={this.contextMenuRenderer}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n            />;\n\n            return React.createElement('div', attributes, content);\n\n        }\n        if (ScmFileChangeFolderNode.is(node)) {\n            const content = <ScmResourceFolderElement\n                key={String(node.sourceUri)}\n                model={this.model}\n                treeNode={node}\n                sourceUri={node.sourceUri}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                commandExecutor={this.menuCommandExecutor}\n                contextMenuRenderer={this.contextMenuRenderer}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n            />;\n\n            return React.createElement('div', attributes, content);\n        }\n        if (ScmFileChangeNode.is(node)) {\n            const parentPath =\n                (node.parent && ScmFileChangeFolderNode.is(node.parent))\n                    ? new URI(node.parent.sourceUri) : new URI(this.model.rootUri);\n\n            const content = <ScmResourceComponent\n                key={node.sourceUri}\n                model={this.model}\n                treeNode={node}\n                contextMenuRenderer={this.contextMenuRenderer}\n                commandExecutor={this.menuCommandExecutor}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                caption={caption}\n                {...{\n                    ...this.props,\n                    parentPath,\n                    sourceUri: node.sourceUri,\n                    decoration: this.decorationsService.getDecoration(new URI(node.sourceUri), true)[0],\n                    colors: this.colors,\n                    isLightTheme: this.isCurrentThemeLight(),\n                    renderExpansionToggle: () => this.renderExpansionToggle(node, props),\n                }}\n            />;\n            return React.createElement('div', attributes, content);\n        }\n        return super.renderNode(node, props);\n    }\n\n    protected override createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        if (this.model.canTabToWidget()) {\n            return {\n                ...super.createContainerAttributes(),\n                tabIndex: 0\n            };\n        }\n        return super.createContainerAttributes();\n    }\n\n    /**\n     * The ARROW_LEFT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_LEFT key behaves exactly\n     * as it does in explorer.  It collapses the tree node if the folder is expanded and\n     * it moves the selection up to the parent folder if the folder is collapsed (no-op if no parent folder, as\n     * group headers are not selectable).  This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_LEFT key moves up through the\n     * change chunks within each file.  If the selected chunk is the first chunk in the file\n     * then the file selection is moved to the previous file (no-op if no previous file).\n     *\n     * Note that when cursoring through change chunks, the ARROW_LEFT key cannot be used to\n     * move up through the parent folders of the file tree.  If users want to do this, using\n     * keys only, then they must press ARROW_UP repeatedly until the selected node is the folder\n     * node and then press ARROW_LEFT.\n     */\n    protected override async handleLeft(event: KeyboardEvent): Promise<void> {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleLeft(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.hasPrevious()) {\n                        diffNavigator.previous();\n                    } else {\n                        const previousNode = this.moveToPreviousFileNode();\n                        if (previousNode) {\n                            const previousResource = this.model.getResourceFromNode(previousNode);\n                            if (previousResource) {\n                                this.openResource(previousResource);\n                            }\n                        }\n                    }\n                    return;\n                }\n            }\n        }\n        return super.handleLeft(event);\n    }\n\n    /**\n     * The ARROW_RIGHT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_RIGHT key behaves exactly\n     * as it does in explorer.  It expands the tree node if the folder is collapsed and\n     * it moves the selection to the first child node if the folder is expanded.\n     * This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_RIGHT key moves down through the\n     * change chunks within each file.  If the selected chunk is the last chunk in the file\n     * then the file selection is moved to the next file (no-op if no next file).\n     */\n    protected override async handleRight(event: KeyboardEvent): Promise<void> {\n        if (this.model.selectedNodes.length === 0) {\n            const firstNode = this.getFirstSelectableNode();\n            // Selects the first visible resource as none are selected.\n            if (!firstNode) {\n                return;\n            }\n            this.model.selectNode(firstNode);\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleRight(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.hasNext()) {\n                        diffNavigator.next();\n                    } else {\n                        const nextNode = this.moveToNextFileNode();\n                        if (nextNode) {\n                            const nextResource = this.model.getResourceFromNode(nextNode);\n                            if (nextResource) {\n                                this.openResource(nextResource);\n                            }\n                        }\n                    }\n                }\n                return;\n            }\n        }\n        return super.handleRight(event);\n    }\n\n    protected override handleEnter(event: KeyboardEvent): void {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (selectedResource) {\n                    this.openResource(selectedResource);\n                }\n                return;\n            }\n        }\n        super.handleEnter(event);\n    }\n\n    async goToPreviousChange(): Promise<void> {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                if (ScmFileChangeNode.is(selectedNode)) {\n                    const selectedResource = this.model.getResourceFromNode(selectedNode);\n                    if (!selectedResource) {\n                        return;\n                    }\n                    const widget = await this.openResource(selectedResource);\n\n                    if (widget) {\n                        const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                        if (diffNavigator.hasPrevious()) {\n                            diffNavigator.previous();\n                        } else {\n                            const previousNode = this.moveToPreviousFileNode();\n                            if (previousNode) {\n                                const previousResource = this.model.getResourceFromNode(previousNode);\n                                if (previousResource) {\n                                    this.openResource(previousResource);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    async goToNextChange(): Promise<void> {\n        if (this.model.selectedNodes.length === 0) {\n            const firstNode = this.getFirstSelectableNode();\n            // Selects the first visible resource as none are selected.\n            if (!firstNode) {\n                return;\n            }\n            this.model.selectNode(firstNode);\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.model.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return;\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.hasNext()) {\n                        diffNavigator.next();\n                    } else {\n                        const nextNode = this.moveToNextFileNode();\n                        if (nextNode) {\n                            const nextResource = this.model.getResourceFromNode(nextNode);\n                            if (nextResource) {\n                                this.openResource(nextResource);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    selectNodeByUri(uri: URI): void {\n        for (const group of this.model.groups) {\n            const sourceUri = new URI(uri.path.toString());\n            const id = `${group.id}:${sourceUri.toString()}`;\n            const node = this.model.getNode(id);\n            if (SelectableTreeNode.is(node)) {\n                this.model.selectNode(node);\n                return;\n            }\n        }\n    }\n\n    protected getFirstSelectableNode(): SelectableTreeNode | undefined {\n        if (this.model.root) {\n            const root = this.model.root as ScmFileChangeRootNode;\n            const groupNode = root.children[0];\n            return groupNode.children[0];\n        }\n    }\n\n    protected moveToPreviousFileNode(): ScmFileChangeNode | undefined {\n        let previousNode = this.model.getPrevSelectableNode();\n        while (previousNode) {\n            if (ScmFileChangeNode.is(previousNode)) {\n                this.model.selectNode(previousNode);\n                return previousNode;\n            }\n            previousNode = this.model.getPrevSelectableNode(previousNode);\n        };\n    }\n\n    protected moveToNextFileNode(): ScmFileChangeNode | undefined {\n        let nextNode = this.model.getNextSelectableNode();\n        while (nextNode) {\n            if (ScmFileChangeNode.is(nextNode)) {\n                this.model.selectNode(nextNode);\n                return nextNode;\n            }\n            nextNode = this.model.getNextSelectableNode(nextNode);\n        };\n    }\n\n    protected async openResource(resource: ScmResource): Promise<EditorWidget | undefined> {\n        try {\n            await resource.open();\n        } catch (e) {\n            console.error('Failed to open a SCM resource', e);\n            return undefined;\n        }\n\n        let standaloneEditor: EditorWidget | undefined;\n        const resourcePath = resource.sourceUri.path.toString();\n\n        for (const widget of this.editorManager.all) {\n            const resourceUri = widget.editor.document.uri;\n            const editorResourcePath = new URI(resourceUri).path.toString();\n            if (resourcePath === editorResourcePath) {\n                if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME) {\n                    // prefer diff editor\n                    return widget;\n                } else {\n                    standaloneEditor = widget;\n                }\n            }\n            if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME\n                && resourceUri === resource.sourceUri.toString()) {\n                return widget;\n            }\n        }\n        // fallback to standalone editor\n        return standaloneEditor;\n    }\n\n    protected override getPaddingLeft(node: TreeNode, props: NodeProps): number {\n        if (this.viewMode === 'list') {\n            if (props.depth === 1) {\n                return this.props.expansionTogglePadding;\n            }\n        }\n        return super.getPaddingLeft(node, props);\n    }\n\n    protected override getDepthPadding(depth: number): number {\n        return super.getDepthPadding(depth) + 5;\n    }\n\n    protected isCurrentThemeLight(): boolean {\n        const type = this.themeService.getCurrentTheme().type;\n        return type.toLocaleLowerCase().includes('light');\n    }\n\n    protected override needsExpansionTogglePadding(node: TreeNode): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\n            return false;\n        }\n        return super.needsExpansionTogglePadding(node);\n    }\n\n}\n\nexport namespace ScmTreeWidget {\n    export namespace Styles {\n        export const NO_SELECT = 'no-select';\n    }\n    // This is an 'abstract' base interface for all the element component props.\n    export interface Props {\n        treeNode: TreeNode;\n        model: ScmTreeModel;\n        menus: MenuModelRegistry;\n        contextKeys: ScmContextKeyService;\n        labelProvider: LabelProvider;\n        contextMenuRenderer: ContextMenuRenderer;\n        corePreferences?: CorePreferences;\n        caption: React.ReactNode;\n    }\n}\n\nexport abstract class ScmElement<P extends ScmElement.Props = ScmElement.Props> extends React.Component<P, ScmElement.State> {\n\n    constructor(props: P) {\n        super(props);\n        this.state = {\n            hover: false\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n    override componentDidMount(): void {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n    }\n    override componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    protected detectHover = (element: HTMLElement | null) => {\n        if (element) {\n            window.requestAnimationFrame(() => {\n                const hover = element.matches(':hover');\n                this.setState({ hover });\n            });\n        }\n    };\n    protected showHover = () => this.setState({ hover: true });\n    protected hideHover = () => this.setState({ hover: false });\n\n    protected renderContextMenu = (event: React.MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n        const { treeNode: node, contextMenuRenderer } = this.props;\n        this.props.model.execInNodeContext(node, () => {\n            contextMenuRenderer.render({\n                menuPath: this.contextMenuPath,\n                anchor: event.nativeEvent,\n                args: this.contextMenuArgs\n            });\n        });\n    };\n\n    protected abstract get contextMenuPath(): MenuPath;\n    protected abstract get contextMenuArgs(): any[];\n\n}\nexport namespace ScmElement {\n    export interface Props extends ScmTreeWidget.Props {\n        renderExpansionToggle: () => React.ReactNode;\n        commandExecutor: MenuCommandExecutor;\n    }\n    export interface State {\n        hover: boolean\n    }\n}\n\nexport class ScmResourceComponent extends ScmElement<ScmResourceComponent.Props> {\n\n    override render(): JSX.Element | undefined {\n        const { hover } = this.state;\n        const { model, treeNode, colors, parentPath, sourceUri, decoration, labelProvider, commandExecutor, menus, contextKeys, caption, isLightTheme } = this.props;\n        const resourceUri = new URI(sourceUri);\n\n        const decorationIcon = treeNode.decorations;\n        const themedIcon = isLightTheme ? decorationIcon?.icon : decorationIcon?.iconDark;\n        const classNames: string[] = themedIcon ? ['decoration-icon', themedIcon] : ['decoration-icon', 'status'];\n\n        const icon = labelProvider.getIcon(resourceUri);\n        const color = decoration && decoration.colorId && !themedIcon ? `var(${colors.toCssVariableName(decoration.colorId)})` : '';\n        const letter = decoration && decoration.letter && !themedIcon ? decoration.letter : '';\n        const tooltip = decoration && decoration.tooltip || '';\n        const textDecoration = treeNode.decorations?.strikeThrough === true ? 'line-through' : 'normal';\n        const relativePath = parentPath.relative(resourceUri.parent);\n        const path = relativePath ? relativePath.fsPath() : labelProvider.getLongName(resourceUri.parent);\n        const title = tooltip.length !== 0\n            ? `${resourceUri.path.fsPath()} • ${tooltip}`\n            : resourceUri.path.fsPath();\n\n        return <div key={sourceUri}\n            className={`scmItem ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n            title={title}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDoubleClick} >\n            <span className={icon + ' file-icon'} />\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name' style={{ textDecoration }}>{caption}</span>\n                <span className='path' style={{ textDecoration }}>{path}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_INLINE_MENU),\n                menuPath: ScmTreeWidget.RESOURCE_INLINE_MENU,\n                commandExecutor,\n                args: this.contextMenuArgs,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n                <div title={tooltip} className={classNames.join(' ')} style={{ color }}>\n                    {letter}\n                </div>\n            </ScmInlineActions>\n        </div >;\n    }\n\n    protected open = () => {\n        const resource = this.props.model.getResourceFromNode(this.props.treeNode);\n        if (resource) {\n            resource.open();\n        }\n    };\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeNode.is(node) && node === this.props.treeNode)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.props.model.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        const selectedResource = this.props.model.getResourceFromNode(this.props.treeNode);\n        if (selectedResource) {\n            return [selectedResource];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n\n    protected hasCtrlCmdOrShiftMask(event: TreeWidget.ModifierAwareEvent): boolean {\n        const { metaKey, ctrlKey, shiftKey } = event;\n        return (isOSX && metaKey) || ctrlKey || shiftKey;\n    }\n\n    /**\n     * Handle the single clicking of nodes present in the widget.\n     */\n    protected handleClick = (event: React.MouseEvent) => {\n        if (!this.hasCtrlCmdOrShiftMask(event)) {\n            // Determine the behavior based on the preference value.\n            const isSingle = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'singleClick';\n            if (isSingle) {\n                this.open();\n            }\n        }\n    };\n\n    /**\n     * Handle the double clicking of nodes present in the widget.\n     */\n    protected handleDoubleClick = () => {\n        // Determine the behavior based on the preference value.\n        const isDouble = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'doubleClick';\n        // Nodes should only be opened through double clicking if the correct preference is set.\n        if (isDouble) {\n            this.open();\n        }\n    };\n}\n\nexport namespace ScmResourceComponent {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeNode;\n        parentPath: URI;\n        sourceUri: string;\n        decoration: Decoration | undefined;\n        colors: ColorRegistry;\n        isLightTheme: boolean\n    }\n}\n\nexport class ScmResourceGroupElement extends ScmElement<ScmResourceGroupComponent.Props> {\n\n    override render(): JSX.Element {\n        const { hover } = this.state;\n        const { model, treeNode, menus, commandExecutor, contextKeys, caption } = this.props;\n        return <div className={`theia-header scm-theia-header ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}>\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`}>{caption}</div>\n            <ScmInlineActions {...{\n                hover,\n                args: this.contextMenuArgs,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_GROUP_INLINE_MENU),\n                menuPath: ScmTreeWidget.RESOURCE_GROUP_INLINE_MENU,\n                commandExecutor,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n                {this.renderChangeCount()}\n            </ScmInlineActions>\n        </div>;\n    }\n\n    protected renderChangeCount(): React.ReactNode {\n        const group = this.props.model.getResourceGroupFromNode(this.props.treeNode);\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{group ? group.resources.length : 0}</span>\n        </div>;\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_GROUP_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        const group = this.props.model.getResourceGroupFromNode(this.props.treeNode);\n        if (group) {\n            return [group];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n}\nexport namespace ScmResourceGroupComponent {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeGroupNode;\n    }\n}\n\nexport class ScmResourceFolderElement extends ScmElement<ScmResourceFolderElement.Props> {\n\n    override render(): JSX.Element {\n        const { hover } = this.state;\n        const { model, treeNode, sourceUri, labelProvider, commandExecutor, menus, contextKeys, caption } = this.props;\n        const sourceFileStat = FileStat.dir(sourceUri);\n        const icon = labelProvider.getIcon(sourceFileStat);\n        const title = new URI(sourceUri).path.fsPath();\n\n        return <div key={sourceUri}\n            className={`scmItem  ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS} ${ScmTreeWidget.Styles.NO_SELECT}`}\n            title={title}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n        >\n            {this.props.renderExpansionToggle()}\n            <span className={icon + ' file-icon'} />\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{caption}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_FOLDER_INLINE_MENU),\n                menuPath: ScmTreeWidget.RESOURCE_FOLDER_INLINE_MENU,\n                commandExecutor,\n                args: this.contextMenuArgs,\n                contextKeys,\n                model,\n                treeNode\n            }}>\n            </ScmInlineActions>\n        </div >;\n\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_FOLDER_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeFolderNode.is(node) && node.sourceUri === this.props.sourceUri)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.props.model.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        return this.props.model.getResourcesFromFolderNode(this.props.treeNode);\n    }\n\n}\n\nexport namespace ScmResourceFolderElement {\n    export interface Props extends ScmElement.Props {\n        treeNode: ScmFileChangeFolderNode;\n        sourceUri: string;\n    }\n}\n\nexport class ScmInlineActions extends React.Component<ScmInlineActions.Props> {\n    override render(): React.ReactNode {\n        const { hover, menu, menuPath, args, commandExecutor, model, treeNode, contextKeys, children } = this.props;\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                {hover && menu.children\n                    .map((node, index) => node instanceof ActionMenuNode &&\n                        <ScmInlineAction key={index} {...{ node, menuPath, args, commandExecutor, model, treeNode, contextKeys }} />)}\n            </div>\n            {children}\n        </div>;\n    }\n}\nexport namespace ScmInlineActions {\n    export interface Props {\n        hover: boolean;\n        menu: CompoundMenuNode;\n        menuPath: MenuPath;\n        commandExecutor: MenuCommandExecutor;\n        model: ScmTreeModel;\n        treeNode: TreeNode;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n        children?: React.ReactNode;\n    }\n}\n\nexport class ScmInlineAction extends React.Component<ScmInlineAction.Props> {\n    override render(): React.ReactNode {\n        const { node, model, treeNode, args, commandExecutor, menuPath, contextKeys } = this.props;\n\n        let isActive: boolean = false;\n        model.execInNodeContext(treeNode, () => {\n            isActive = contextKeys.match(node.when);\n        });\n\n        if (!commandExecutor.isVisible(menuPath, node.command, ...args) || !isActive) {\n            return false;\n        }\n        return <div className='theia-scm-inline-action'>\n            <a className={`${node.icon} ${ACTION_ITEM}`} title={node.label} onClick={this.execute} />\n        </div>;\n    }\n\n    protected execute = (event: React.MouseEvent) => {\n        event.stopPropagation();\n\n        const { commandExecutor, menuPath, node, args } = this.props;\n        commandExecutor.executeCommand([menuPath[0]], node.command, ...args);\n    };\n}\nexport namespace ScmInlineAction {\n    export interface Props {\n        node: ActionMenuNode;\n        commandExecutor: MenuCommandExecutor;\n        menuPath: MenuPath;\n        model: ScmTreeModel;\n        treeNode: TreeNode;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n    }\n}\n","// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n","export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n","import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n","export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n","import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n","import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n","import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n","import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n","import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n","import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n","/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n","import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n","import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n","import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n","export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n","export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n","export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n","export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value","convertChangesToXML","escapeHTML","join","s","n","replace","arrayDiff","Diff","tokenize","slice","removeEmpty","diffArrays","oldArr","newArr","callback","diff","prototype","oldString","newString","options","self","done","setTimeout","undefined","castInput","newLen","oldLen","editLength","maxEditLength","Math","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","Date","now","bestPath","oldPos","lastComponent","newPos","extractCommon","count","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","buildValues","useLongestToken","exec","path","oldPosInc","last","previousComponent","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","split","chars","components","nextComponent","reverse","componentPos","componentLen","component","map","oldValue","tmp","finalComponent","pop","characterDiff","diffChars","oldStr","newStr","cssDiff","diffCss","objectPrototypeToString","Object","toString","jsonDiff","lineDiff","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","call","diffJson","oldObj","newObj","obj","stack","replacementStack","replacer","key","canonicalizedObj","Array","toJSON","sortedKeys","hasOwnProperty","sort","stripTrailingCr","retLines","linesAndNewlines","line","newlineIsToken","ignoreWhitespace","trim","diffLines","diffTrimmedLines","generateOptions","sentenceDiff","diffSentences","extendedWordChars","reWhitespace","wordDiff","test","tokens","splice","diffWords","diffWordsWithSpace","applyPatch","source","uniDiff","parsePatch","isArray","Error","lines","delimiters","match","hunks","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","diffOffset","newLines","delimiter","linedelimiters","previousOperation","_k","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","context","contextLines","entry","oldRangeStart","newRangeStart","curRange","oldLine","newLine","current","prev","contextSize","newStart","oldEOFNewline","newEOFNewline","noNlBeforeAdds","formatPatch","apply","createTwoFilesPatch","createPatch","fileName","calcLineCount","calcOldNewLineCount","merge","mine","theirs","base","loadPatch","fileNameChanged","selectField","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","state","matchChanges","matchIndex","contextChanges","conflicted","reduce","removeChanges","delta","changeContent","forEach","myCount","theirCount","diffstr","list","parseIndex","header","parseFileHeader","parseHunk","strict","fileHeader","keyPrefix","chunkHeaderIndex","chunkHeaderLine","chunkHeader","addCount","removeCount","indexOf","reversePatch","l","startsWith","a","b","start","wantForward","backwardExhausted","forwardExhausted","defaults","name"],"sourceRoot":""}