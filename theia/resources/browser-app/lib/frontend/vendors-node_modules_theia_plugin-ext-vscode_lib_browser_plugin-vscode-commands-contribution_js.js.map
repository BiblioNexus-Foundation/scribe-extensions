{"version":3,"file":"vendors-node_modules_theia_plugin-ext-vscode_lib_browser_plugin-vscode-commands-contribution_js.js","mappings":"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","sources":["webpack:///../node_modules/@theia/outline-view/src/browser/outline-view-contribution.ts?","webpack:///../node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-commands-contribution.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { FrontendApplication } from '@theia/core/lib/browser/frontend-application';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser/frontend-application-contribution';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { codicon, Widget } from '@theia/core/lib/browser/widgets';\nimport { OutlineViewWidget } from './outline-view-widget';\nimport { CompositeTreeNode } from '@theia/core/lib/browser/tree';\nimport { OS } from '@theia/core/lib/common/os';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const OUTLINE_WIDGET_FACTORY_ID = 'outline-view';\n\n/**\n * Collection of `outline-view` commands.\n */\nexport namespace OutlineViewCommands {\n    /**\n     * Command which collapses all nodes from the `outline-view` tree.\n     */\n    export const COLLAPSE_ALL: Command = {\n        id: 'outlineView.collapse.all',\n        iconClass: codicon('collapse-all')\n    };\n\n    /**\n     * Command which expands all nodes from the `outline-view` tree.\n     */\n    export const EXPAND_ALL: Command = {\n        id: 'outlineView.expand.all',\n        iconClass: codicon('expand-all')\n    };\n}\n\n@injectable()\nexport class OutlineViewContribution extends AbstractViewContribution<OutlineViewWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    constructor() {\n        super({\n            widgetId: OUTLINE_WIDGET_FACTORY_ID,\n            widgetName: OutlineViewWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'right',\n                rank: 500\n            },\n            toggleCommandId: 'outlineView:toggle',\n            toggleKeybinding: OS.type() !== OS.Type.Linux\n                ? 'ctrlcmd+shift+i'\n                : undefined\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(OutlineViewCommands.COLLAPSE_ALL, {\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, widget => !widget.model.areNodesCollapsed()),\n            execute: () => this.collapseAllItems()\n        });\n        commands.registerCommand(OutlineViewCommands.EXPAND_ALL, {\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, widget => widget.model.areNodesCollapsed()),\n            execute: () => this.expandAllItems()\n        });\n    }\n\n    async registerToolbarItems(toolbar: TabBarToolbarRegistry): Promise<void> {\n        const widget = await this.widget;\n        const onDidChange = widget.onDidUpdate;\n        toolbar.registerItem({\n            id: OutlineViewCommands.COLLAPSE_ALL.id,\n            command: OutlineViewCommands.COLLAPSE_ALL.id,\n            tooltip: nls.localizeByDefault('Collapse All'),\n            priority: 0,\n            onDidChange\n        });\n        toolbar.registerItem({\n            id: OutlineViewCommands.EXPAND_ALL.id,\n            command: OutlineViewCommands.EXPAND_ALL.id,\n            tooltip: nls.localizeByDefault('Expand All'),\n            priority: 0,\n            onDidChange\n        });\n    }\n\n    /**\n     * Collapse all nodes in the outline view tree.\n     */\n    protected async collapseAllItems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root;\n        if (CompositeTreeNode.is(root)) {\n            model.collapseAll(root);\n        }\n    }\n\n    protected async expandAllItems(): Promise<void> {\n        const { model } = await this.widget;\n        model.expandAll(model.root);\n    }\n\n    /**\n     * Determine if the current widget is the `outline-view`.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (widget: OutlineViewWidget) => T): T | false {\n        if (widget instanceof OutlineViewWidget && widget.id === OUTLINE_WIDGET_FACTORY_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, CommandContribution, CommandRegistry, environment, isOSX, CancellationTokenSource, MessageService } from '@theia/core';\nimport {\n    ApplicationShell,\n    CommonCommands,\n    NavigatableWidget,\n    OpenerService, OpenHandler,\n    QuickInputService,\n    Saveable,\n    TabBar,\n    Title,\n    Widget\n} from '@theia/core/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ApplicationShellMouseTracker } from '@theia/core/lib/browser/shell/application-shell-mouse-tracker';\nimport { CommandService } from '@theia/core/lib/common/command';\nimport TheiaURI from '@theia/core/lib/common/uri';\nimport { EditorManager, EditorCommands } from '@theia/editor/lib/browser';\nimport {\n    TextDocumentShowOptions,\n    Location,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall,\n    TypeHierarchyItem,\n    Hover,\n    TextEdit,\n    FormattingOptions,\n    DocumentHighlight\n} from '@theia/plugin-ext/lib/common/plugin-api-rpc-model';\nimport { DocumentsMainImpl } from '@theia/plugin-ext/lib/main/browser/documents-main';\nimport { isUriComponents, toDocumentSymbol, toPosition } from '@theia/plugin-ext/lib/plugin/type-converters';\nimport { ViewColumn } from '@theia/plugin-ext/lib/plugin/types-impl';\nimport { WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { WorkspaceService, WorkspaceInput } from '@theia/workspace/lib/browser/workspace-service';\nimport { DiffService } from '@theia/workspace/lib/browser/diff-service';\nimport { inject, injectable, optional } from '@theia/core/shared/inversify';\nimport { Position } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { PluginServer } from '@theia/plugin-ext/lib/common/plugin-protocol';\nimport { TerminalFrontendContribution } from '@theia/terminal/lib/browser/terminal-frontend-contribution';\nimport { QuickOpenWorkspace } from '@theia/workspace/lib/browser/quick-open-workspace';\nimport { TerminalService } from '@theia/terminal/lib/browser/base/terminal-service';\nimport {\n    FileNavigatorCommands,\n    FILE_NAVIGATOR_TOGGLE_COMMAND_ID\n} from '@theia/navigator/lib/browser/navigator-contribution';\nimport { FILE_NAVIGATOR_ID, FileNavigatorWidget } from '@theia/navigator/lib/browser';\nimport { SelectableTreeNode } from '@theia/core/lib/browser/tree/tree-selection';\nimport { UriComponents } from '@theia/plugin-ext/lib/common/uri-components';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { CallHierarchyServiceProvider, CallHierarchyService } from '@theia/callhierarchy/lib/browser';\nimport { TypeHierarchyServiceProvider, TypeHierarchyService } from '@theia/typehierarchy/lib/browser';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport {\n    fromCallHierarchyCalleeToModelCallHierarchyOutgoingCall,\n    fromCallHierarchyCallerToModelCallHierarchyIncomingCall,\n    fromItemHierarchyDefinition,\n    toItemHierarchyDefinition\n} from '@theia/plugin-ext/lib/main/browser/hierarchy/hierarchy-types-converters';\nimport { CustomEditorOpener } from '@theia/plugin-ext/lib/main/browser/custom-editors/custom-editor-opener';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { WindowService } from '@theia/core/lib/browser/window/window-service';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { VSCodeExtensionUri } from '../common/plugin-vscode-uri';\nimport { CodeEditorWidgetUtil } from '@theia/plugin-ext/lib/main/browser/menus/vscode-theia-menu-mappings';\nimport { OutlineViewContribution } from '@theia/outline-view/lib/browser/outline-view-contribution';\n\nexport namespace VscodeCommands {\n\n    export const GET_CODE_EXCHANGE_ENDPOINTS: Command = {\n        id: 'workbench.getCodeExchangeProxyEndpoints' // this command is used in the github auth built-in\n        // see: https://github.com/microsoft/vscode/blob/191be39e5ac872e03f9d79cc859d9917f40ad935/extensions/github-authentication/src/githubServer.ts#L60\n    };\n\n    export const OPEN: Command = {\n        id: 'vscode.open'\n    };\n\n    export const OPEN_WITH: Command = {\n        id: 'vscode.openWith'\n    };\n\n    export const OPEN_FOLDER: Command = {\n        id: 'vscode.openFolder'\n    };\n\n    export const DIFF: Command = {\n        id: 'vscode.diff'\n    };\n\n    export const INSTALL_FROM_VSIX: Command = {\n        id: 'workbench.extensions.installExtension'\n    };\n}\n\n// https://wicg.github.io/webusb/\n\nexport interface UsbDeviceData {\n    readonly deviceClass: number;\n    readonly deviceProtocol: number;\n    readonly deviceSubclass: number;\n    readonly deviceVersionMajor: number;\n    readonly deviceVersionMinor: number;\n    readonly deviceVersionSubminor: number;\n    readonly manufacturerName?: string;\n    readonly productId: number;\n    readonly productName?: string;\n    readonly serialNumber?: string;\n    readonly usbVersionMajor: number;\n    readonly usbVersionMinor: number;\n    readonly usbVersionSubminor: number;\n    readonly vendorId: number;\n}\n\n// https://wicg.github.io/serial/\n\nexport interface SerialPortData {\n    readonly usbVendorId?: number | undefined;\n    readonly usbProductId?: number | undefined;\n}\n\n// https://wicg.github.io/webhid/\n\nexport interface HidDeviceData {\n    readonly opened: boolean;\n    readonly vendorId: number;\n    readonly productId: number;\n    readonly productName: string;\n    readonly collections: [];\n}\n\n@injectable()\nexport class PluginVscodeCommandsContribution implements CommandContribution {\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n    @inject(DiffService)\n    protected readonly diffService: DiffService;\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n    @inject(ApplicationShellMouseTracker)\n    protected readonly mouseTracker: ApplicationShellMouseTracker;\n    @inject(QuickInputService) @optional()\n    protected readonly quickInput: QuickInputService;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(TerminalFrontendContribution)\n    protected readonly terminalContribution: TerminalFrontendContribution;\n    @inject(QuickOpenWorkspace)\n    protected readonly quickOpenWorkspace: QuickOpenWorkspace;\n    @inject(TerminalService)\n    protected readonly terminalService: TerminalService;\n    @inject(CodeEditorWidgetUtil)\n    protected readonly codeEditorWidgetUtil: CodeEditorWidgetUtil;\n    @inject(PluginServer)\n    protected readonly pluginServer: PluginServer;\n    @inject(FileService)\n    protected readonly fileService: FileService;\n    @inject(CallHierarchyServiceProvider)\n    protected readonly callHierarchyProvider: CallHierarchyServiceProvider;\n    @inject(TypeHierarchyServiceProvider)\n    protected readonly typeHierarchyProvider: TypeHierarchyServiceProvider;\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n    @inject(OutlineViewContribution)\n    protected outlineViewContribution: OutlineViewContribution;\n\n    private async openWith(commandId: string, resource: URI, columnOrOptions?: ViewColumn | TextDocumentShowOptions, openerId?: string): Promise<boolean> {\n        if (!resource) {\n            throw new Error(`${commandId} command requires at least URI argument.`);\n        }\n        if (!URI.isUri(resource)) {\n            throw new Error(`Invalid argument for ${commandId} command with URI argument. Found ${resource}`);\n        }\n\n        let options: TextDocumentShowOptions | undefined;\n        if (typeof columnOrOptions === 'number') {\n            options = {\n                viewColumn: columnOrOptions\n            };\n        } else if (columnOrOptions) {\n            options = {\n                ...columnOrOptions\n            };\n        }\n\n        const uri = new TheiaURI(resource);\n        const editorOptions = DocumentsMainImpl.toEditorOpenerOptions(this.shell, options);\n\n        let openHandler: OpenHandler | undefined;\n        if (typeof openerId === 'string') {\n            const lowerViewType = openerId.toLowerCase();\n            const openers = await this.openerService.getOpeners();\n            for (const opener of openers) {\n                const idLowerCase = opener.id.toLowerCase();\n                if (lowerViewType === idLowerCase) {\n                    openHandler = opener;\n                    break;\n                }\n            }\n        } else {\n            openHandler = await this.openerService.getOpener(uri, editorOptions);\n        }\n\n        if (openHandler) {\n            await openHandler.open(uri, editorOptions);\n            return true;\n        }\n\n        return false;\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(VscodeCommands.GET_CODE_EXCHANGE_ENDPOINTS, {\n            execute: () => undefined // this is a dummy implementation: only used in the case of web apps, which is not supported yet.\n        });\n\n        commands.registerCommand(VscodeCommands.OPEN, {\n            isVisible: () => false,\n            execute: async (resource: URI | string, columnOrOptions?: ViewColumn | TextDocumentShowOptions) => {\n                if (typeof resource === 'string') {\n                    resource = URI.parse(resource);\n                }\n                try {\n                    await this.openWith(VscodeCommands.OPEN.id, resource, columnOrOptions);\n                } catch (error) {\n                    const message = nls.localizeByDefault(\"Unable to open '{0}'\", resource.path);\n                    const reason = nls.localizeByDefault('Error: {0}', error.message);\n                    this.messageService.error(`${message}\\n${reason}`);\n                    console.warn(error);\n                }\n            }\n        });\n\n        commands.registerCommand(VscodeCommands.OPEN_WITH, {\n            isVisible: () => false,\n            execute: async (resource: URI, viewType: string, columnOrOptions?: ViewColumn | TextDocumentShowOptions) => {\n                if (!viewType) {\n                    throw new Error(`Running the contributed command: ${VscodeCommands.OPEN_WITH} failed.`);\n                }\n\n                if (viewType.toLowerCase() === 'default') {\n                    return commands.executeCommand(VscodeCommands.OPEN.id, resource, columnOrOptions);\n                }\n\n                let result = await this.openWith(VscodeCommands.OPEN_WITH.id, resource, columnOrOptions, viewType);\n                if (!result) {\n                    result = await this.openWith(VscodeCommands.OPEN_WITH.id, resource, columnOrOptions, CustomEditorOpener.toCustomEditorId(viewType));\n                }\n\n                if (!result) {\n                    throw new Error(`Could not find an editor for '${viewType}'`);\n                }\n            }\n        });\n\n        interface IOpenFolderAPICommandOptions {\n            forceNewWindow?: boolean;\n            forceReuseWindow?: boolean;\n            noRecentEntry?: boolean;\n        }\n\n        commands.registerCommand(VscodeCommands.OPEN_FOLDER, {\n            isVisible: () => false,\n            execute: async (resource?: URI, arg: boolean | IOpenFolderAPICommandOptions = {}) => {\n                if (!resource) {\n                    return commands.executeCommand(WorkspaceCommands.OPEN_WORKSPACE.id);\n                }\n                if (!URI.isUri(resource)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.OPEN_FOLDER.id} command with URI argument. Found ${resource}`);\n                }\n                let options: WorkspaceInput | undefined;\n                if (typeof arg === 'boolean') {\n                    options = { preserveWindow: !arg };\n                } else {\n                    options = { preserveWindow: !arg.forceNewWindow };\n                }\n                this.workspaceService.open(new TheiaURI(resource), options);\n            }\n        });\n\n        commands.registerCommand(VscodeCommands.DIFF, {\n            isVisible: () => false,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            execute: async (left: URI, right: URI, label?: string, options?: TextDocumentShowOptions) => {\n                if (!left || !right) {\n                    throw new Error(`${VscodeCommands.DIFF} command requires at least two URI arguments. Found left=${left}, right=${right} as arguments`);\n                }\n                if (!URI.isUri(left)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.DIFF.id} command with left argument. Expecting URI left type but found ${left}`);\n                }\n                if (!URI.isUri(right)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.DIFF.id} command with right argument. Expecting URI right type but found ${right}`);\n                }\n\n                const leftURI = new TheiaURI(left);\n                const editorOptions = DocumentsMainImpl.toEditorOpenerOptions(this.shell, options);\n                await this.diffService.openDiffEditor(leftURI, new TheiaURI(right), label, editorOptions);\n            }\n        });\n\n        // https://code.visualstudio.com/docs/getstarted/keybindings#_navigation\n        /*\n         * internally, in VS Code, any widget opened in the main area is represented as an editor\n         * operations below apply to them, but not to side-bar widgets, like the explorer\n         *\n         * in Theia, there are not such difference and any widget can be put in any area\n         * because of it we filter out editors from views based on `NavigatableWidget.is`\n         * and apply actions only to them\n         */\n        if (!environment.electron.is() || isOSX) {\n            commands.registerCommand({ id: 'workbench.action.files.openFileFolder' }, {\n                execute: () => commands.executeCommand(WorkspaceCommands.OPEN.id)\n            });\n        }\n\n        commands.registerCommand({ id: 'workbench.action.files.openFile' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.OPEN_FILE.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.files.openFolder' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.OPEN_FOLDER.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.addRootFolder' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.ADD_FOLDER.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.saveWorkspaceAs' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.SAVE_WORKSPACE_AS.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.gotoLine' }, {\n            execute: () => commands.executeCommand(EditorCommands.GOTO_LINE_COLUMN.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.quickOpen' }, {\n            execute: (prefix?: unknown) => this.quickInput.open(typeof prefix === 'string' ? prefix : '')\n        });\n        commands.registerCommand({ id: 'workbench.action.openSettings' }, {\n            execute: (query?: string) => commands.executeCommand(CommonCommands.OPEN_PREFERENCES.id, query)\n        });\n        commands.registerCommand({ id: 'workbench.action.openWorkspaceConfigFile' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.OPEN_WORKSPACE_FILE.id)\n        });\n        commands.registerCommand({ id: 'workbench.files.action.refreshFilesExplorer' }, {\n            execute: () => commands.executeCommand(FileNavigatorCommands.REFRESH_NAVIGATOR.id)\n        });\n        commands.registerCommand({ id: VscodeCommands.INSTALL_FROM_VSIX.id }, {\n            execute: async (vsixUriOrExtensionId: TheiaURI | UriComponents | string) => {\n                if (typeof vsixUriOrExtensionId === 'string') {\n                    await this.pluginServer.deploy(VSCodeExtensionUri.fromId(vsixUriOrExtensionId).toString());\n                } else {\n                    const uriPath = isUriComponents(vsixUriOrExtensionId) ? URI.revive(vsixUriOrExtensionId).fsPath : await this.fileService.fsPath(vsixUriOrExtensionId);\n                    await this.pluginServer.deploy(`local-file:${uriPath}`);\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.files.save', }, {\n            execute: (uri?: monaco.Uri) => {\n                if (uri) {\n                    const uriString = uri.toString();\n                    const widget = this.shell.widgets.find(w => {\n                        const resourceUri = Saveable.is(w) && NavigatableWidget.is(w) && w.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                    if (Saveable.is(widget)) {\n                        Saveable.save(widget);\n                    }\n                } else {\n                    this.shell.save();\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.files.saveAll', }, {\n            execute: () => this.shell.saveAll()\n        });\n        commands.registerCommand({ id: 'workbench.action.closeActiveEditor' }, {\n            execute: () => commands.executeCommand(CommonCommands.CLOSE_MAIN_TAB.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.closeOtherEditors' }, {\n            execute: async (uri?: monaco.Uri) => {\n                let editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (uri) {\n                    const uriString = uri.toString();\n                    editor = this.editorManager.all.find(e => {\n                        const resourceUri = e.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                }\n                const toClose = this.shell.widgets.filter(widget => widget !== editor && this.codeEditorWidgetUtil.is(widget));\n                await this.shell.closeMany(toClose);\n            }\n        });\n\n        const performActionOnGroup = (\n            cb: (\n                tabBarOrArea: TabBar<Widget> | ApplicationShell.Area,\n                filter?: ((title: Title<Widget>, index: number) => boolean) | undefined\n            ) => void,\n            uri?: monaco.Uri\n        ): void => {\n            let editor = this.editorManager.currentEditor || this.shell.currentWidget;\n            if (uri) {\n                const uriString = uri.toString();\n                editor = this.editorManager.all.find(e => {\n                    const resourceUri = e.getResourceUri();\n                    return (resourceUri && resourceUri.toString()) === uriString;\n                });\n            }\n            if (editor) {\n                const tabBar = this.shell.getTabBarFor(editor);\n                if (tabBar) {\n                    cb(tabBar, ({ owner }) => this.codeEditorWidgetUtil.is(owner));\n                }\n            }\n        };\n\n        commands.registerCommand({\n            id: 'workbench.action.closeEditorsInGroup',\n            label: nls.localizeByDefault('Close All Editors in Group')\n        }, {\n            execute: (uri?: monaco.Uri) => performActionOnGroup(this.shell.closeTabs, uri)\n        });\n        commands.registerCommand({\n            id: 'workbench.files.saveAllInGroup',\n            label: nls.localizeByDefault('Save All in Group')\n        }, {\n            execute: (uri?: monaco.Uri) => performActionOnGroup(this.shell.saveTabs, uri)\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsInOtherGroups' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const editorTabBar = this.shell.getTabBarFor(editor);\n                    for (const tabBar of this.shell.allTabBars) {\n                        if (tabBar !== editorTabBar) {\n                            this.shell.closeTabs(tabBar,\n                                ({ owner }) => this.codeEditorWidgetUtil.is(owner)\n                            );\n                        }\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsToTheLeft' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const tabBar = this.shell.getTabBarFor(editor);\n                    if (tabBar) {\n                        let left = true;\n                        this.shell.closeTabs(tabBar,\n                            ({ owner }) => {\n                                if (owner === editor) {\n                                    left = false;\n                                    return false;\n                                }\n                                return left && this.codeEditorWidgetUtil.is(owner);\n                            }\n                        );\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsToTheRight' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const tabBar = this.shell.getTabBarFor(editor);\n                    if (tabBar) {\n                        let left = true;\n                        this.shell.closeTabs(tabBar,\n                            ({ owner }) => {\n                                if (owner === editor) {\n                                    left = false;\n                                    return false;\n                                }\n                                return !left && this.codeEditorWidgetUtil.is(owner);\n                            }\n                        );\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeAllEditors' }, {\n            execute: async () => {\n                const toClose = this.shell.widgets.filter(widget => this.codeEditorWidgetUtil.is(widget));\n                await this.shell.closeMany(toClose);\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.nextEditor' }, {\n            execute: () => this.shell.activateNextTab()\n        });\n        commands.registerCommand({ id: 'workbench.action.previousEditor' }, {\n            execute: () => this.shell.activatePreviousTab()\n        });\n        commands.registerCommand({ id: 'workbench.action.navigateBack' }, {\n            execute: () => commands.executeCommand(EditorCommands.GO_BACK.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.navigateForward' }, {\n            execute: () => commands.executeCommand(EditorCommands.GO_FORWARD.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.navigateToLastEditLocation' }, {\n            execute: () => commands.executeCommand(EditorCommands.GO_LAST_EDIT.id)\n        });\n\n        commands.registerCommand({ id: 'openInTerminal' }, {\n            execute: (resource: URI) => this.terminalContribution.openInTerminal(new TheiaURI(resource.toString()))\n        });\n\n        commands.registerCommand({ id: 'workbench.action.reloadWindow' }, {\n            execute: () => {\n                this.windowService.reload();\n            }\n        });\n\n        /**\n         * TODO:\n         * Open Next: workbench.action.openNextRecentlyUsedEditorInGroup\n         * Open Previous: workbench.action.openPreviousRecentlyUsedEditorInGroup\n         * Copy Path of Active File: workbench.action.files.copyPathOfActiveFile\n         * Reveal Active File in Windows: workbench.action.files.revealActiveFileInWindows\n         * Show Opened File in New Window: workbench.action.files.showOpenedFileInNewWindow\n         * Compare Opened File With: workbench.files.action.compareFileWith\n         */\n\n        // Register built-in language service commands\n        // see https://code.visualstudio.com/api/references/commands\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n\n        // TODO register other `vscode.execute...` commands.\n        // see https://github.com/microsoft/vscode/blob/master/src/vs/workbench/api/common/extHostApiCommands.ts\n        commands.registerCommand(\n            {\n                id: 'vscode.executeDefinitionProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<Location[]>('_executeDefinitionProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeDeclarationProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<Location[]>('_executeDeclarationProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeTypeDefinitionProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<Location[]>('_executeTypeDefinitionProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeImplementationProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<Location[]>('_executeImplementationProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeHoverProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<Hover[]>('_executeHoverProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeDocumentHighlights'\n            },\n            {\n                execute: ((resource: URI, position: Position) =>\n                    commands.executeCommand<DocumentHighlight[]>('_executeDocumentHighlights', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeReferenceProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) => commands.executeCommand<Location[]>('_executeReferenceProvider', monaco.Uri.from(resource), position))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeDocumentSymbolProvider'\n            },\n            {\n                execute: (resource: URI) => commands.executeCommand('_executeDocumentSymbolProvider',\n                    monaco.Uri.parse(resource.toString())\n                ).then((value: any) => { // eslint-disable-line @typescript-eslint/no-explicit-any\n                    if (!Array.isArray(value) || value === undefined) {\n                        return undefined;\n                    }\n                    return value.map(loc => toDocumentSymbol(loc));\n                })\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeFormatDocumentProvider'\n            },\n            {\n                execute: ((resource: URI, options: FormattingOptions) =>\n                    commands.executeCommand<TextEdit[]>('_executeFormatDocumentProvider', monaco.Uri.from(resource), options))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeFormatRangeProvider'\n            },\n            {\n                execute: ((resource: URI, range: Range, options: FormattingOptions) =>\n                    commands.executeCommand<TextEdit[]>('_executeFormatRangeProvider', monaco.Uri.from(resource), range, options))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeFormatOnTypeProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position, ch: string, options: FormattingOptions) =>\n                    commands.executeCommand<TextEdit[]>('_executeFormatOnTypeProvider', monaco.Uri.from(resource), position, ch, options))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.prepareCallHierarchy'\n            },\n            {\n                execute: async (resource: URI, position: Position): Promise<CallHierarchyItem[]> => {\n                    const provider = await this.getCallHierarchyServiceForUri(resource);\n                    const definition = await provider?.getRootDefinition(\n                        resource.path,\n                        toPosition(position),\n                        new CancellationTokenSource().token\n                    );\n                    if (definition) {\n                        return definition.items.map(item => fromItemHierarchyDefinition(item));\n                    };\n                    return [];\n                }\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideIncomingCalls'\n            },\n            {\n                execute: async (item: CallHierarchyItem): Promise<CallHierarchyIncomingCall[]> => {\n                    const resource = URI.from(item.uri);\n                    const provider = await this.getCallHierarchyServiceForUri(resource);\n                    const incomingCalls = await provider?.getCallers(\n                        toItemHierarchyDefinition(item),\n                        new CancellationTokenSource().token,\n                    );\n                    if (incomingCalls) {\n                        return incomingCalls.map(fromCallHierarchyCallerToModelCallHierarchyIncomingCall);\n                    }\n                    return [];\n                },\n            },\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideOutgoingCalls'\n            },\n            {\n                execute: async (item: CallHierarchyItem): Promise<CallHierarchyOutgoingCall[]> => {\n                    const resource = URI.from(item.uri);\n                    const provider = await this.getCallHierarchyServiceForUri(resource);\n                    const outgoingCalls = await provider?.getCallees?.(\n                        toItemHierarchyDefinition(item),\n                        new CancellationTokenSource().token,\n                    );\n                    if (outgoingCalls) {\n                        return outgoingCalls.map(fromCallHierarchyCalleeToModelCallHierarchyOutgoingCall);\n                    }\n                    return [];\n                }\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.prepareTypeHierarchy'\n            },\n            {\n                execute: async (resource: URI, position: Position): Promise<TypeHierarchyItem[]> => {\n                    const provider = await this.getTypeHierarchyServiceForUri(resource);\n                    const session = await provider?.prepareSession(\n                        resource.path,\n                        toPosition(position),\n                        new CancellationTokenSource().token\n                    );\n                    return session ? session.items.map(item => fromItemHierarchyDefinition(item)) : [];\n                }\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideSupertypes'\n            },\n            {\n                execute: async (item: TypeHierarchyItem): Promise<TypeHierarchyItem[]> => {\n                    if (!item._sessionId || !item._itemId) {\n                        return [];\n                    }\n                    const resource = URI.from(item.uri);\n                    const provider = await this.getTypeHierarchyServiceForUri(resource);\n                    const items = await provider?.provideSuperTypes(\n                        item._sessionId,\n                        item._itemId,\n                        new CancellationTokenSource().token\n                    );\n                    return (items ? items : []).map(typeItem => fromItemHierarchyDefinition(typeItem));\n                }\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideSubtypes'\n            },\n            {\n                execute: async (item: TypeHierarchyItem): Promise<TypeHierarchyItem[]> => {\n                    if (!item._sessionId || !item._itemId) {\n                        return [];\n                    }\n                    const resource = URI.from(item.uri);\n                    const provider = await this.getTypeHierarchyServiceForUri(resource);\n                    const items = await provider?.provideSubTypes(\n                        item._sessionId, item._itemId,\n                        new CancellationTokenSource().token\n                    );\n                    return (items ? items : []).map(typeItem => fromItemHierarchyDefinition(typeItem));\n\n                }\n            }\n        );\n\n        commands.registerCommand({\n            id: 'workbench.action.openRecent'\n        }, {\n            execute: () => this.quickOpenWorkspace.select()\n        });\n        commands.registerCommand({\n            id: 'explorer.newFolder'\n        }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.NEW_FOLDER.id)\n        });\n        commands.registerCommand({\n            id: 'workbench.action.terminal.sendSequence'\n        }, {\n            execute: (args?: { text?: string }) => {\n                if (args === undefined || args.text === undefined) {\n                    return;\n                }\n\n                const currentTerminal = this.terminalService.currentTerminal;\n\n                if (currentTerminal === undefined) {\n                    return;\n                }\n\n                currentTerminal.sendText(args.text);\n            }\n        });\n        commands.registerCommand({\n            id: 'workbench.action.terminal.kill'\n        }, {\n            execute: () => {\n                const currentTerminal = this.terminalService.currentTerminal;\n\n                if (currentTerminal === undefined) {\n                    return;\n                }\n\n                currentTerminal.dispose();\n            }\n        });\n        commands.registerCommand({\n            id: 'workbench.view.explorer'\n        }, {\n            execute: () => commands.executeCommand(FileNavigatorCommands.FOCUS.id)\n        });\n        commands.registerCommand({\n            id: 'copyFilePath'\n        }, {\n            execute: () => commands.executeCommand(CommonCommands.COPY_PATH.id)\n        });\n        commands.registerCommand({\n            id: 'copyRelativeFilePath'\n        }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.COPY_RELATIVE_FILE_PATH.id)\n        });\n        commands.registerCommand({\n            id: 'revealInExplorer'\n        }, {\n            execute: async (resource: URI | object) => {\n                if (!URI.isUri(resource)) {\n                    return;\n                }\n                let navigator = await this.shell.revealWidget(FILE_NAVIGATOR_ID);\n                if (!navigator) {\n                    await this.commandService.executeCommand(FILE_NAVIGATOR_TOGGLE_COMMAND_ID);\n                    navigator = await this.shell.revealWidget(FILE_NAVIGATOR_ID);\n                }\n                if (navigator instanceof FileNavigatorWidget) {\n                    const model = navigator.model;\n                    const node = await model.revealFile(new TheiaURI(resource));\n                    if (SelectableTreeNode.is(node)) {\n                        model.selectNode(node);\n                    }\n                }\n            }\n        });\n\n        commands.registerCommand({\n            id: 'workbench.experimental.requestUsbDevice'\n        }, {\n            execute: async (options?: { filters?: unknown[] }): Promise<UsbDeviceData | undefined> => {\n                const usb = (navigator as any).usb;\n                if (!usb) {\n                    return undefined;\n                }\n\n                const device = await usb.requestDevice({ filters: options?.filters ?? [] });\n                if (!device) {\n                    return undefined;\n                }\n\n                return {\n                    deviceClass: device.deviceClass,\n                    deviceProtocol: device.deviceProtocol,\n                    deviceSubclass: device.deviceSubclass,\n                    deviceVersionMajor: device.deviceVersionMajor,\n                    deviceVersionMinor: device.deviceVersionMinor,\n                    deviceVersionSubminor: device.deviceVersionSubminor,\n                    manufacturerName: device.manufacturerName,\n                    productId: device.productId,\n                    productName: device.productName,\n                    serialNumber: device.serialNumber,\n                    usbVersionMajor: device.usbVersionMajor,\n                    usbVersionMinor: device.usbVersionMinor,\n                    usbVersionSubminor: device.usbVersionSubminor,\n                    vendorId: device.vendorId,\n                };\n            }\n        });\n\n        commands.registerCommand({\n            id: 'workbench.experimental.requestSerialPort'\n        }, {\n            execute: async (options?: { filters?: unknown[] }): Promise<SerialPortData | undefined> => {\n                const serial = (navigator as any).serial;\n                if (!serial) {\n                    return undefined;\n                }\n\n                const port = await serial.requestPort({ filters: options?.filters ?? [] });\n                if (!port) {\n                    return undefined;\n                }\n\n                const info = port.getInfo();\n                return {\n                    usbVendorId: info.usbVendorId,\n                    usbProductId: info.usbProductId\n                };\n            }\n        });\n\n        commands.registerCommand({\n            id: 'workbench.experimental.requestHidDevice'\n        }, {\n            execute: async (options?: { filters?: unknown[] }): Promise<HidDeviceData | undefined> => {\n                const hid = (navigator as any).hid;\n                if (!hid) {\n                    return undefined;\n                }\n\n                const devices = await hid.requestDevice({ filters: options?.filters ?? [] });\n                if (!devices.length) {\n                    return undefined;\n                }\n\n                const device = devices[0];\n                return {\n                    opened: device.opened,\n                    vendorId: device.vendorId,\n                    productId: device.productId,\n                    productName: device.productName,\n                    collections: device.collections\n                };\n            }\n        });\n\n        // required by Jupyter for the show table of contents action\n        commands.registerCommand({ id: 'outline.focus' }, {\n            execute: () => this.outlineViewContribution.openView({ activate: true })\n        });\n    }\n\n    private async resolveLanguageId(resource: URI): Promise<string> {\n        const reference = await this.textModelService.createModelReference(resource);\n        const languageId = reference.object.languageId;\n        reference.dispose();\n        return languageId;\n    }\n\n    protected async getCallHierarchyServiceForUri(resource: URI): Promise<CallHierarchyService | undefined> {\n        const languageId = await this.resolveLanguageId(resource);\n        return this.callHierarchyProvider.get(languageId, new TheiaURI(resource));\n    }\n\n    protected async getTypeHierarchyServiceForUri(resource: URI): Promise<TypeHierarchyService | undefined> {\n        const languageId = await this.resolveLanguageId(resource);\n        return this.typeHierarchyProvider.get(languageId, new TheiaURI(resource));\n    }\n}\n"],"names":[],"sourceRoot":""}