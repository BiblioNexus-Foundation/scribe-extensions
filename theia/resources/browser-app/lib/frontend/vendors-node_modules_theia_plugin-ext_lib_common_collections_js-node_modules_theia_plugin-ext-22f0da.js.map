{"version":3,"file":"vendors-node_modules_theia_plugin-ext_lib_common_collections_js-node_modules_theia_plugin-ext-22f0da.js","mappings":"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","sources":["webpack:///../node_modules/@theia/core/src/common/collections.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/collections.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/connection.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/editor-options.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/object-identifier.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/semantic-tokens-dto.ts?","webpack:///../node_modules/@theia/plugin-ext/src/common/test-types.ts?","webpack:///../node_modules/@theia/plugin-ext/src/plugin/terminal-ext.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * A convenience class for managing a \"map of maps\" of arbitrary depth\n */\nexport class MultiKeyMap<K, V> {\n    private rootMap = new Map();\n\n    constructor(private readonly keyLength: number) {\n    }\n\n    static create<S, T>(keyLength: number, data: [S[], T][]): MultiKeyMap<S, T> {\n        const result = new MultiKeyMap<S, T>(keyLength);\n        for (const entry of data) {\n            result.set(entry[0], entry[1]);\n        }\n        return result;\n    }\n\n    set(key: readonly K[], value: V): V | undefined {\n        if (this.keyLength !== key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should be ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            let existing = map.get(key[i]);\n            if (!existing) {\n                existing = new Map();\n                map.set(key[i], existing);\n            }\n            map = existing;\n        }\n        const oldValue = map.get(key[this.keyLength - 1]);\n        map.set(key[this.keyLength - 1], value);\n        return oldValue;\n    }\n\n    get(key: readonly K[]): V | undefined {\n        if (this.keyLength !== key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should be ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return undefined;\n            }\n        }\n        return map.get(key[this.keyLength - 1]);\n    }\n\n    /**\n     * Checks whether the given key is present in the map\n     * @param key the key to test. It can have a length < the key length\n     * @returns whether the key exists\n     */\n    has(key: readonly K[]): boolean {\n        if (this.keyLength < key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should <= ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < key.length - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return false;\n            }\n        }\n        return map.has(key[key.length - 1]);\n    }\n\n    /**\n     * Deletes the value with the given key from the map\n     * @param key the key to remove.  It can have a length < the key length\n     * @returns whether the key was present in the map\n     */\n    delete(key: readonly K[]): boolean {\n        if (this.keyLength < key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should <= ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return false;\n            }\n        }\n        return map.delete(key[key.length - 1]);\n    }\n\n    /**\n     * Iterates over all entries in the map. The ordering semantics are like iterating over a map of maps.\n     * @param handler Handler for each entry\n     */\n    forEach(handler: (value: V, key: K[]) => void): void {\n        this.doForeach(handler, this.rootMap, []);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private doForeach(handler: (value: V, key: K[]) => void, currentMap: Map<any, any>, keys: K[]): void {\n        if (keys.length === this.keyLength - 1) {\n            currentMap.forEach((v, k) => {\n                handler(v, [...keys, k]);\n            });\n        } else {\n            currentMap.forEach((v, k) => {\n                this.doForeach(handler, v, [...keys, k]);\n            });\n\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.71.2/src/vs/base/common/collections.ts\n\nexport function diffSets<T>(before: Set<T>, after: Set<T>): { removed: T[]; added: T[] } {\n    const removed: T[] = [];\n    const added: T[] = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n    const removed: V[] = [];\n    const added: V[] = [];\n    for (const [index, value] of before) {\n        if (!after.has(index)) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!before.has(index)) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { DebugChannel } from '@theia/debug/lib/common/debug-service';\nimport { ConnectionExt, ConnectionMain } from './plugin-api-rpc';\nimport { Emitter } from '@theia/core/lib/common/event';\n\n/**\n * A channel communicating with a counterpart in a plugin host.\n */\nexport class PluginChannel implements DebugChannel {\n    private messageEmitter: Emitter<string> = new Emitter();\n    private errorEmitter: Emitter<unknown> = new Emitter();\n    private closedEmitter: Emitter<void> = new Emitter();\n\n    constructor(\n        protected readonly id: string,\n        protected readonly connection: ConnectionExt | ConnectionMain) { }\n\n    send(content: string): void {\n        this.connection.$sendMessage(this.id, content);\n    }\n\n    fireMessageReceived(msg: string): void {\n        this.messageEmitter.fire(msg);\n    }\n\n    fireError(error: unknown): void {\n        this.errorEmitter.fire(error);\n    }\n\n    fireClosed(): void {\n        this.closedEmitter.fire();\n    }\n\n    onMessage(cb: (message: string) => void): void {\n        this.messageEmitter.event(cb);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError(cb: (reason: any) => void): void {\n        this.errorEmitter.event(cb);\n    }\n\n    onClose(cb: (code: number, reason: string) => void): void {\n        this.closedEmitter.event(() => cb(-1, 'closed'));\n    }\n\n    close(): void {\n        this.connection.$deleteConnection(this.id);\n    }\n}\n\nexport class ConnectionImpl implements ConnectionMain, ConnectionExt {\n    private readonly proxy: ConnectionExt | ConnectionExt;\n    private readonly connections = new Map<string, PluginChannel>();\n\n    constructor(proxy: ConnectionMain | ConnectionExt) {\n        this.proxy = proxy;\n    }\n\n    /**\n     * Gets the connection between plugin by id and sends string message to it.\n     *\n     * @param id connection's id\n     * @param message incoming message\n     */\n    async $sendMessage(id: string, message: string): Promise<void> {\n        if (this.connections.has(id)) {\n            this.connections.get(id)!.fireMessageReceived(message);\n        } else {\n            console.warn(`Received message for unknown connection: ${id}`);\n        }\n    }\n\n    /**\n     * Instantiates a new connection by the given id.\n     * @param id the connection id\n     */\n    async $createConnection(id: string): Promise<void> {\n        console.debug(`Creating plugin connection: ${id}`);\n\n        await this.doEnsureConnection(id);\n    }\n\n    /**\n     * Deletes a connection.\n     * @param id the connection id\n     */\n    async $deleteConnection(id: string): Promise<void> {\n        console.debug(`Deleting plugin connection: ${id}`);\n        const connection = this.connections.get(id);\n        if (connection) {\n            this.connections.delete(id);\n            connection.fireClosed();\n        }\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async ensureConnection(id: string): Promise<PluginChannel> {\n        console.debug(`Creating local connection: ${id}`);\n        const connection = await this.doEnsureConnection(id);\n        await this.proxy.$createConnection(id);\n        return connection;\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async doEnsureConnection(id: string): Promise<PluginChannel> {\n        const connection = this.connections.get(id) || await this.doCreateConnection(id);\n        this.connections.set(id, connection);\n        return connection;\n    }\n\n    protected async doCreateConnection(id: string): Promise<PluginChannel> {\n        const channel = new PluginChannel(id, this.proxy);\n        channel.onClose(() => this.connections.delete(id));\n        return channel;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// enum copied from monaco.d.ts\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n    /**\n     * As a vertical line\n     */\n    Line = 1,\n\n    /**\n     * As a block\n     */\n    Block = 2,\n\n    /**\n     * As a horizontal line, under character\n     */\n    Underline = 3,\n\n    /**\n     * As a thin vertical line\n     */\n    LineThin = 4,\n\n    /**\n     * As an outlined block, on top of a character\n     */\n    BlockOutline = 5,\n\n    /**\n     * As a thin horizontal line, under a character\n     */\n    UnderlineThin = 6\n}\n\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin' {\n    switch (cursorStyle) {\n        case TextEditorCursorStyle.Line:\n            return 'line';\n        case TextEditorCursorStyle.Block:\n            return 'block';\n        case TextEditorCursorStyle.Underline:\n            return 'underline';\n        case TextEditorCursorStyle.LineThin:\n            return 'line-thin';\n        case TextEditorCursorStyle.BlockOutline:\n            return 'block-outline';\n        case TextEditorCursorStyle.UnderlineThin:\n            return 'underline-thin';\n        default:\n            throw new Error('cursorStyleToString: Unknown cursorStyle');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport interface ObjectIdentifier {\n    $ident: number;\n}\n\nexport namespace ObjectIdentifier {\n    export const name = '$ident';\n\n    export function mixin<T>(obj: T, id: number): T & ObjectIdentifier {\n        Object.defineProperty(obj, name, { value: id, enumerable: true });\n        return <T & ObjectIdentifier>obj;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function of(obj: any): number {\n        return obj[name];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/microsoft/vscode/blob/0eb3a02ca2bcfab5faa3dc6e52d7c079efafcab0/src/vs/workbench/api/common/shared/semanticTokensDto.ts\n\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian(): boolean {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n\nexport interface IFullSemanticTokensDto {\n    id: number;\n    type: 'full';\n    data: Uint32Array;\n}\n\nexport interface IDeltaSemanticTokensDto {\n    id: number;\n    type: 'delta';\n    deltas: { start: number; deleteCount: number; data?: Uint32Array; }[];\n}\n\nexport type ISemanticTokensDto = IFullSemanticTokensDto | IDeltaSemanticTokensDto;\n\nconst enum EncodedSemanticTokensType {\n    Full = 1,\n    Delta = 2\n}\n\nfunction reverseEndianness(arr: Uint8Array): void {\n    for (let i = 0, len = arr.length; i < len; i += 4) {\n        // flip bytes 0<->3 and 1<->2\n        const b0 = arr[i + 0];\n        const b1 = arr[i + 1];\n        const b2 = arr[i + 2];\n        const b3 = arr[i + 3];\n        arr[i + 0] = b3;\n        arr[i + 1] = b2;\n        arr[i + 2] = b1;\n        arr[i + 3] = b0;\n    }\n}\n\nfunction toLittleEndianBuffer(arr: Uint32Array): BinaryBuffer {\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n    if (!isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    return BinaryBuffer.wrap(uint8Arr);\n}\n\nfunction fromLittleEndianBuffer(buff: BinaryBuffer): Uint32Array {\n    const uint8Arr = buff.buffer;\n    if (!isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    if (uint8Arr.byteOffset % 4 === 0) {\n        return new Uint32Array(uint8Arr.buffer, uint8Arr.byteOffset, uint8Arr.length / 4);\n    } else {\n        // unaligned memory access doesn't work on all platforms\n        const data = new Uint8Array(uint8Arr.byteLength);\n        data.set(uint8Arr);\n        return new Uint32Array(data.buffer, data.byteOffset, data.length / 4);\n    }\n}\n\nexport function encodeSemanticTokensDto(semanticTokens: ISemanticTokensDto): BinaryBuffer {\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n    let offset = 0;\n    dest[offset++] = semanticTokens.id;\n    if (semanticTokens.type === 'full') {\n        dest[offset++] = EncodedSemanticTokensType.Full;\n        dest[offset++] = semanticTokens.data.length;\n        dest.set(semanticTokens.data, offset); offset += semanticTokens.data.length;\n    } else {\n        dest[offset++] = EncodedSemanticTokensType.Delta;\n        dest[offset++] = semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            dest[offset++] = delta.start;\n            dest[offset++] = delta.deleteCount;\n            if (delta.data) {\n                dest[offset++] = delta.data.length;\n                dest.set(delta.data, offset); offset += delta.data.length;\n            } else {\n                dest[offset++] = 0;\n            }\n        }\n    }\n    return toLittleEndianBuffer(dest);\n}\n\nfunction encodeSemanticTokensDtoSize(semanticTokens: ISemanticTokensDto): number {\n    let result = 0;\n    result += (\n        + 1 // id\n        + 1 // type\n    );\n    if (semanticTokens.type === 'full') {\n        result += (\n            + 1 // data length\n            + semanticTokens.data.length\n        );\n    } else {\n        result += (\n            + 1 // delta count\n        );\n        result += (\n            + 1 // start\n            + 1 // deleteCount\n            + 1 // data length\n        ) * semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            if (delta.data) {\n                result += delta.data.length;\n            }\n        }\n    }\n    return result;\n}\n\nexport function decodeSemanticTokensDto(_buff: BinaryBuffer): ISemanticTokensDto {\n    const src = fromLittleEndianBuffer(_buff);\n    let offset = 0;\n    const id = src[offset++];\n    const type: EncodedSemanticTokensType = src[offset++];\n    if (type === EncodedSemanticTokensType.Full) {\n        const length = src[offset++];\n        const data = src.subarray(offset, offset + length); offset += length;\n        return {\n            id: id,\n            type: 'full',\n            data: data\n        };\n    }\n    const deltaCount = src[offset++];\n    const deltas: { start: number; deleteCount: number; data?: Uint32Array; }[] = [];\n    for (let i = 0; i < deltaCount; i++) {\n        const start = src[offset++];\n        const deleteCount = src[offset++];\n        const length = src[offset++];\n        let data: Uint32Array | undefined;\n        if (length > 0) {\n            data = src.subarray(offset, offset + length); offset += length;\n        }\n        deltas[i] = { start, deleteCount, data };\n    }\n    return {\n        id: id,\n        type: 'delta',\n        deltas: deltas\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/contrib/testing/common/testTypes.ts\n\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\nimport { UriComponents } from './uri-components';\nimport { Location, Range } from './plugin-api-rpc-model';\nimport { isObject } from '@theia/core';\n\nexport enum TestRunProfileKind {\n    Run = 1,\n    Debug = 2,\n    Coverage = 3\n}\n\nexport interface TestRunProfileDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly kind: TestRunProfileKind;\n    readonly isDefault: boolean;\n    readonly tag: string;\n    readonly canConfigure: boolean;\n}\nexport interface TestRunDTO {\n    readonly id: string;\n    readonly name: string;\n    readonly isRunning: boolean;\n}\n\nexport interface TestOutputDTO {\n    readonly output: string;\n    readonly location?: Location;\n    readonly itemPath?: string[];\n}\n\nexport enum TestExecutionState {\n    Queued = 1,\n    Running = 2,\n    Passed = 3,\n    Failed = 4,\n    Skipped = 5,\n    Errored = 6\n}\n\nexport interface TestStateChangeDTO {\n    readonly state: TestExecutionState;\n    readonly itemPath: string[];\n}\n\nexport interface TestFailureDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Failed | TestExecutionState.Errored;\n    readonly messages: TestMessageDTO[];\n    readonly duration?: number;\n}\n\nexport interface TestSuccessDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Passed;\n    readonly duration?: number;\n}\n\nexport interface TestMessageDTO {\n    readonly expected?: string;\n    readonly actual?: string;\n    readonly location?: Location;\n    readonly message: string | MarkdownString;\n    readonly contextValue?: string;\n}\n\nexport interface TestItemDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly range?: Range;\n    readonly sortKey?: string;\n    readonly tags: string[];\n    readonly uri?: UriComponents;\n    readonly busy: boolean;\n    readonly canResolveChildren: boolean;\n    readonly description?: string;\n    readonly error?: string | MarkdownString\n    readonly children?: TestItemDTO[];\n}\n\nexport interface TestRunRequestDTO {\n    controllerId: string;\n    profileId: string;\n    name: string;\n    includedTests: string[][]; // array of paths\n    excludedTests: string[][]; // array of paths\n    preserveFocus: boolean;\n}\n\nexport interface TestItemReference {\n    typeTag: '$type_test_item_reference',\n    controllerId: string;\n    testPath: string[];\n}\n\nexport namespace TestItemReference {\n    export function is(ref: unknown): ref is TestItemReference {\n        return isObject<TestItemReference>(ref)\n            && ref.typeTag === '$type_test_item_reference'\n            && typeof ref.controllerId === 'string'\n            && Array.isArray(ref.testPath);\n    }\n\n    export function create(controllerId: string, testPath: string[]): TestItemReference {\n        return {\n            typeTag: '$type_test_item_reference',\n            controllerId,\n            testPath\n        };\n    }\n}\n\nexport interface TestMessageArg {\n    testItemReference: TestItemReference | undefined,\n    testMessage: TestMessageDTO\n}\n\nexport namespace TestMessageArg {\n    export function is(arg: unknown): arg is TestMessageArg {\n        return isObject<TestMessageArg>(arg)\n            && isObject<TestMessageDTO>(arg.testMessage)\n            && (MarkdownString.is(arg.testMessage.message) || typeof arg.testMessage.message === 'string');\n    }\n\n    export function create(testItemReference: TestItemReference | undefined, testMessageDTO: TestMessageDTO): TestMessageArg {\n        return {\n            testItemReference: testItemReference,\n            testMessage: testMessageDTO\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { UUID } from '@theia/core/shared/@phosphor/coreutils';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Terminal, TerminalOptions, PseudoTerminalOptions, ExtensionTerminalOptions, TerminalState } from '@theia/plugin';\nimport { TerminalServiceExt, TerminalServiceMain, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { MultiKeyMap } from '@theia/core/lib/common/collections';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport * as theia from '@theia/plugin';\nimport * as Converter from './type-converters';\nimport { Disposable, EnvironmentVariableMutatorType, TerminalExitReason, ThemeIcon } from './types-impl';\nimport { NO_ROOT_URI, SerializableEnvironmentVariableCollection } from '@theia/terminal/lib/common/shell-terminal-protocol';\nimport { ProvidedTerminalLink } from '../common/plugin-api-rpc-model';\nimport { ThemeIcon as MonacoThemeIcon } from '@theia/monaco-editor-core/esm/vs/base/common/themables';\n\nexport function getIconUris(iconPath: theia.TerminalOptions['iconPath']): { id: string } | undefined {\n    if (ThemeIcon.is(iconPath)) {\n        return { id: iconPath.id };\n    }\n    return undefined;\n}\n\nexport function getIconClass(options: theia.TerminalOptions | theia.ExtensionTerminalOptions): string | undefined {\n    const iconClass = getIconUris(options.iconPath);\n    if (iconClass) {\n        return MonacoThemeIcon.asClassName(iconClass);\n    }\n    return undefined;\n}\n\n/**\n * Provides high level terminal plugin api to use in the Theia plugins.\n * This service allow(with help proxy) create and use terminal emulator.\n */\n @injectable()\nexport class TerminalServiceExtImpl implements TerminalServiceExt {\n    private readonly proxy: TerminalServiceMain;\n\n    private readonly _terminals = new Map<string, TerminalExtImpl>();\n\n    private readonly _pseudoTerminals = new Map<string, PseudoTerminal>();\n\n    private static nextProviderId = 0;\n    private readonly terminalLinkProviders = new Map<string, theia.TerminalLinkProvider>();\n    private readonly terminalObservers = new Map<string, theia.TerminalObserver>();\n    private readonly terminalProfileProviders = new Map<string, theia.TerminalProfileProvider>();\n    private readonly onDidCloseTerminalEmitter = new Emitter<Terminal>();\n    readonly onDidCloseTerminal: theia.Event<Terminal> = this.onDidCloseTerminalEmitter.event;\n\n    private readonly onDidOpenTerminalEmitter = new Emitter<Terminal>();\n    readonly onDidOpenTerminal: theia.Event<Terminal> = this.onDidOpenTerminalEmitter.event;\n\n    private readonly onDidChangeActiveTerminalEmitter = new Emitter<Terminal | undefined>();\n    readonly onDidChangeActiveTerminal: theia.Event<Terminal | undefined> = this.onDidChangeActiveTerminalEmitter.event;\n\n    private readonly onDidChangeTerminalStateEmitter = new Emitter<Terminal>();\n    readonly onDidChangeTerminalState: theia.Event<Terminal> = this.onDidChangeTerminalStateEmitter.event;\n\n    protected environmentVariableCollections: MultiKeyMap<string, EnvironmentVariableCollectionImpl> = new MultiKeyMap(2);\n\n    private shell: string;\n    private readonly onDidChangeShellEmitter = new Emitter<string>();\n    readonly onDidChangeShell: theia.Event<string> = this.onDidChangeShellEmitter.event;\n\n    constructor(@inject(RPCProtocol) rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TERMINAL_MAIN);\n    }\n\n    get terminals(): TerminalExtImpl[] {\n        return [...this._terminals.values()];\n    }\n\n    get defaultShell(): string {\n        return this.shell || '';\n    }\n\n    async $setShell(shell: string): Promise<void> {\n        if (this.shell !== shell) {\n            this.shell = shell;\n            this.onDidChangeShellEmitter.fire(shell);\n        }\n    }\n\n    createTerminal(\n        nameOrOptions: TerminalOptions | PseudoTerminalOptions | ExtensionTerminalOptions | (string | undefined),\n        shellPath?: string, shellArgs?: string[] | string\n    ): Terminal {\n        const id = `plugin-terminal-${UUID.uuid4()}`;\n        let options: TerminalOptions;\n        let pseudoTerminal: theia.Pseudoterminal | undefined = undefined;\n        if (typeof nameOrOptions === 'object') {\n            if ('pty' in nameOrOptions) {\n                pseudoTerminal = nameOrOptions.pty;\n                options = {\n                    name: nameOrOptions.name,\n                };\n                this._pseudoTerminals.set(id, new PseudoTerminal(id, this.proxy, pseudoTerminal));\n            } else {\n                options = nameOrOptions;\n            }\n        } else {\n            options = {\n                name: nameOrOptions,\n                shellPath: shellPath,\n                shellArgs: shellArgs\n            };\n        }\n\n        let parentId;\n\n        if (options.location && typeof options.location === 'object' && 'parentTerminal' in options.location) {\n            const parentTerminal = options.location.parentTerminal;\n            if (parentTerminal instanceof TerminalExtImpl) {\n                for (const [k, v] of this._terminals) {\n                    if (v === parentTerminal) {\n                        parentId = k;\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.proxy.$createTerminal(id, options, parentId, !!pseudoTerminal);\n\n        let creationOptions: theia.TerminalOptions | theia.ExtensionTerminalOptions = options;\n        // make sure to pass ExtensionTerminalOptions as creation options\n        if (typeof nameOrOptions === 'object' && 'pty' in nameOrOptions) {\n            creationOptions = nameOrOptions;\n        }\n        return this.obtainTerminal(id, options.name || 'Terminal', creationOptions);\n    }\n\n    attachPtyToTerminal(terminalId: number, pty: theia.Pseudoterminal): void {\n        this._pseudoTerminals.set(terminalId.toString(), new PseudoTerminal(terminalId, this.proxy, pty, true));\n    }\n\n    protected obtainTerminal(id: string, name: string, options?: theia.TerminalOptions | theia.ExtensionTerminalOptions): TerminalExtImpl {\n        let terminal = this._terminals.get(id);\n        if (!terminal) {\n            terminal = new TerminalExtImpl(this.proxy, options ?? {});\n            this._terminals.set(id, terminal);\n        }\n        terminal.name = name;\n        return terminal;\n    }\n\n    $terminalOnInput(id: string, data: string): void {\n        const terminal = this._pseudoTerminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        terminal.emitOnInput(data);\n    }\n\n    $terminalStateChanged(id: string): void {\n        const terminal = this._terminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        if (!terminal.state.isInteractedWith) {\n            terminal.state = { isInteractedWith: true };\n            this.onDidChangeTerminalStateEmitter.fire(terminal);\n        }\n    }\n\n    $terminalSizeChanged(id: string, clos: number, rows: number): void {\n        const terminal = this._pseudoTerminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        terminal.emitOnResize(clos, rows);\n    }\n\n    $terminalCreated(id: string, name: string): void {\n        const terminal = this.obtainTerminal(id, name);\n        terminal.id.resolve(id);\n        this.onDidOpenTerminalEmitter.fire(terminal);\n    }\n\n    $terminalNameChanged(id: string, name: string): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            terminal.name = name;\n        }\n    }\n\n    $terminalOpened(id: string, processId: number, terminalId: number, cols: number, rows: number): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            // resolve for existing clients\n            terminal.deferredProcessId.resolve(processId);\n            // install new if terminal is reconnected\n            terminal.deferredProcessId = new Deferred<number>();\n            terminal.deferredProcessId.resolve(processId);\n        }\n\n        // Switch the pseudoterminal keyed by terminalId to be keyed by terminal ID\n        const tId = terminalId.toString();\n        if (this._pseudoTerminals.has(tId)) {\n            const pseudo = this._pseudoTerminals.get(tId);\n            if (pseudo) {\n                this._pseudoTerminals.set(id, pseudo);\n            }\n            this._pseudoTerminals.delete(tId);\n        }\n\n        const pseudoTerminal = this._pseudoTerminals.get(id);\n        if (pseudoTerminal) {\n            pseudoTerminal.emitOnOpen(cols, rows);\n        }\n    }\n\n    $terminalClosed(id: string, exitStatus: theia.TerminalExitStatus | undefined): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            terminal.exitStatus = exitStatus ?? { code: undefined, reason: TerminalExitReason.Unknown };\n            this.onDidCloseTerminalEmitter.fire(terminal);\n            this._terminals.delete(id);\n        }\n        const pseudoTerminal = this._pseudoTerminals.get(id);\n        if (pseudoTerminal) {\n            pseudoTerminal.emitOnClose();\n            this._pseudoTerminals.delete(id);\n        }\n    }\n\n    private activeTerminalId: string | undefined;\n    get activeTerminal(): TerminalExtImpl | undefined {\n        return this.activeTerminalId && this._terminals.get(this.activeTerminalId) || undefined;\n    }\n    $currentTerminalChanged(id: string | undefined): void {\n        this.activeTerminalId = id;\n        this.onDidChangeActiveTerminalEmitter.fire(this.activeTerminal);\n    }\n\n    registerTerminalLinkProvider(provider: theia.TerminalLinkProvider): theia.Disposable {\n        const providerId = (TerminalServiceExtImpl.nextProviderId++).toString();\n        this.terminalLinkProviders.set(providerId, provider);\n        this.proxy.$registerTerminalLinkProvider(providerId);\n        return Disposable.create(() => {\n            this.proxy.$unregisterTerminalLinkProvider(providerId);\n            this.terminalLinkProviders.delete(providerId);\n        });\n    }\n\n    registerTerminalProfileProvider(id: string, provider: theia.TerminalProfileProvider): theia.Disposable {\n        this.terminalProfileProviders.set(id, provider);\n        return Disposable.create(() => {\n            this.terminalProfileProviders.delete(id);\n        });\n    }\n\n    /** @stubbed */\n    registerTerminalQuickFixProvider(id: string, provider: theia.TerminalQuickFixProvider): theia.Disposable {\n        return Disposable.NULL;\n    }\n\n    registerTerminalObserver(observer: theia.TerminalObserver): theia.Disposable {\n        const id = (TerminalServiceExtImpl.nextProviderId++).toString();\n        this.terminalObservers.set(id, observer);\n        this.proxy.$registerTerminalObserver(id, observer.nrOfLinesToMatch, observer.outputMatcherRegex);\n        return Disposable.create(() => {\n            this.proxy.$unregisterTerminalObserver(id);\n            this.terminalObservers.delete(id);\n        });\n    }\n\n    $reportOutputMatch(observerId: string, groups: string[]): void {\n        const observer = this.terminalObservers.get(observerId);\n        if (observer) {\n            observer.matchOccurred(groups);\n        } else {\n            throw new Error(`reporting matches for unregistered observer: ${observerId} `);\n        }\n    }\n\n    protected isExtensionTerminalOptions(options: theia.TerminalOptions | theia.ExtensionTerminalOptions): options is theia.ExtensionTerminalOptions {\n        return 'pty' in options;\n    }\n\n    async $startProfile(profileId: string, cancellationToken: theia.CancellationToken): Promise<string> {\n        const provider = this.terminalProfileProviders.get(profileId);\n        if (!provider) {\n            throw new Error(`No terminal profile provider with id '${profileId}'`);\n        }\n        const profile = await provider.provideTerminalProfile(cancellationToken);\n        if (!profile) {\n            throw new Error(`Profile with id ${profileId} could not be created`);\n        }\n        const id = `plugin-terminal-${UUID.uuid4()}`;\n        const options = profile.options;\n        if (this.isExtensionTerminalOptions(options)) {\n            this._pseudoTerminals.set(id, new PseudoTerminal(id, this.proxy, options.pty));\n            return this.proxy.$createTerminal(id, { name: options.name }, undefined, true);\n        } else {\n            return this.proxy.$createTerminal(id, profile.options);\n        }\n    }\n\n    async $provideTerminalLinks(line: string, terminalId: string, token: theia.CancellationToken): Promise<ProvidedTerminalLink[]> {\n        const links: ProvidedTerminalLink[] = [];\n        const terminal = this._terminals.get(terminalId);\n        if (terminal) {\n            for (const [providerId, provider] of this.terminalLinkProviders) {\n                const providedLinks = await provider.provideTerminalLinks({ line, terminal }, token);\n                if (providedLinks) {\n                    links.push(...providedLinks.map(link => ({ ...link, providerId })));\n                }\n            }\n        }\n        return links;\n    }\n\n    async $handleTerminalLink(link: ProvidedTerminalLink): Promise<void> {\n        const provider = this.terminalLinkProviders.get(link.providerId);\n        if (!provider) {\n            throw Error('Terminal link provider not found');\n        }\n        await provider.handleTerminalLink(link);\n    }\n\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    // some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/api/common/extHostTerminalService.ts\n\n    getEnvironmentVariableCollection(extensionIdentifier: string, rootUri: string = NO_ROOT_URI): theia.GlobalEnvironmentVariableCollection {\n        const that = this;\n        let collection = this.environmentVariableCollections.get([extensionIdentifier, rootUri]);\n        if (!collection) {\n            collection = new class extends EnvironmentVariableCollectionImpl {\n                override getScoped(scope: theia.EnvironmentVariableScope): theia.EnvironmentVariableCollection {\n                    return that.getEnvironmentVariableCollection(extensionIdentifier, scope.workspaceFolder?.uri.toString());\n                }\n            }(true);\n            this.setEnvironmentVariableCollection(extensionIdentifier, rootUri, collection);\n        }\n        return collection;\n    }\n\n    private syncEnvironmentVariableCollection(extensionIdentifier: string, rootUri: string, collection: EnvironmentVariableCollectionImpl): void {\n        const serialized = [...collection.map.entries()];\n        this.proxy.$setEnvironmentVariableCollection(collection.persistent, extensionIdentifier,\n            rootUri,\n            {\n                mutators: serialized,\n                description: Converter.fromMarkdownOrString(collection.description)\n            });\n    }\n\n    private setEnvironmentVariableCollection(pluginIdentifier: string, rootUri: string, collection: EnvironmentVariableCollectionImpl): void {\n        this.environmentVariableCollections.set([pluginIdentifier, rootUri], collection);\n        collection.onDidChangeCollection(() => {\n            // When any collection value changes send this immediately, this is done to ensure\n            // following calls to createTerminal will be created with the new environment. It will\n            // result in more noise by sending multiple updates when called but collections are\n            // expected to be small.\n            this.syncEnvironmentVariableCollection(pluginIdentifier, rootUri, collection);\n        });\n    }\n\n    $initEnvironmentVariableCollections(collections: [string, string, boolean, SerializableEnvironmentVariableCollection][]): void {\n        collections.forEach(entry => {\n            const extensionIdentifier = entry[0];\n            const rootUri = entry[1];\n            const collection = new EnvironmentVariableCollectionImpl(entry[2], entry[3]);\n            this.setEnvironmentVariableCollection(extensionIdentifier, rootUri, collection);\n        });\n    }\n\n}\n\nexport class EnvironmentVariableCollectionImpl implements theia.GlobalEnvironmentVariableCollection {\n    readonly map: Map<string, theia.EnvironmentVariableMutator> = new Map();\n    private _description?: string | theia.MarkdownString;\n    private _persistent: boolean = true;\n\n    public get description(): string | theia.MarkdownString | undefined { return this._description; }\n    public set description(value: string | theia.MarkdownString | undefined) {\n        this._description = value;\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    public get persistent(): boolean { return this._persistent; }\n    public set persistent(value: boolean) {\n        this._persistent = value;\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    protected readonly onDidChangeCollectionEmitter: Emitter<void> = new Emitter<void>();\n    onDidChangeCollection: Event<void> = this.onDidChangeCollectionEmitter.event;\n\n    constructor(\n        persistent: boolean,\n        serialized?: SerializableEnvironmentVariableCollection\n    ) {\n        this._persistent = persistent;\n        this.map = new Map(serialized?.mutators);\n    }\n\n    getScoped(scope: theia.EnvironmentVariableScope): theia.EnvironmentVariableCollection {\n        throw new Error('Cannot get scoped from a regular env var collection');\n    }\n\n    get size(): number {\n        return this.map.size;\n    }\n\n    replace(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Replace, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    append(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Append, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    prepend(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Prepend, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    private _setIfDiffers(variable: string, mutator: theia.EnvironmentVariableMutator): void {\n        const current = this.map.get(variable);\n        if (!current || current.value !== mutator.value || current.type !== mutator.type) {\n            this.map.set(variable, mutator);\n            this.onDidChangeCollectionEmitter.fire();\n        }\n    }\n\n    get(variable: string): theia.EnvironmentVariableMutator | undefined {\n        return this.map.get(variable);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    forEach(callback: (variable: string, mutator: theia.EnvironmentVariableMutator, collection: theia.EnvironmentVariableCollection) => any, thisArg?: any): void {\n        this.map.forEach((value, key) => callback.call(thisArg, key, value, this));\n    }\n\n    delete(variable: string): void {\n        this.map.delete(variable);\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    clear(): void {\n        this.map.clear();\n        this.onDidChangeCollectionEmitter.fire();\n    }\n}\n\nexport class TerminalExtImpl implements Terminal {\n\n    name: string;\n\n    readonly id = new Deferred<string>();\n\n    exitStatus: theia.TerminalExitStatus | undefined;\n\n    deferredProcessId = new Deferred<number>();\n\n    get processId(): Thenable<number> {\n        return this.deferredProcessId.promise;\n    }\n\n    readonly creationOptions: Readonly<TerminalOptions | ExtensionTerminalOptions>;\n\n    state: TerminalState = { isInteractedWith: false };\n\n    constructor(private readonly proxy: TerminalServiceMain, private readonly options: theia.TerminalOptions | theia.ExtensionTerminalOptions) {\n        this.creationOptions = this.options;\n    }\n\n    sendText(text: string, shouldExecute: boolean = true): void {\n        this.id.promise.then(id => this.proxy.$sendText(id, text, shouldExecute));\n    }\n\n    show(preserveFocus?: boolean): void {\n        this.id.promise.then(id => this.proxy.$show(id, preserveFocus));\n    }\n\n    hide(): void {\n        this.id.promise.then(id => this.proxy.$hide(id));\n    }\n\n    dispose(): void {\n        this.id.promise.then(id => this.proxy.$dispose(id));\n    }\n}\n\nexport class PseudoTerminal {\n    constructor(\n        id: string | number,\n        private readonly proxy: TerminalServiceMain,\n        private readonly pseudoTerminal: theia.Pseudoterminal,\n        waitOnExit?: boolean | string\n    ) {\n\n        pseudoTerminal.onDidWrite(data => {\n            if (typeof id === 'string') {\n                this.proxy.$write(id, data);\n            } else {\n                this.proxy.$writeByTerminalId(id, data);\n            }\n        });\n        if (pseudoTerminal.onDidClose) {\n            pseudoTerminal.onDidClose((e: number | void = undefined) => {\n                if (typeof id === 'string') {\n                    this.proxy.$dispose(id);\n                } else {\n                    this.proxy.$disposeByTerminalId(id, waitOnExit);\n                }\n            });\n        }\n        if (pseudoTerminal.onDidOverrideDimensions) {\n            pseudoTerminal.onDidOverrideDimensions(e => {\n                if (e) {\n                    if (typeof id === 'string') {\n                        this.proxy.$resize(id, e.columns, e.rows);\n                    } else {\n                        this.proxy.$resizeByTerminalId(id, e.columns, e.rows);\n                    }\n                }\n            });\n        }\n        if (pseudoTerminal.onDidChangeName) {\n            pseudoTerminal.onDidChangeName(name => {\n                if (typeof id === 'string') {\n                    this.proxy.$setName(id, name);\n                } else {\n                    this.proxy.$setNameByTerminalId(id, name);\n                }\n            });\n        }\n    }\n\n    emitOnClose(): void {\n        this.pseudoTerminal.close();\n    }\n\n    emitOnInput(data: string): void {\n        if (this.pseudoTerminal.handleInput) {\n            this.pseudoTerminal.handleInput(data);\n        }\n    }\n\n    emitOnOpen(cols: number, rows: number): void {\n        this.pseudoTerminal.open({\n            rows,\n            columns: cols,\n        });\n    }\n\n    emitOnResize(cols: number, rows: number): void {\n        if (this.pseudoTerminal.setDimensions) {\n            this.pseudoTerminal.setDimensions({ columns: cols, rows });\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}