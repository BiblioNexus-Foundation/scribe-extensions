{"version":3,"file":"vendors-node_modules_theia_core_lib_browser_window_browser-window-module_js.js","mappings":"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","sources":["webpack:///../node_modules/@theia/core/src/browser/browser-clipboard-service.ts?","webpack:///../node_modules/@theia/core/src/browser/window/browser-window-module.ts?","webpack:///../node_modules/@theia/core/src/browser/window/default-secondary-window-service.ts?","webpack:///../node_modules/@theia/core/src/browser/window/default-window-service.ts?","webpack:///../node_modules/@theia/core/src/common/window.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2019 RedHat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport { isFirefox } from './browser';\nimport { ClipboardService } from './clipboard-service';\nimport { ILogger } from '../common/logger';\nimport { MessageService } from '../common/message-service';\nimport { nls } from '../common/nls';\n\nexport interface NavigatorClipboard {\n    readText(): Promise<string>;\n    writeText(value: string): Promise<void>;\n}\nexport interface PermissionStatus {\n    state: 'granted' | 'prompt' | 'denied'\n}\nexport interface NavigatorPermissions {\n    query(options: { name: string }): Promise<PermissionStatus>\n}\n\n@injectable()\nexport class BrowserClipboardService implements ClipboardService {\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    async readText(): Promise<string> {\n        let permission;\n        try {\n            permission = await this.queryPermission('clipboard-read');\n        } catch (e1) {\n            this.logger.error('Failed checking a clipboard-read permission.', e1);\n            // in FireFox, Clipboard API isn't gated with the permissions\n            try {\n                return await this.getClipboardAPI().readText();\n            } catch (e2) {\n                this.logger.error('Failed reading clipboard content.', e2);\n                if (isFirefox) {\n                    this.messageService.warn(nls.localize(\n                        'theia/navigator/clipboardWarnFirefox',\n                        // eslint-disable-next-line max-len\n                        \"Clipboard API is not available. It can be enabled by '{0}' preference on '{1}' page. Then reload Theia. Note, it will allow FireFox getting full access to the system clipboard.\", 'dom.events.testing.asyncClipboard', 'about:config'\n                    ));\n                }\n                return '';\n            }\n        }\n        if (permission.state === 'denied') {\n            // most likely, the user intentionally denied the access\n            this.messageService.warn(nls.localize(\n                'theia/navigator/clipboardWarn',\n                \"Access to the clipboard is denied. Check your browser's permission.\"\n            ));\n            return '';\n        }\n        return this.getClipboardAPI().readText();\n    }\n\n    async writeText(value: string): Promise<void> {\n        let permission;\n        try {\n            permission = await this.queryPermission('clipboard-write');\n        } catch (e1) {\n            this.logger.error('Failed checking a clipboard-write permission.', e1);\n            // in FireFox, Clipboard API isn't gated with the permissions\n            try {\n                await this.getClipboardAPI().writeText(value);\n                return;\n            } catch (e2) {\n                this.logger.error('Failed writing to the clipboard.', e2);\n                if (isFirefox) {\n                    this.messageService.warn(nls.localize(\n                        'theia/core/navigator/clipboardWarnFirefox',\n                        // eslint-disable-next-line max-len\n                        \"Clipboard API is not available. It can be enabled by '{0}' preference on '{1}' page. Then reload Theia. Note, it will allow FireFox getting full access to the system clipboard.\", 'dom.events.testing.asyncClipboard', 'about:config'\n                    ));\n                }\n                return;\n            }\n        }\n        if (permission.state === 'denied') {\n            // most likely, the user intentionally denied the access\n            this.messageService.warn(nls.localize(\n                'theia/core/navigator/clipboardWarn',\n                \"Access to the clipboard is denied. Check your browser's permission.\"\n            ));\n            return;\n        }\n        return this.getClipboardAPI().writeText(value);\n    }\n\n    protected async queryPermission(name: string): Promise<PermissionStatus> {\n        if ('permissions' in navigator) {\n            return (<NavigatorPermissions>navigator['permissions']).query({ name: name });\n        }\n        throw new Error('Permissions API unavailable');\n    }\n\n    protected getClipboardAPI(): NavigatorClipboard {\n        if ('clipboard' in navigator) {\n            return (<NavigatorClipboard>navigator['clipboard']);\n        }\n        throw new Error('Async Clipboard API unavailable');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { WindowService } from '../../browser/window/window-service';\nimport { DefaultWindowService } from '../../browser/window/default-window-service';\nimport { FrontendApplicationContribution } from '../frontend-application-contribution';\nimport { ClipboardService } from '../clipboard-service';\nimport { BrowserClipboardService } from '../browser-clipboard-service';\nimport { SecondaryWindowService } from './secondary-window-service';\nimport { DefaultSecondaryWindowService } from './default-secondary-window-service';\n\nexport default new ContainerModule(bind => {\n    bind(DefaultWindowService).toSelf().inSingletonScope();\n    bind(WindowService).toService(DefaultWindowService);\n    bind(FrontendApplicationContribution).toService(DefaultWindowService);\n    bind(ClipboardService).to(BrowserClipboardService).inSingletonScope();\n    bind(SecondaryWindowService).to(DefaultSecondaryWindowService).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics, Ericsson, ARM, EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { SecondaryWindowService } from './secondary-window-service';\nimport { WindowService } from './window-service';\nimport { ExtractableWidget } from '../widgets';\nimport { ApplicationShell } from '../shell';\nimport { Saveable } from '../saveable';\nimport { PreferenceService } from '../preferences';\nimport { environment } from '../../common';\nimport { SaveableService } from '../saveable-service';\n\n@injectable()\nexport class DefaultSecondaryWindowService implements SecondaryWindowService {\n    // secondary-window.html is part of Theia's generated code. It is generated by dev-packages/application-manager/src/generator/frontend-generator.ts\n    protected static SECONDARY_WINDOW_URL = 'secondary-window.html';\n\n    /**\n     * Randomized prefix to be included in opened windows' ids.\n     * This avoids conflicts when creating sub-windows from multiple theia instances (e.g. by opening Theia multiple times in the same browser)\n     */\n    protected readonly prefix = crypto.getRandomValues(new Uint32Array(1))[0];\n    /** Unique id. Increase after every access. */\n    private nextId = 0;\n\n    protected secondaryWindows: Window[] = [];\n\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(SaveableService)\n    protected readonly saveResourceService: SaveableService;\n\n    @postConstruct()\n    init(): void {\n        // Set up messaging with secondary windows\n        window.addEventListener('message', (event: MessageEvent) => {\n            console.trace('Message on main window', event);\n            if (event.data.fromSecondary) {\n                console.trace('Message comes from secondary window');\n                return;\n            }\n            if (event.data.fromMain) {\n                console.trace('Message has mainWindow marker, therefore ignore it');\n                return;\n            }\n\n            // Filter setImmediate messages. Do not forward because these come in with very high frequency.\n            // They are not needed in secondary windows because these messages are just a work around\n            // to make setImmediate work in the main window: https://developer.mozilla.org/en-US/docs/Web/API/Window/setImmediate\n            if (typeof event.data === 'string' && event.data.startsWith('setImmediate')) {\n                return;\n            }\n\n            console.trace('Delegate main window message to secondary windows', event);\n            this.secondaryWindows.forEach(secondaryWindow => {\n                if (!secondaryWindow.window.closed) {\n                    secondaryWindow.window.postMessage({ ...event.data, fromMain: true }, '*');\n                }\n            });\n        });\n\n        // Close all open windows when the main window is closed.\n        this.windowService.onUnload(() => {\n            // Iterate backwards because calling window.close might remove the window from the array\n            for (let i = this.secondaryWindows.length - 1; i >= 0; i--) {\n                this.secondaryWindows[i].close();\n            }\n        });\n    }\n\n    createSecondaryWindow(widget: ExtractableWidget, shell: ApplicationShell): Window | undefined {\n        const [height, width, left, top] = this.findSecondaryWindowCoordinates(widget);\n        let options = `popup=1,width=${width},height=${height},left=${left},top=${top}`;\n        if (this.preferenceService.get('window.secondaryWindowAlwaysOnTop')) {\n            options += ',alwaysOnTop=true';\n        }\n        const newWindow = window.open(DefaultSecondaryWindowService.SECONDARY_WINDOW_URL, this.nextWindowId(), options) ?? undefined;\n        if (newWindow) {\n            this.secondaryWindows.push(newWindow);\n            newWindow.addEventListener('DOMContentLoaded', () => {\n                newWindow.addEventListener('beforeunload', evt => {\n                    const saveable = Saveable.get(widget);\n                    const wouldLoseState = !!saveable && saveable.dirty && this.saveResourceService.autoSave === 'off';\n                    if (wouldLoseState) {\n                        evt.returnValue = '';\n                        evt.preventDefault();\n                        return 'non-empty';\n                    }\n                }, { capture: true });\n\n                newWindow.addEventListener('unload', () => {\n                    const saveable = Saveable.get(widget);\n                    shell.closeWidget(widget.id, {\n                        save: !!saveable && saveable.dirty && this.saveResourceService.autoSave !== 'off'\n                    });\n\n                    const extIndex = this.secondaryWindows.indexOf(newWindow);\n                    if (extIndex > -1) {\n                        this.secondaryWindows.splice(extIndex, 1);\n                    };\n                });\n                this.windowCreated(newWindow, widget, shell);\n            });\n        }\n        return newWindow;\n    }\n\n    protected windowCreated(newWindow: Window, widget: ExtractableWidget, shell: ApplicationShell): void {\n        newWindow.addEventListener('unload', () => {\n            shell.closeWidget(widget.id);\n        });\n    }\n\n    protected findWindow<T>(windowName: string): Window | undefined {\n        for (const w of this.secondaryWindows) {\n            if (w.name === windowName) {\n                return w;\n            }\n        }\n        return undefined;\n    }\n\n    protected findSecondaryWindowCoordinates(widget: ExtractableWidget): (number | undefined)[] {\n        const clientBounds = widget.node.getBoundingClientRect();\n        const preference = this.preferenceService.get('window.secondaryWindowPlacement');\n\n        let height; let width; let left; let top;\n        const offsetY = 20; // Offset to avoid the window title bar\n\n        switch (preference) {\n            case 'originalSize': {\n                height = widget.node.clientHeight;\n                width = widget.node.clientWidth;\n                left = window.screenLeft + clientBounds.x;\n                top = window.screenTop + (window.outerHeight - window.innerHeight) + offsetY;\n                if (environment.electron.is()) {\n                    top = window.screenTop + clientBounds.y;\n                }\n                break;\n            }\n            case 'halfWidth': {\n                height = window.innerHeight - (window.outerHeight - window.innerHeight);\n                width = window.innerWidth / 2;\n                left = window.screenLeft;\n                top = window.screenTop;\n                if (!environment.electron.is()) {\n                    height = window.innerHeight + clientBounds.y - offsetY;\n                }\n                break;\n            }\n            case 'fullSize': {\n                height = window.innerHeight - (window.outerHeight - window.innerHeight);\n                width = window.innerWidth;\n                left = window.screenLeft;\n                top = window.screenTop;\n                if (!environment.electron.is()) {\n                    height = window.innerHeight + clientBounds.y - offsetY;\n                }\n                break;\n            }\n        }\n        return [height, width, left, top];\n    }\n\n    focus(win: Window): void {\n        win.focus();\n    }\n\n    protected nextWindowId(): string {\n        return `${this.prefix}-secondaryWindow-${this.nextId++}`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from 'inversify';\nimport { Event, Emitter } from '../../common';\nimport { CorePreferences } from '../core-preferences';\nimport { ContributionProvider } from '../../common/contribution-provider';\nimport { FrontendApplicationContribution, OnWillStopAction } from '../frontend-application-contribution';\nimport { WindowService } from './window-service';\nimport { DEFAULT_WINDOW_HASH } from '../../common/window';\nimport { confirmExit } from '../dialogs';\nimport { StopReason } from '../../common/frontend-application-state';\nimport { FrontendApplication } from '../frontend-application';\n\n@injectable()\nexport class DefaultWindowService implements WindowService, FrontendApplicationContribution {\n\n    protected frontendApplication: FrontendApplication;\n    protected allowVetoes = true;\n\n    protected onUnloadEmitter = new Emitter<void>();\n    get onUnload(): Event<void> {\n        return this.onUnloadEmitter.event;\n    }\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(ContributionProvider)\n    @named(FrontendApplicationContribution)\n    protected readonly contributions: ContributionProvider<FrontendApplicationContribution>;\n\n    onStart(app: FrontendApplication): void {\n        this.frontendApplication = app;\n        this.registerUnloadListeners();\n    }\n\n    openNewWindow(url: string): undefined {\n        window.open(url, undefined, 'noopener');\n        return undefined;\n    }\n\n    openNewDefaultWindow(): void {\n        this.openNewWindow(`#${DEFAULT_WINDOW_HASH}`);\n    }\n\n    focus(): void {\n        window.focus();\n    }\n\n    /**\n     * Returns a list of actions that {@link FrontendApplicationContribution}s would like to take before shutdown\n     * It is expected that this will succeed - i.e. return an empty array - at most once per session. If no vetoes are received\n     * during any cycle, no further checks will be made. In that case, shutdown should proceed unconditionally.\n     */\n    protected collectContributionUnloadVetoes(): OnWillStopAction[] {\n        const vetoes: OnWillStopAction[] = [];\n        if (this.allowVetoes) {\n            const shouldConfirmExit = this.corePreferences['application.confirmExit'];\n            for (const contribution of this.contributions.getContributions()) {\n                const veto = contribution.onWillStop?.(this.frontendApplication);\n                if (veto && shouldConfirmExit !== 'never') { // Ignore vetoes if we should not prompt the user on exit.\n                    if (OnWillStopAction.is(veto)) {\n                        vetoes.push(veto);\n                    } else {\n                        vetoes.push({ reason: 'No reason given', action: () => false });\n                    }\n                }\n            }\n            vetoes.sort((a, b) => (a.priority ?? -Infinity) - (b.priority ?? -Infinity));\n            if (vetoes.length === 0 && shouldConfirmExit === 'always') {\n                vetoes.push({ reason: 'application.confirmExit preference', action: () => confirmExit() });\n            }\n            if (vetoes.length === 0) {\n                this.allowVetoes = false;\n            }\n        }\n        return vetoes;\n    }\n\n    /**\n     * Implement the mechanism to detect unloading of the page.\n     */\n    protected registerUnloadListeners(): void {\n        window.addEventListener('beforeunload', event => this.handleBeforeUnloadEvent(event));\n        // In a browser, `unload` is correctly fired when the page unloads, unlike Electron.\n        // If `beforeunload` is cancelled, the user will be prompted to leave or stay.\n        // If the user stays, the page won't be unloaded, so `unload` is not fired.\n        // If the user leaves, the page will be unloaded, so `unload` is fired.\n        window.addEventListener('unload', () => this.onUnloadEmitter.fire());\n    }\n\n    async isSafeToShutDown(stopReason: StopReason): Promise<boolean> {\n        const vetoes = this.collectContributionUnloadVetoes();\n        if (vetoes.length === 0) {\n            return true;\n        }\n        const preparedValues = await Promise.all(vetoes.map(e => e.prepare?.(stopReason)));\n        console.debug('Shutdown prevented by', vetoes.map(({ reason }) => reason).join(', '));\n        for (let i = 0; i < vetoes.length; i++) {\n            try {\n                const result = await vetoes[i].action(preparedValues[i], stopReason);\n                if (!result) {\n                    return false;\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        console.debug('OnWillStop actions resolved; allowing shutdown');\n        this.allowVetoes = false;\n        return true;\n    }\n\n    setSafeToShutDown(): void {\n        this.allowVetoes = false;\n    }\n\n    /**\n     * Called when the `window` is about to `unload` its resources.\n     * At this point, the `document` is still visible and the [`BeforeUnloadEvent`](https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event)\n     * event will be canceled if the return value of this method is `false`.\n     *\n     * In Electron, handleCloseRequestEvent is is run instead.\n     */\n    protected handleBeforeUnloadEvent(event: BeforeUnloadEvent): string | void {\n        const vetoes = this.collectContributionUnloadVetoes();\n        if (vetoes.length) {\n            // In the browser, we don't call the functions because this has to finish in a single tick, so we treat any desired action as a veto.\n            console.debug('Shutdown prevented by', vetoes.map(({ reason }) => reason).join(', '));\n            return this.preventUnload(event);\n        }\n        console.debug('Shutdown will proceed.');\n    }\n\n    /**\n     * Notify the browser that we do not want to unload.\n     *\n     * Notes:\n     *  - Shows a confirmation popup in browsers.\n     *  - Prevents the window from closing without confirmation in electron.\n     *\n     * @param event The beforeunload event\n     */\n    protected preventUnload(event: BeforeUnloadEvent): string | void {\n        event.returnValue = '';\n        event.preventDefault();\n        return '';\n    }\n\n    reload(): void {\n        this.isSafeToShutDown(StopReason.Reload).then(isSafe => {\n            if (isSafe) {\n                window.location.reload();\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * The window hash value that is used to spawn a new default window.\n */\nexport const DEFAULT_WINDOW_HASH: string = '!empty';\n\n/**\n * The options for opening new windows.\n */\nexport interface NewWindowOptions {\n    /**\n     * Controls whether the window should be opened externally.\n     */\n    readonly external?: boolean;\n}\n\nexport interface WindowSearchParams {\n    [key: string]: string\n}\n"],"names":[],"sourceRoot":""}