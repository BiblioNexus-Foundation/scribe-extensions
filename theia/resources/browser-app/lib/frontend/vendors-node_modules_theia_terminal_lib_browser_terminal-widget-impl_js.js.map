{"version":3,"file":"vendors-node_modules_theia_terminal_lib_browser_terminal-widget-impl_js.js","mappings":"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AAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,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","sources":["webpack:///../node_modules/@theia/terminal/src/browser/style/terminal-search.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/terminal/src/browser/base/terminal-service.ts?","webpack:///../node_modules/@theia/terminal/src/browser/base/terminal-widget.ts?","webpack:///../node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx?","webpack:///../node_modules/@theia/terminal/src/browser/shell-terminal-profile.ts?","webpack:///../node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts?","webpack:///../node_modules/@theia/terminal/src/browser/terminal-frontend-contribution.ts?","webpack:///../node_modules/@theia/terminal/src/browser/terminal-profile-service.ts?","webpack:///../node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts?","webpack:///../node_modules/@theia/terminal/src/common/base-terminal-protocol.ts?","webpack:///../node_modules/@theia/terminal/src/common/shell-terminal-protocol.ts?","webpack:///../node_modules/@theia/terminal/src/common/terminal-protocol.ts?","webpack:///../node_modules/@theia/terminal/src/common/terminal-watcher.ts?","webpack:///FitAddon/webpack/universalModuleDefinition?","webpack:///FitAddon/./src/FitAddon.ts?","webpack:///SearchAddon/webpack/universalModuleDefinition?","webpack:///SearchAddon/../../src/common/EventEmitter.ts?","webpack:///SearchAddon/../../src/common/Lifecycle.ts?","webpack:///SearchAddon/webpack/bootstrap?","webpack:///SearchAddon/./src/SearchAddon.ts?","webpack:///xterm/webpack/universalModuleDefinition?","webpack:///xterm/./src/browser/AccessibilityManager.ts?","webpack:///xterm/./src/browser/Clipboard.ts?","webpack:///xterm/./src/browser/ColorContrastCache.ts?","webpack:///xterm/./src/browser/Lifecycle.ts?","webpack:///xterm/./src/browser/Linkifier2.ts?","webpack:///xterm/./src/browser/LocalizableStrings.ts?","webpack:///xterm/./src/browser/OscLinkProvider.ts?","webpack:///xterm/./src/browser/RenderDebouncer.ts?","webpack:///xterm/./src/browser/ScreenDprMonitor.ts?","webpack:///xterm/./src/browser/Terminal.ts?","webpack:///xterm/./src/browser/TimeBasedDebouncer.ts?","webpack:///xterm/./src/browser/Viewport.ts?","webpack:///xterm/./src/browser/decorations/BufferDecorationRenderer.ts?","webpack:///xterm/./src/browser/decorations/ColorZoneStore.ts?","webpack:///xterm/./src/browser/decorations/OverviewRulerRenderer.ts?","webpack:///xterm/./src/browser/input/CompositionHelper.ts?","webpack:///xterm/./src/browser/input/Mouse.ts?","webpack:///xterm/./src/browser/input/MoveToCell.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRenderer.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts?","webpack:///xterm/./src/browser/renderer/dom/WidthCache.ts?","webpack:///xterm/./src/browser/renderer/shared/Constants.ts?","webpack:///xterm/./src/browser/renderer/shared/RendererUtils.ts?","webpack:///xterm/./src/browser/selection/SelectionModel.ts?","webpack:///xterm/./src/browser/services/CharSizeService.ts?","webpack:///xterm/./src/browser/services/CharacterJoinerService.ts?","webpack:///xterm/./src/browser/services/CoreBrowserService.ts?","webpack:///xterm/./src/browser/services/MouseService.ts?","webpack:///xterm/./src/browser/services/RenderService.ts?","webpack:///xterm/./src/browser/services/SelectionService.ts?","webpack:///xterm/./src/browser/services/Services.ts?","webpack:///xterm/./src/browser/services/ThemeService.ts?","webpack:///xterm/./src/common/CircularList.ts?","webpack:///xterm/./src/common/Clone.ts?","webpack:///xterm/./src/common/Color.ts?","webpack:///xterm/./src/common/CoreTerminal.ts?","webpack:///xterm/./src/common/EventEmitter.ts?","webpack:///xterm/./src/common/InputHandler.ts?","webpack:///xterm/./src/common/Lifecycle.ts?","webpack:///xterm/./src/common/MultiKeyMap.ts?","webpack:///xterm/./src/common/Platform.ts?","webpack:///xterm/./src/common/SortedList.ts?","webpack:///xterm/./src/common/TaskQueue.ts?","webpack:///xterm/./src/common/WindowsMode.ts?","webpack:///xterm/./src/common/buffer/AttributeData.ts?","webpack:///xterm/./src/common/buffer/Buffer.ts?","webpack:///xterm/./src/common/buffer/BufferLine.ts?","webpack:///xterm/./src/common/buffer/BufferRange.ts?","webpack:///xterm/./src/common/buffer/BufferReflow.ts?","webpack:///xterm/./src/common/buffer/BufferSet.ts?","webpack:///xterm/./src/common/buffer/CellData.ts?","webpack:///xterm/./src/common/buffer/Constants.ts?","webpack:///xterm/./src/common/buffer/Marker.ts?","webpack:///xterm/./src/common/data/Charsets.ts?","webpack:///xterm/./src/common/data/EscapeSequences.ts?","webpack:///xterm/./src/common/input/Keyboard.ts?","webpack:///xterm/./src/common/input/TextDecoder.ts?","webpack:///xterm/./src/common/input/UnicodeV6.ts?","webpack:///xterm/./src/common/input/WriteBuffer.ts?","webpack:///xterm/./src/common/input/XParseColor.ts?","webpack:///xterm/./src/common/parser/Constants.ts?","webpack:///xterm/./src/common/parser/DcsParser.ts?","webpack:///xterm/./src/common/parser/EscapeSequenceParser.ts?","webpack:///xterm/./src/common/parser/OscParser.ts?","webpack:///xterm/./src/common/parser/Params.ts?","webpack:///xterm/./src/common/public/AddonManager.ts?","webpack:///xterm/./src/common/public/BufferApiView.ts?","webpack:///xterm/./src/common/public/BufferLineApiView.ts?","webpack:///xterm/./src/common/public/BufferNamespaceApi.ts?","webpack:///xterm/./src/common/public/ParserApi.ts?","webpack:///xterm/./src/common/public/UnicodeApi.ts?","webpack:///xterm/./src/common/services/BufferService.ts?","webpack:///xterm/./src/common/services/CharsetService.ts?","webpack:///xterm/./src/common/services/CoreMouseService.ts?","webpack:///xterm/./src/common/services/CoreService.ts?","webpack:///xterm/./src/common/services/DecorationService.ts?","webpack:///xterm/./src/common/services/InstantiationService.ts?","webpack:///xterm/./src/common/services/LogService.ts?","webpack:///xterm/./src/common/services/OptionsService.ts?","webpack:///xterm/./src/common/services/OscLinkService.ts?","webpack:///xterm/./src/common/services/ServiceRegistry.ts?","webpack:///xterm/./src/common/services/Services.ts?","webpack:///xterm/./src/common/services/UnicodeService.ts?","webpack:///xterm/webpack/bootstrap?","webpack:///xterm/./src/browser/public/Terminal.ts?","webpack:///../node_modules/@theia/terminal/src/browser/style/terminal-search.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-search-terminal-widget-parent {\n  background: var(--theia-sideBar-background);\n  position: absolute;\n  margin: 0px;\n  border: var(--theia-border-width) solid transparent;\n  padding: 0px;\n  top: 1px;\n  right: 19px;\n\n  z-index: 10;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box {\n  display: flex;\n  margin: 0px;\n  border: var(--theia-border-width) solid transparent;\n  padding: 0px;\n  align-items: center;\n  color: var(--theia-input-foreground);\n  background: var(--theia-input-background);\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\n  margin-left: 5px;\n  padding: 0px;\n  width: 100px;\n  height: 18px;\n  color: inherit;\n  background-color: inherit;\n  border: var(--theia-border-width) solid transparent;\n  outline: none;\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-elem-box\n  .search-elem.codicon {\n  height: 16px;\n  width: 18px;\n}\n\n.theia-search-terminal-widget-parent .search-elem.codicon {\n  border: var(--theia-border-width) solid transparent;\n  height: 20px;\n  width: 20px;\n  opacity: 0.7;\n  outline: none;\n  color: var(--theia-input-foreground);\n  padding: 0px;\n  margin-left: 3px;\n}\n\n.theia-search-terminal-widget-parent .search-elem:hover {\n  opacity: 1;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\n  border: var(--theia-border-width) solid var(--theia-focusBorder);\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-elem-box\n  .search-elem.option-enabled {\n  border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\n  background-color: var(--theia-inputOption-activeBackground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\n  margin: 2px;\n  display: flex;\n  align-items: center;\n  font: var(--theia-content-font-size);\n  color: var(--theia-input-foreground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\n  background-color: transparent;\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-terminal-widget\n  button:focus {\n  border: var(--theia-border-width) var(--theia-focusBorder) solid;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/terminal/src/browser/style/terminal-search.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,2CAA2C;EAC3C,kBAAkB;EAClB,WAAW;EACX,mDAAmD;EACnD,YAAY;EACZ,QAAQ;EACR,WAAW;;EAEX,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mDAAmD;EACnD,YAAY;EACZ,mBAAmB;EACnB,oCAAoC;EACpC,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,cAAc;EACd,yBAAyB;EACzB,mDAAmD;EACnD,aAAa;AACf;;AAEA;;;EAGE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,mDAAmD;EACnD,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,aAAa;EACb,oCAAoC;EACpC,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gEAAgE;AAClE;;AAEA;;;EAGE,6EAA6E;EAC7E,2DAA2D;AAC7D;;AAEA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE,gEAAgE;AAClE\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n  background: var(--theia-sideBar-background);\\n  position: absolute;\\n  margin: 0px;\\n  border: var(--theia-border-width) solid transparent;\\n  padding: 0px;\\n  top: 1px;\\n  right: 19px;\\n\\n  z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n  display: flex;\\n  margin: 0px;\\n  border: var(--theia-border-width) solid transparent;\\n  padding: 0px;\\n  align-items: center;\\n  color: var(--theia-input-foreground);\\n  background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n  margin-left: 5px;\\n  padding: 0px;\\n  width: 100px;\\n  height: 18px;\\n  color: inherit;\\n  background-color: inherit;\\n  border: var(--theia-border-width) solid transparent;\\n  outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-elem-box\\n  .search-elem.codicon {\\n  height: 16px;\\n  width: 18px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem.codicon {\\n  border: var(--theia-border-width) solid transparent;\\n  height: 20px;\\n  width: 20px;\\n  opacity: 0.7;\\n  outline: none;\\n  color: var(--theia-input-foreground);\\n  padding: 0px;\\n  margin-left: 3px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n  opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n  border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-elem-box\\n  .search-elem.option-enabled {\\n  border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n  background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n  margin: 2px;\\n  display: flex;\\n  align-items: center;\\n  font: var(--theia-content-font-size);\\n  color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n  background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-terminal-widget\\n  button:focus {\\n  border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Event } from '@theia/core/lib/common/event';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TerminalWidgetOptions, TerminalWidget } from './terminal-widget';\n\n/**\n * Service manipulating terminal widgets.\n */\nexport const TerminalService = Symbol('TerminalService');\nexport interface TerminalService {\n\n    /**\n     * Create new terminal with predefined options.\n     * @param options - terminal options.\n     */\n    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;\n\n    open(terminal: TerminalWidget, options?: WidgetOpenerOptions): void;\n\n    readonly all: TerminalWidget[];\n\n    /**\n     * @param id - the widget id (NOT the terminal id!)\n     * @return the widget\n     */\n    getById(id: string): TerminalWidget | undefined;\n\n    /**\n     * @param id - the terminal id (NOT the terminal widget id!)\n     * @return the widget\n     */\n    getByTerminalId(terminalId: number): TerminalWidget | undefined;\n\n    /**\n     * Returns detected default shell.\n     */\n    getDefaultShell(): Promise<string>;\n\n    readonly onDidCreateTerminal: Event<TerminalWidget>;\n\n    readonly currentTerminal: TerminalWidget | undefined;\n\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined>;\n\n    readonly lastUsedTerminal: TerminalWidget | undefined;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event, ViewColumn } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo, TerminalExitReason } from '../../common/base-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\n\nexport interface TerminalDimensions {\n    cols: number;\n    rows: number;\n}\n\nexport interface TerminalExitStatus {\n    readonly code: number | undefined;\n    readonly reason: TerminalExitReason;\n}\n\nexport type TerminalLocationOptions = TerminalLocation | TerminalEditorLocation | TerminalSplitLocation;\n\nexport enum TerminalLocation {\n    Panel = 1,\n    Editor = 2\n}\n\nexport interface TerminalEditorLocation {\n    readonly viewColumn: ViewColumn;\n    readonly preserveFocus?: boolean;\n}\n\nexport interface TerminalSplitLocation {\n    readonly parentTerminal: string;\n}\n\nexport interface TerminalBuffer {\n    readonly length: number;\n    /**\n     * @param start zero based index of the first line to return\n     * @param length the max number or lines to return\n     */\n    getLines(start: number, length: number): string[];\n}\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** The ids of extensions contributing to the environment of this terminal mapped to the provided description for their changes. */\n    abstract envVarCollectionDescriptionsByExtension: Promise<Map<string, (string | MarkdownString | undefined)[]>>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    abstract readonly dimensions: TerminalDimensions;\n\n    abstract readonly exitStatus: TerminalExitStatus | undefined;\n\n    /** Terminal widget can be hidden from users until explicitly shown once. */\n    abstract readonly hiddenFromUser: boolean;\n\n    /** The position of the terminal widget. */\n    abstract readonly location: TerminalLocationOptions;\n\n    /** The last CWD assigned to the terminal, useful when attempting getCwdURI on a task terminal fails */\n    lastCwd: URI;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    /** Event that fires when the terminal size changed */\n    abstract onSizeChanged: Event<{ cols: number; rows: number; }>;\n\n    /** Event that fires when the terminal receives a key event. */\n    abstract onKey: Event<{ key: string, domEvent: KeyboardEvent }>;\n\n    /** Event that fires when the terminal input data */\n    abstract onData: Event<string>;\n\n    abstract onOutput: Event<string>;\n\n    abstract buffer: TerminalBuffer;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    /**\n     * Select entire content in the terminal.\n     */\n    abstract selectAll(): void;\n\n    abstract writeLine(line: string): void;\n\n    abstract write(data: string): void;\n\n    abstract resize(cols: number, rows: number): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n\n    abstract waitOnExit(waitOnExit?: boolean | string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * icon class\n     */\n    readonly iconClass?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Args for the custom shell executable. A string can be used on Windows only which allows\n     * specifying shell args in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6).\n     */\n    readonly shellArgs?: string[] | string;\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string | URI;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * Whether the terminal process environment should be exactly as provided in `env`.\n     */\n    readonly strictEnv?: boolean;\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Whether it is a pseudo terminal where an extension controls its input and output.\n     */\n    readonly isPseudoTerminal?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n\n    /**\n     * When enabled the terminal will run the process as normal but not be surfaced to the user until `Terminal.show` is called.\n     */\n    readonly hideFromUser?: boolean;\n\n    readonly location?: TerminalLocationOptions;\n\n    /**\n     * When enabled, the terminal will not be persisted across window reloads.\n     */\n    readonly isTransient?: boolean;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from '@theia/core/shared/react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { codicon, Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    spellCheck='false'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className={'search-elem ' + codicon('case-sensitive')} onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className={'search-elem ' + codicon('whole-word')} onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className={'search-elem ' + codicon('regex')} onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className={'search-elem ' + codicon('arrow-up')} onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className={'search-elem ' + codicon('arrow-down')} onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className={'search-elem ' + codicon('close')} onClick={this.handleHide}></button>\n        </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    override onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    override onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidget, TerminalWidgetOptions } from './base/terminal-widget';\nimport { TerminalProfile } from './terminal-profile-service';\n\nexport class ShellTerminalProfile implements TerminalProfile {\n\n    get shellPath(): string | undefined {\n        return this.options.shellPath;\n    }\n\n    constructor(protected readonly terminalService: TerminalService, protected readonly options: TerminalWidgetOptions) { }\n\n    async start(): Promise<TerminalWidget> {\n        const widget = await this.terminalService.newTerminal(this.options);\n        widget.start();\n        return widget;\n    }\n\n    /**\n     * Makes a copy of this profile modified with the options given\n     * as an argument.\n     * @param options the options to override\n     * @returns a modified copy of this profile\n     */\n    modify(options: { cwd?: string | URI }): TerminalProfile {\n        return new ShellTerminalProfile(this.terminalService, { ...this.options, ...options });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, optional, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    DisposableCollection,\n    MenuContribution,\n    MenuModelRegistry,\n    isOSX,\n    SelectionService,\n    Emitter,\n    Event,\n    ViewColumn,\n    OS,\n    CompoundMenuNodeRole\n} from '@theia/core/lib/common';\nimport {\n    ApplicationShell, KeybindingContribution, KeyCode, Key, WidgetManager, PreferenceService,\n    KeybindingRegistry, LabelProvider, WidgetOpenerOptions, StorageService, QuickInputService,\n    codicon, CommonCommands, FrontendApplicationContribution, OnWillStopAction, Dialog, ConfirmDialog, FrontendApplication, PreferenceScope, Widget, SHELL_TABBAR_CONTEXT_MENU\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { TERMINAL_WIDGET_FACTORY_ID, TerminalWidgetFactoryOptions, TerminalWidgetImpl } from './terminal-widget-impl';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidgetOptions, TerminalWidget, TerminalLocation } from './base/terminal-widget';\nimport { ContributedTerminalProfileStore, NULL_PROFILE, TerminalProfile, TerminalProfileService, TerminalProfileStore, UserTerminalProfileStore } from './terminal-profile-service';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { MAIN_MENU_BAR } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { Profiles, TerminalPreferences } from './terminal-preferences';\nimport { ShellTerminalProfile } from './shell-terminal-profile';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { Color } from '@theia/core/lib/common/color';\n\nexport namespace TerminalMenus {\n    export const TERMINAL = [...MAIN_MENU_BAR, '7_terminal'];\n    export const TERMINAL_NEW = [...TERMINAL, '1_terminal'];\n\n    export const TERMINAL_TASKS = [...TERMINAL, '2_terminal'];\n    export const TERMINAL_TASKS_INFO = [...TERMINAL_TASKS, '3_terminal'];\n    export const TERMINAL_TASKS_CONFIG = [...TERMINAL_TASKS, '4_terminal'];\n    export const TERMINAL_NAVIGATOR_CONTEXT_MENU = ['navigator-context-menu', 'navigation'];\n    export const TERMINAL_OPEN_EDITORS_CONTEXT_MENU = ['open-editors-context-menu', 'navigation'];\n\n    export const TERMINAL_CONTEXT_MENU = ['terminal-context-menu'];\n    export const TERMINAL_CONTRIBUTIONS = [...TERMINAL_CONTEXT_MENU, '5_terminal_contributions'];\n\n    export const TERMINAL_TITLE_CONTRIBUTIONS = [...SHELL_TABBAR_CONTEXT_MENU, 'terminal_title_contributions'];\n}\n\nexport namespace TerminalCommands {\n    const TERMINAL_CATEGORY = 'Terminal';\n    export const NEW = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal'\n    });\n    export const PROFILE_NEW = Command.toLocalizedCommand({\n        id: 'terminal:new:profile',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Integrated Terminal from a Profile'\n    });\n    export const PROFILE_DEFAULT = Command.toLocalizedCommand({\n        id: 'terminal:profile:default',\n        category: TERMINAL_CATEGORY,\n        label: 'Choose the default Terminal Profile'\n    });\n    export const NEW_ACTIVE_WORKSPACE = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new:active:workspace',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal (In Active Workspace)'\n    });\n    export const TERMINAL_CLEAR = Command.toDefaultLocalizedCommand({\n        id: 'terminal:clear',\n        category: TERMINAL_CATEGORY,\n        label: 'Clear'\n    });\n    export const TERMINAL_CONTEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:context',\n        category: TERMINAL_CATEGORY,\n        label: 'Open in Integrated Terminal'\n    });\n    export const SPLIT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:split',\n        category: TERMINAL_CATEGORY,\n        label: 'Split Terminal'\n    });\n    export const TERMINAL_FIND_TEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find',\n        category: TERMINAL_CATEGORY,\n        label: 'Find'\n    });\n    export const TERMINAL_FIND_TEXT_CANCEL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find:cancel',\n        category: TERMINAL_CATEGORY,\n        label: 'Hide Find'\n    });\n\n    export const SCROLL_LINE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Line)'\n    });\n    export const SCROLL_LINE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Line)'\n    });\n    export const SCROLL_TO_TOP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:top',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll to Top'\n    });\n    export const SCROLL_PAGE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Page)'\n    });\n    export const SCROLL_PAGE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Page)'\n    });\n    export const TOGGLE_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.terminal.toggleTerminal',\n        category: TERMINAL_CATEGORY,\n        label: 'Toggle Terminal'\n    });\n    export const KILL_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:kill',\n        category: TERMINAL_CATEGORY,\n        label: 'Kill Terminal'\n    });\n    export const SELECT_ALL: Command = {\n        id: 'terminal:select:all',\n        label: CommonCommands.SELECT_ALL.label,\n        category: TERMINAL_CATEGORY,\n    };\n\n    /**\n     * Command that displays all terminals that are currently opened\n     */\n    export const SHOW_ALL_OPENED_TERMINALS = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.showAllTerminals',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Show All Opened Terminals'\n    });\n}\n\nconst ENVIRONMENT_VARIABLE_COLLECTIONS_KEY = 'terminal.integrated.environmentVariableCollections';\n@injectable()\nexport class TerminalFrontendContribution implements FrontendApplicationContribution, TerminalService, CommandContribution, MenuContribution,\n    KeybindingContribution, TabBarToolbarContribution, ColorContribution {\n\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(TerminalProfileService)\n    protected readonly profileService: TerminalProfileService;\n\n    @inject(UserTerminalProfileStore)\n    protected readonly userProfileStore: TerminalProfileStore;\n\n    @inject(ContributedTerminalProfileStore)\n    protected readonly contributedProfileStore: TerminalProfileStore;\n\n    @inject(TerminalWatcher)\n    protected readonly terminalWatcher: TerminalWatcher;\n\n    @inject(VariableResolverService)\n    protected readonly variableResolver: VariableResolverService;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(TerminalPreferences)\n    protected terminalPreferences: TerminalPreferences;\n\n    protected mergePreferencesPromise: Promise<void> = Promise.resolve();\n\n    protected readonly onDidCreateTerminalEmitter = new Emitter<TerminalWidget>();\n    readonly onDidCreateTerminal: Event<TerminalWidget> = this.onDidCreateTerminalEmitter.event;\n\n    protected readonly onDidChangeCurrentTerminalEmitter = new Emitter<TerminalWidget | undefined>();\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined> = this.onDidChangeCurrentTerminalEmitter.event;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentTerminal());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (widget instanceof TerminalWidget) {\n                this.updateCurrentTerminal();\n                this.onDidCreateTerminalEmitter.fire(widget);\n                this.setLastUsedTerminal(widget);\n            }\n        });\n\n        const terminalFocusKey = this.contextKeyService.createKey<boolean>('terminalFocus', false);\n        const terminalSearchToggle = this.contextKeyService.createKey<boolean>('terminalHideSearch', false);\n        const updateFocusKey = () => {\n            terminalFocusKey.set(this.shell.activeWidget instanceof TerminalWidget);\n            terminalSearchToggle.set(this.terminalHideSearch);\n        };\n        updateFocusKey();\n        this.shell.onDidChangeActiveWidget(updateFocusKey);\n\n        this.terminalWatcher.onStoreTerminalEnvVariablesRequested(data => {\n            this.storageService.setData(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY, data);\n        });\n        this.terminalWatcher.onUpdateTerminalEnvVariablesRequested(() => {\n            this.storageService.getData<string>(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY).then(data => {\n                if (data) {\n                    this.shellTerminalServer.restorePersisted(data);\n                }\n            });\n        });\n    }\n\n    get terminalHideSearch(): boolean {\n        if (!(this.shell.activeWidget instanceof TerminalWidget)) {\n            return false;\n        }\n        const searchWidget = this.shell.activeWidget.getSearchBox();\n        return searchWidget.isVisible;\n    }\n\n    async onStart(app: FrontendApplication): Promise<void> {\n        this.contributeDefaultProfiles();\n\n        this.terminalPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName.startsWith('terminal.integrated.')) {\n                this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n            }\n        });\n        this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n\n        // extension contributions get read after this point: need to set the default profile if necessary\n        this.profileService.onAdded(id => {\n            let defaultProfileId: string | undefined;\n            switch (OS.backend.type()) {\n                case OS.Type.Windows: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                    break;\n                }\n                case OS.Type.Linux: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                    break;\n                }\n                case OS.Type.OSX: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                    break;\n                }\n            }\n            if (defaultProfileId) {\n                this.profileService.setDefaultProfile(defaultProfileId);\n            }\n        });\n    }\n\n    async contributeDefaultProfiles(): Promise<void> {\n        if (OS.backend.isWindows) {\n            this.contributedProfileStore.registerTerminalProfile('cmd', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath([\n                    '${env:windir}\\\\Sysnative\\\\cmd.exe',\n                    '${env:windir}\\\\System32\\\\cmd.exe'\n                ])!\n            }));\n        } else {\n            this.contributedProfileStore.registerTerminalProfile('SHELL', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath('${SHELL}')!,\n                shellArgs: ['-l']\n            }));\n        }\n\n        // contribute default profiles based on legacy preferences\n    }\n\n    protected async mergePreferences(): Promise<void> {\n        let profiles: Profiles;\n        let defaultProfile: string;\n        let legacyShellPath: string | undefined;\n        let legacyShellArgs: string[] | undefined;\n        const removed = new Set(this.userProfileStore.all.map(([id, profile]) => id));\n        switch (OS.backend.type()) {\n            case OS.Type.Windows: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.windows'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.windows'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.windows'];\n                break;\n            }\n            case OS.Type.Linux: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.linux'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.linux'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.linux'];\n                break;\n            }\n            case OS.Type.OSX: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.osx'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.osx'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.osx'];\n                break;\n            }\n        }\n        if (profiles) {\n            for (const id of Object.getOwnPropertyNames(profiles)) {\n                const profile = profiles[id];\n                removed.delete(id);\n                if (profile) {\n                    const shellPath = await this.resolveShellPath(profile.path);\n\n                    if (shellPath) {\n                        const options: TerminalWidgetOptions = {\n                            shellPath: shellPath,\n                            shellArgs: profile.args ? await this.variableResolver.resolve(profile.args) : undefined,\n                            useServerTitle: profile.overrideName ? false : undefined,\n                            env: profile.env ? await this.variableResolver.resolve(profile.env) : undefined,\n                            title: profile.overrideName ? id : undefined\n                        };\n\n                        this.userProfileStore.registerTerminalProfile(id, new ShellTerminalProfile(this, options));\n                    }\n                } else {\n                    this.userProfileStore.registerTerminalProfile(id, NULL_PROFILE);\n                }\n            }\n        }\n\n        if (legacyShellPath) {\n            this.userProfileStore.registerTerminalProfile('Legacy Shell Preferences', new ShellTerminalProfile(this, {\n                shellPath: legacyShellPath!,\n                shellArgs: legacyShellArgs\n            }));\n            // if no other default is set, use the legacy preferences as default if they exist\n            this.profileService.setDefaultProfile('Legacy Shell Preferences');\n        }\n\n        if (defaultProfile && this.profileService.getProfile(defaultProfile)) {\n            this.profileService.setDefaultProfile(defaultProfile);\n        }\n\n        for (const id of removed) {\n            this.userProfileStore.unregisterTerminalProfile(id);\n        }\n    }\n\n    protected async resolveShellPath(path: string | string[] | undefined): Promise<string | undefined> {\n        if (!path) {\n            return undefined;\n        }\n        if (typeof path === 'string') {\n            path = [path];\n        }\n        for (const p of path) {\n            const resolved = await this.variableResolver.resolve(p);\n            if (resolved) {\n                const resolvedURI = URI.fromFilePath(resolved);\n                if (await this.fileService.exists(resolvedURI)) {\n                    return resolved;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    onWillStop(): OnWillStopAction<number> | undefined {\n        const preferenceValue = this.terminalPreferences['terminal.integrated.confirmOnExit'];\n        if (preferenceValue !== 'never') {\n            const allTerminals = this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n            if (allTerminals.length) {\n                return {\n                    prepare: async () => {\n                        if (preferenceValue === 'always') {\n                            return allTerminals.length;\n                        } else {\n                            const activeTerminals = await Promise.all(allTerminals.map(widget => widget.hasChildProcesses()))\n                                .then(hasChildProcesses => hasChildProcesses.filter(hasChild => hasChild));\n                            return activeTerminals.length;\n                        }\n                    },\n                    action: async activeTerminalCount => activeTerminalCount === 0 || this.confirmExitWithActiveTerminals(activeTerminalCount),\n                    reason: 'Active integrated terminal',\n                };\n            }\n        }\n    }\n\n    protected async confirmExitWithActiveTerminals(activeTerminalCount: number): Promise<boolean> {\n        const msg = activeTerminalCount === 1\n            ? nls.localizeByDefault('Do you want to terminate the active terminal session?')\n            : nls.localizeByDefault('Do you want to terminate the {0} active terminal sessions?', activeTerminalCount);\n        const safeToExit = await new ConfirmDialog({\n            title: '',\n            msg,\n            ok: nls.localizeByDefault('Terminate'),\n            cancel: Dialog.CANCEL,\n        }).open();\n        return safeToExit === true;\n    }\n\n    protected _currentTerminal: TerminalWidget | undefined;\n    get currentTerminal(): TerminalWidget | undefined {\n        return this._currentTerminal;\n    }\n    protected setCurrentTerminal(current: TerminalWidget | undefined): void {\n        if (this._currentTerminal !== current) {\n            this._currentTerminal = current;\n            this.onDidChangeCurrentTerminalEmitter.fire(this._currentTerminal);\n        }\n    }\n    protected updateCurrentTerminal(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof TerminalWidget) {\n            this.setCurrentTerminal(widget);\n        } else if (!this._currentTerminal || !this._currentTerminal.isVisible) {\n            this.setCurrentTerminal(undefined);\n        }\n    }\n\n    // IDs of the most recently used terminals\n    protected mostRecentlyUsedTerminalEntries: { id: string, disposables: DisposableCollection }[] = [];\n\n    protected getLastUsedTerminalId(): string | undefined {\n        const mostRecent = this.mostRecentlyUsedTerminalEntries[this.mostRecentlyUsedTerminalEntries.length - 1];\n        if (mostRecent) {\n            return mostRecent.id;\n        }\n    }\n\n    get lastUsedTerminal(): TerminalWidget | undefined {\n        const id = this.getLastUsedTerminalId();\n        if (id) {\n            return this.getById(id);\n        }\n    }\n\n    protected setLastUsedTerminal(lastUsedTerminal: TerminalWidget): void {\n        const lastUsedTerminalId = lastUsedTerminal.id;\n        const entryIndex = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n        let toDispose: DisposableCollection | undefined;\n        if (entryIndex >= 0) {\n            toDispose = this.mostRecentlyUsedTerminalEntries[entryIndex].disposables;\n            this.mostRecentlyUsedTerminalEntries.splice(entryIndex, 1);\n        } else {\n            toDispose = new DisposableCollection();\n            toDispose.push(\n                lastUsedTerminal.onDidChangeVisibility((isVisible: boolean) => {\n                    if (isVisible) {\n                        this.setLastUsedTerminal(lastUsedTerminal);\n                    }\n                })\n            );\n            toDispose.push(\n                lastUsedTerminal.onDidDispose(() => {\n                    const index = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n                    if (index >= 0) {\n                        this.mostRecentlyUsedTerminalEntries[index].disposables.dispose();\n                        this.mostRecentlyUsedTerminalEntries.splice(index, 1);\n                    }\n                })\n            );\n        }\n\n        const newEntry = { id: lastUsedTerminalId, disposables: toDispose };\n        if (lastUsedTerminal.isVisible) {\n            this.mostRecentlyUsedTerminalEntries.push(newEntry);\n        } else {\n            this.mostRecentlyUsedTerminalEntries = [newEntry, ...this.mostRecentlyUsedTerminalEntries];\n        }\n    }\n\n    get all(): TerminalWidget[] {\n        return this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n    }\n\n    getById(id: string): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.id === id);\n    }\n\n    getByTerminalId(terminalId: number): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.terminalId === terminalId);\n    }\n\n    getDefaultShell(): Promise<string> {\n        return this.shellTerminalServer.getDefaultShell();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.NEW, {\n            execute: () => this.openTerminal()\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_NEW, {\n            execute: async () => {\n                const profile = await this.selectTerminalProfile(nls.localize('theia/terminal/selectProfile', 'Select a profile for the new terminal'));\n                if (!profile) {\n                    return;\n                }\n                this.openTerminal(undefined, profile[1]);\n            }\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_DEFAULT, {\n            execute: () => this.chooseDefaultProfile()\n        });\n\n        commands.registerCommand(TerminalCommands.NEW_ACTIVE_WORKSPACE, {\n            execute: () => this.openActiveWorkspaceTerminal()\n        });\n        commands.registerCommand(TerminalCommands.SPLIT, {\n            execute: () => this.splitTerminal(),\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, () => true),\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CLEAR);\n        commands.registerHandler(TerminalCommands.TERMINAL_CLEAR.id, {\n            execute: () => this.currentTerminal?.clearOutput()\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CONTEXT, UriAwareCommandHandler.MonoSelect(this.selectionService, {\n            execute: uri => this.openInTerminal(uri)\n        }));\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return !this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.show();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.hide();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_TO_TOP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollToTop();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TOGGLE_TERMINAL, {\n            execute: () => this.toggleTerminal()\n        });\n        commands.registerCommand(TerminalCommands.KILL_TERMINAL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.close()\n        });\n        commands.registerCommand(TerminalCommands.SELECT_ALL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.selectAll()\n        });\n    }\n\n    protected toggleTerminal(): void {\n        const terminals = this.shell.getWidgets('bottom').filter(w => w instanceof TerminalWidget);\n\n        if (terminals.length === 0) {\n            this.openTerminal();\n            return;\n        }\n\n        if (!this.shell.isExpanded('bottom')) {\n            this.shell.expandPanel('bottom');\n            terminals[0].activate();\n        } else {\n            const visibleTerminal = terminals.find(t => t.isVisible);\n            if (!visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(terminals[0]);\n            } else if (this.shell.activeWidget !== visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(visibleTerminal);\n            } else {\n                this.shell.collapsePanel('bottom');\n            }\n        }\n\n    }\n\n    async openInTerminal(uri: URI): Promise<void> {\n        // Determine folder path of URI\n        let stat: FileStat;\n        try {\n            stat = await this.fileService.resolve(uri);\n        } catch {\n            return;\n        }\n\n        // Use folder if a file was selected\n        const cwd = (stat.isDirectory) ? uri.toString() : uri.parent.toString();\n\n        // Open terminal\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.open(termWidget);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(TerminalMenus.TERMINAL, TerminalWidgetImpl.LABEL);\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.NEW.id,\n            label: nls.localizeByDefault('New Terminal'),\n            order: '0'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_NEW.id,\n            label: nls.localize('theia/terminal/profileNew', 'New Terminal (With Profile)...'),\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_DEFAULT.id,\n            label: nls.localize('theia/terminal/profileDefault', 'Choose Default Profile...'),\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.SPLIT.id,\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NAVIGATOR_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_OPEN_EDITORS_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            label: nls.localizeByDefault('New Terminal')\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.SPLIT.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.COPY.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.PASTE.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: TerminalCommands.SELECT_ALL.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_3'], {\n            commandId: TerminalCommands.TERMINAL_CLEAR.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_4'], {\n            commandId: TerminalCommands.KILL_TERMINAL.id\n        });\n\n        menus.registerSubmenu(TerminalMenus.TERMINAL_CONTRIBUTIONS, '', {\n            role: CompoundMenuNodeRole.Group\n        });\n\n        menus.registerSubmenu(TerminalMenus.TERMINAL_TITLE_CONTRIBUTIONS, '', {\n            role: CompoundMenuNodeRole.Group,\n            when: 'isTerminalTab'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: TerminalCommands.SPLIT.id,\n            command: TerminalCommands.SPLIT.id,\n            icon: codicon('split-horizontal'),\n            tooltip: TerminalCommands.SPLIT.label\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        /* Register passthrough keybindings for combinations recognized by\n           xterm.js and converted to control characters.\n             See: https://github.com/xtermjs/xterm.js/blob/v3/src/Terminal.ts#L1684 */\n\n        /* Register ctrl + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regCtrl = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, ctrl: true }).toString(),\n                when: 'terminalFocus',\n            });\n        };\n\n        /* Register alt + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regAlt = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, alt: true }).toString(),\n                when: 'terminalFocus'\n            });\n        };\n\n        /* ctrl-space (000 - NUL).  */\n        regCtrl(Key.SPACE);\n\n        /* ctrl-A (001/1/0x1) through ctrl-Z (032/26/0x1A).  */\n        for (let i = 0; i < 26; i++) {\n            regCtrl({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* ctrl-[ or ctrl-3 (033/27/0x1B - ESC).  */\n        regCtrl(Key.BRACKET_LEFT);\n        regCtrl(Key.DIGIT3);\n\n        /* ctrl-\\ or ctrl-4 (034/28/0x1C - FS).  */\n        regCtrl(Key.BACKSLASH);\n        regCtrl(Key.DIGIT4);\n\n        /* ctrl-] or ctrl-5 (035/29/0x1D - GS).  */\n        regCtrl(Key.BRACKET_RIGHT);\n        regCtrl(Key.DIGIT5);\n\n        /* ctrl-6 (036/30/0x1E - RS).  */\n        regCtrl(Key.DIGIT6);\n\n        /* ctrl-7 (037/31/0x1F - US).  */\n        regCtrl(Key.DIGIT7);\n\n        /* ctrl-8 (177/127/0x7F - DEL).  */\n        regCtrl(Key.DIGIT8);\n\n        /* alt-A (0x1B 0x62) through alt-Z (0x1B 0x7A).  */\n        for (let i = 0; i < 26; i++) {\n            regAlt({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* alt-` (0x1B 0x60).  */\n        regAlt(Key.BACKQUOTE);\n\n        /* alt-0 (0x1B 0x30) through alt-9 (0x1B 0x39).  */\n        for (let i = 0; i < 10; i++) {\n            regAlt({\n                keyCode: Key.DIGIT0.keyCode + i,\n                code: 'Digit' + String.fromCharCode('0'.charCodeAt(0) + i)\n            });\n        }\n        if (isOSX) {\n            // selectAll on OSX\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: 'ctrlcmd+a',\n                when: 'terminalFocus'\n            });\n        }\n\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW.id,\n            keybinding: 'ctrl+shift+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            keybinding: 'ctrl+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_CLEAR.id,\n            keybinding: 'ctrlcmd+k',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT.id,\n            keybinding: 'ctrlcmd+f',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id,\n            keybinding: 'esc',\n            when: 'terminalHideSearch'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_UP.id,\n            keybinding: 'ctrl+shift+up',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_DOWN.id,\n            keybinding: 'ctrl+shift+down',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_TO_TOP.id,\n            keybinding: 'shift-home',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_UP.id,\n            keybinding: 'shift-pageUp',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_DOWN.id,\n            keybinding: 'shift-pageDown',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TOGGLE_TERMINAL.id,\n            keybinding: 'ctrl+`',\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SELECT_ALL.id,\n            keybinding: 'ctrlcmd+a',\n            when: 'terminalFocus'\n        });\n    }\n\n    async newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        const widget = <TerminalWidget>await this.widgetManager.getOrCreateWidget(TERMINAL_WIDGET_FACTORY_ID, <TerminalWidgetFactoryOptions>{\n            created: new Date().toISOString(),\n            ...options\n        });\n        return widget;\n    }\n\n    // TODO: reuse WidgetOpenHandler.open\n    open(widget: TerminalWidget, options?: WidgetOpenerOptions): void {\n        const area = widget.location === TerminalLocation.Editor ? 'main' : 'bottom';\n        const widgetOptions: ApplicationShell.WidgetOptions = { area: area, ...options?.widgetOptions };\n        let preserveFocus = false;\n\n        if (typeof widget.location === 'object') {\n            if ('parentTerminal' in widget.location) {\n                widgetOptions.ref = this.getById(widget.location.parentTerminal);\n                widgetOptions.mode = 'split-right';\n            } else if ('viewColumn' in widget.location) {\n                preserveFocus = widget.location.preserveFocus ?? false;\n                switch (widget.location.viewColumn) {\n                    case ViewColumn.Active:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'tab-after';\n                        break;\n                    case ViewColumn.Beside:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'split-right';\n                        break;\n                    default:\n                        widgetOptions.area = 'main';\n                        const mainAreaTerminals = this.shell.getWidgets('main').filter(w => w instanceof TerminalWidget && w.isVisible);\n                        const column = Math.min(widget.location.viewColumn, mainAreaTerminals.length);\n                        widgetOptions.mode = widget.location.viewColumn <= mainAreaTerminals.length ? 'split-left' : 'split-right';\n                        widgetOptions.ref = mainAreaTerminals[column - 1];\n                }\n            }\n        }\n\n        const op: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...options,\n            widgetOptions: widgetOptions\n        };\n        if (!widget.isAttached) {\n            this.shell.addWidget(widget, op.widgetOptions);\n        }\n        if (op.mode === 'activate' && !preserveFocus) {\n            this.shell.activateWidget(widget.id);\n        } else if (op.mode === 'reveal' || preserveFocus) {\n            this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected async selectTerminalCwd(): Promise<string | undefined> {\n        return new Promise(async resolve => {\n            const roots = this.workspaceService.tryGetRoots();\n            if (roots.length === 0) {\n                resolve(undefined);\n            } else if (roots.length === 1) {\n                resolve(roots[0].resource.toString());\n            } else {\n                const items = roots.map(({ resource }) => ({\n                    label: this.labelProvider.getName(resource),\n                    description: this.labelProvider.getLongName(resource),\n                    resource\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder: nls.localizeByDefault('Select current working directory for new terminal')\n                });\n                resolve(selectedItem?.resource?.toString());\n            }\n        });\n    }\n\n    protected async selectTerminalProfile(placeholder: string): Promise<[string, TerminalProfile] | undefined> {\n        return new Promise(async resolve => {\n            const profiles = this.profileService.all;\n            if (profiles.length === 0) {\n                resolve(undefined);\n            } else {\n                const items = profiles.map(([id, profile]) => ({\n                    label: id,\n                    profile\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder\n                });\n                resolve(selectedItem ? [selectedItem.label, selectedItem.profile] : undefined);\n            }\n        });\n    }\n\n    protected async splitTerminal(referenceTerminal?: TerminalWidget): Promise<void> {\n        if (referenceTerminal || this.currentTerminal) {\n            const ref = referenceTerminal ?? this.currentTerminal;\n            await this.openTerminal({ ref, mode: 'split-right' });\n        }\n    }\n\n    protected async openTerminal(options?: ApplicationShell.WidgetOptions, terminalProfile?: TerminalProfile): Promise<void> {\n        let profile = terminalProfile;\n        if (!terminalProfile) {\n            profile = this.profileService.defaultProfile;\n            if (!profile) {\n                throw new Error('There are no profiles registered');\n            }\n        }\n\n        if (profile instanceof ShellTerminalProfile) {\n            if (this.workspaceService.workspace) {\n                const cwd = await this.selectTerminalCwd();\n                if (!cwd) {\n                    return;\n                }\n                profile = profile.modify({ cwd });\n            }\n        }\n\n        const termWidget = await profile?.start();\n        if (!!termWidget) {\n            this.open(termWidget, { widgetOptions: options });\n        }\n    }\n\n    protected async chooseDefaultProfile(): Promise<void> {\n        const result = await this.selectTerminalProfile(nls.localizeByDefault('Select your default terminal profile'));\n        if (!result) {\n            return;\n        }\n\n        this.preferenceService.set(`terminal.integrated.defaultProfile.${OS.backend.type().toLowerCase()}`, result[0], PreferenceScope.User);\n    }\n\n    protected async openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const termWidget = await this.newTerminal({});\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    protected withWidget<T>(widget: Widget | undefined, fn: (widget: TerminalWidget) => T): T | false {\n        if (widget instanceof TerminalWidget) {\n            return fn(widget);\n        }\n        return false;\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#integrated-terminal-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'terminal.background',\n            defaults: {\n                dark: 'panel.background',\n                light: 'panel.background',\n                hcDark: 'panel.background',\n                hcLight: 'panel.background'\n            },\n            description: 'The background color of the terminal, this allows coloring the terminal differently to the panel.'\n        });\n        colors.register({\n            id: 'terminal.foreground',\n            defaults: {\n                light: '#333333',\n                dark: '#CCCCCC',\n                hcDark: '#FFFFFF',\n                hcLight: '#292929'\n            },\n            description: 'The foreground color of the terminal.'\n        });\n        colors.register({\n            id: 'terminalCursor.foreground',\n            description: 'The foreground color of the terminal cursor.'\n        });\n        colors.register({\n            id: 'terminalCursor.background',\n            description: 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'\n        });\n        colors.register({\n            id: 'terminal.selectionBackground',\n            defaults: {\n                light: 'editor.selectionBackground',\n                dark: 'editor.selectionBackground',\n                hcDark: 'editor.selectionBackground',\n                hcLight: 'editor.selectionBackground'\n            },\n            description: 'The selection background color of the terminal.'\n        });\n        colors.register({\n            id: 'terminal.inactiveSelectionBackground',\n            defaults: {\n                light: Color.transparent('terminal.selectionBackground', 0.5),\n                dark: Color.transparent('terminal.selectionBackground', 0.5),\n                hcDark: Color.transparent('terminal.selectionBackground', 0.7),\n                hcLight: Color.transparent('terminal.selectionBackground', 0.5),\n            },\n            description: 'The selection background color of the terminal when it does not have focus.'\n        });\n        colors.register({\n            id: 'terminal.selectionForeground',\n            defaults: {\n                light: undefined,\n                dark: undefined,\n                hcDark: '#000000',\n                hcLight: '#ffffff'\n            },\n            // eslint-disable-next-line max-len\n            description: 'The selection foreground color of the terminal. When this is null the selection foreground will be retained and have the minimum contrast ratio feature applied.'\n        });\n        colors.register({\n            id: 'terminal.border',\n            defaults: {\n                light: 'panel.border',\n                dark: 'panel.border',\n                hcDark: 'panel.border',\n                hcLight: 'panel.border'\n            },\n            description: 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'\n        });\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const entry = terminalAnsiColorMap[id];\n            const colorName = id.substring(13);\n            colors.register({\n                id,\n                defaults: entry.defaults,\n                description: `'${colorName}'  ANSI color in the terminal.`\n            });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TerminalWidget } from './base/terminal-widget';\nimport { ShellTerminalProfile } from './shell-terminal-profile';\n\nexport const TerminalProfileService = Symbol('TerminalProfileService');\nexport const ContributedTerminalProfileStore = Symbol('ContributedTerminalProfileStore');\nexport const UserTerminalProfileStore = Symbol('UserTerminalProfileStore');\n\nexport interface TerminalProfile {\n    start(): Promise<TerminalWidget>;\n}\n\nexport const NULL_PROFILE: TerminalProfile = {\n    start: async () => { throw new Error('you cannot start a null profile'); }\n};\n\nexport interface TerminalProfileService {\n    onAdded: Event<string>;\n    onRemoved: Event<string>;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n    setDefaultProfile(id: string): void;\n    readonly onDidChangeDefaultShell: Event<string>;\n    readonly defaultProfile: TerminalProfile | undefined;\n}\n\nexport interface TerminalProfileStore {\n    onAdded: Event<[string, TerminalProfile]>;\n    onRemoved: Event<string>;\n    registerTerminalProfile(id: string, profile: TerminalProfile): void;\n    unregisterTerminalProfile(id: string): void;\n    hasProfile(id: string): boolean;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n}\n\n@injectable()\nexport class DefaultProfileStore implements TerminalProfileStore {\n    protected readonly onAddedEmitter: Emitter<[string, TerminalProfile]> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n    protected readonly profiles: Map<string, TerminalProfile> = new Map();\n\n    onAdded: Event<[string, TerminalProfile]> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n\n    registerTerminalProfile(id: string, profile: TerminalProfile): void {\n        this.profiles.set(id, profile);\n        this.onAddedEmitter.fire([id, profile]);\n    }\n    unregisterTerminalProfile(id: string): void {\n        this.profiles.delete(id);\n        this.onRemovedEmitter.fire(id);\n    }\n\n    hasProfile(id: string): boolean {\n        return this.profiles.has(id);\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        return this.profiles.get(id);\n    }\n    get all(): [string, TerminalProfile][] {\n        return [...this.profiles.entries()];\n    }\n}\n\n@injectable()\nexport class DefaultTerminalProfileService implements TerminalProfileService {\n    protected defaultProfileIndex = 0;\n    protected order: string[] = [];\n    protected readonly stores: TerminalProfileStore[];\n\n    protected readonly onAddedEmitter: Emitter<string> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n    protected readonly onDidChangeDefaultShellEmitter: Emitter<string> = new Emitter();\n\n    onAdded: Event<string> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n    onDidChangeDefaultShell: Event<string> = this.onDidChangeDefaultShellEmitter.event;\n\n    constructor(...stores: TerminalProfileStore[]) {\n        this.stores = stores;\n        for (const store of this.stores) {\n            store.onAdded(e => {\n                if (e[1] === NULL_PROFILE) {\n                    this.handleRemoved(e[0]);\n                } else {\n                    this.handleAdded(e[0]);\n                }\n            });\n            store.onRemoved(id => {\n                if (!this.getProfile(id)) {\n                    this.handleRemoved(id);\n                } else {\n                    // we may have removed a null profile\n                    this.handleAdded(id);\n                }\n            });\n        }\n    }\n\n    handleRemoved(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index >= 0 && !this.getProfile(id)) {\n            // the profile was removed, but it's still in the `order` array\n            this.order.splice(index, 1);\n            this.defaultProfileIndex = Math.max(0, Math.min(this.order.length - 1, index));\n            this.onRemovedEmitter.fire(id);\n        }\n    }\n\n    handleAdded(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index < 0) {\n            this.order.push(id);\n            this.onAddedEmitter.fire(id);\n        }\n    }\n\n    get defaultProfile(): TerminalProfile | undefined {\n        const id = this.order[this.defaultProfileIndex];\n        if (id) {\n            return this.getProfile(id);\n        }\n        return undefined;\n    }\n\n    setDefaultProfile(id: string): void {\n        const profile = this.getProfile(id);\n        if (!profile) {\n            throw new Error(`Cannot set default to unknown profile '${id}' `);\n        }\n        this.defaultProfileIndex = this.order.indexOf(id);\n\n        if (profile instanceof ShellTerminalProfile && profile.shellPath) {\n            this.onDidChangeDefaultShellEmitter.fire(profile.shellPath);\n        } else {\n            this.onDidChangeDefaultShellEmitter.fire('');\n        }\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        for (const store of this.stores) {\n            if (store.hasProfile(id)) {\n                const found = store.getProfile(id);\n                return found === NULL_PROFILE ? undefined : found;\n            }\n        }\n        return undefined;\n    }\n\n    getId(profile: TerminalProfile): string | undefined {\n        for (const [id, p] of this.all) {\n            if (p === profile) {\n                return id;\n            }\n        }\n    }\n\n    get all(): [string, TerminalProfile][] {\n        return this.order.filter(id => !!this.getProfile(id)).map(id => [id, this.getProfile(id)!]);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection, Channel, OS } from '@theia/core';\nimport {\n    Widget, Message, StatefulWidget, isFirefox, MessageLoop, KeyCode, codicon, ExtractableWidget, ContextMenuRenderer\n} from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo, TerminalExitReason } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport {\n    TerminalWidgetOptions, TerminalWidget, TerminalDimensions, TerminalExitStatus, TerminalLocationOptions,\n    TerminalLocation,\n    TerminalBuffer\n} from './base/terminal-widget';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences } from './terminal-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\nimport { Key } from '@theia/core/lib/browser/keys';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { TerminalMenus } from './terminal-frontend-contribution';\nimport debounce = require('p-debounce');\nimport { MarkdownString, MarkdownStringImpl } from '@theia/core/lib/common/markdown-rendering/markdown-string';\nimport { EnhancedPreviewWidget } from '@theia/core/lib/browser/widgets/enhanced-preview-widget';\nimport { MarkdownRenderer, MarkdownRendererFactory } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { RemoteConnectionProvider, ServiceConnectionProvider } from '@theia/core/lib/browser/messaging/service-connection-provider';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n\nclass TerminalBufferImpl implements TerminalBuffer {\n    constructor(private readonly term: Terminal) {\n    }\n\n    get length(): number {\n        return this.term.buffer.active.length;\n    };\n    getLines(start: number, length: number): string[] {\n        const result: string[] = [];\n        for (let i = 0; i < length && this.length - 1 - i >= 0; i++) {\n            result.push(this.term.buffer.active.getLine(this.length - 1 - i)!.translateToString());\n        }\n        return result;\n    }\n\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget, ExtractableWidget, EnhancedPreviewWidget {\n    readonly isExtractable: boolean = true;\n    secondaryWindow: Window | undefined;\n    location: TerminalLocationOptions;\n\n    static LABEL = nls.localizeByDefault('Terminal');\n\n    exitStatus: TerminalExitStatus | undefined;\n\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<Channel> | undefined;\n    protected linkHover: HTMLDivElement;\n    protected linkHoverButton: HTMLAnchorElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n    protected lastMousePosition: { x: number, y: number } | undefined;\n    protected isAttachedCloseListener: boolean = false;\n    protected shown = false;\n    protected enhancedPreviewNode: Node | undefined;\n    override lastCwd = new URI();\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(RemoteConnectionProvider) protected readonly connectionProvider: ServiceConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') override readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(MarkdownRendererFactory) protected readonly markdownRendererFactory: MarkdownRendererFactory;\n\n    protected _markdownRenderer: MarkdownRenderer | undefined;\n    protected get markdownRenderer(): MarkdownRenderer {\n        this._markdownRenderer ||= this.markdownRendererFactory();\n        return this._markdownRenderer;\n    }\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly onSizeChangedEmitter = new Emitter<{ cols: number; rows: number; }>();\n    readonly onSizeChanged: Event<{ cols: number; rows: number; }> = this.onSizeChangedEmitter.event;\n\n    protected readonly onDataEmitter = new Emitter<string>();\n    readonly onData: Event<string> = this.onDataEmitter.event;\n\n    protected readonly onOutputEmitter = new Emitter<string>();\n    readonly onOutput: Event<string> = this.onOutputEmitter.event;\n\n    protected readonly onKeyEmitter = new Emitter<{ key: string, domEvent: KeyboardEvent }>();\n    readonly onKey: Event<{ key: string, domEvent: KeyboardEvent }> = this.onKeyEmitter.event;\n\n    protected readonly onMouseEnterLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseEnterLinkHover: Event<MouseEvent> = this.onMouseEnterLinkHoverEmitter.event;\n\n    protected readonly onMouseLeaveLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseLeaveLinkHover: Event<MouseEvent> = this.onMouseLeaveLinkHoverEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    private _buffer: TerminalBuffer;\n    override get buffer(): TerminalBuffer {\n        return this._buffer;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.setTitle(this.options.title || TerminalWidgetImpl.LABEL);\n\n        if (this.options.iconClass) {\n            this.title.iconClass = this.options.iconClass;\n        } else {\n            this.title.iconClass = codicon('terminal');\n        }\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.location = this.options.location || TerminalLocation.Panel;\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.preferences['terminal.integrated.cursorStyle'] === 'line' ? 'bar' : this.preferences['terminal.integrated.cursorStyle'],\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            theme: this.themeService.theme\n        });\n        this._buffer = new TerminalBufferImpl(this.term);\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.initializeLinkHover();\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            this.updateConfig();\n            this.needsResize = true;\n            this.update();\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.options.theme = this.themeService.theme));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error, attached }) => {\n            if (terminalId === this.terminalId) {\n                this.exitStatus = { code: undefined, reason: TerminalExitReason.Process };\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n                if (!attached) {\n                    this.dispose();\n                }\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId, code, reason, attached }) => {\n            if (terminalId === this.terminalId) {\n                if (reason) {\n                    this.exitStatus = { code, reason };\n                } else {\n                    this.exitStatus = { code, reason: TerminalExitReason.Process };\n                }\n                if (!attached) {\n                    this.dispose();\n                }\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n        this.toDispose.push(this.onSizeChangedEmitter);\n        this.toDispose.push(this.onDataEmitter);\n        this.toDispose.push(this.onKeyEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        const mouseListener = (event: MouseEvent) => {\n            this.lastMousePosition = { x: event.x, y: event.y };\n        };\n        this.node.addEventListener('mousemove', mouseListener);\n        this.onDispose(() => {\n            this.node.removeEventListener('mousemove', mouseListener);\n        });\n\n        const contextMenuListener = (event: MouseEvent) => {\n            event.preventDefault();\n            event.stopPropagation();\n            this.contextMenuRenderer.render({ menuPath: TerminalMenus.TERMINAL_CONTEXT_MENU, anchor: event });\n        };\n        this.node.addEventListener('contextmenu', contextMenuListener);\n        this.onDispose(() => this.node.removeEventListener('contextmenu', contextMenuListener));\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        this.toDispose.push(this.term.onResize(data => {\n            this.onSizeChangedEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onData(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onBinary(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onKey(data => {\n            this.onKeyEmitter.fire(data);\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    updateConfig(): void {\n        this.setCursorBlink(this.preferences.get('terminal.integrated.cursorBlinking'));\n        this.setCursorStyle(this.preferences.get('terminal.integrated.cursorStyle'));\n        this.setCursorWidth(this.preferences.get('terminal.integrated.cursorWidth'));\n        this.term.options.fontFamily = this.preferences.get('terminal.integrated.fontFamily');\n        this.term.options.fontSize = this.preferences.get('terminal.integrated.fontSize');\n        this.term.options.fontWeight = this.preferences.get('terminal.integrated.fontWeight');\n        this.term.options.fontWeightBold = this.preferences.get('terminal.integrated.fontWeightBold');\n        this.term.options.drawBoldTextInBrightColors = this.preferences.get('terminal.integrated.drawBoldTextInBrightColors');\n        this.term.options.letterSpacing = this.preferences.get('terminal.integrated.letterSpacing');\n        this.term.options.lineHeight = this.preferences.get('terminal.integrated.lineHeight');\n        this.term.options.scrollback = this.preferences.get('terminal.integrated.scrollback');\n        this.term.options.fastScrollSensitivity = this.preferences.get('terminal.integrated.fastScrollSensitivity');\n    }\n\n    private setCursorBlink(blink: boolean): void {\n        if (this.term.options.cursorBlink !== blink) {\n            this.term.options.cursorBlink = blink;\n            this.term.refresh(0, this.term.rows - 1);\n        }\n    }\n\n    private setCursorStyle(style: 'block' | 'underline' | 'bar' | 'line'): void {\n        if (this.term.options.cursorStyle !== style) {\n            this.term.options.cursorStyle = (style === 'line') ? 'bar' : style;\n        }\n    }\n\n    private setCursorWidth(width: number): void {\n        if (this.term.options.cursorWidth !== width) {\n            this.term.options.cursorWidth = width;\n        }\n    }\n\n    protected initializeLinkHover(): void {\n        this.linkHover = document.createElement('div');\n        this.linkHover.style.position = 'fixed';\n        this.linkHover.style.color = 'var(--theia-editorHoverWidget-foreground)';\n        this.linkHover.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.linkHover.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.linkHover.style.borderWidth = '0.5px';\n        this.linkHover.style.borderStyle = 'solid';\n        this.linkHover.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.linkHover.style.zIndex = '10';\n        // Initially invisible:\n        this.linkHover.style.display = 'none';\n\n        this.linkHoverButton = document.createElement('a');\n        this.linkHoverButton.textContent = this.linkHoverMessage();\n        this.linkHoverButton.style.cursor = 'pointer';\n        this.linkHover.appendChild(this.linkHoverButton);\n\n        const cmdCtrl = isOSX ? 'cmd' : 'ctrl';\n        const cmdHint = document.createTextNode(` (${nls.localizeByDefault(`${cmdCtrl} + click`)})`);\n        this.linkHover.appendChild(cmdHint);\n\n        const onMouseEnter = (mouseEvent: MouseEvent) => this.onMouseEnterLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseenter', onMouseEnter);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseenter', onMouseEnter)));\n\n        const onMouseLeave = (mouseEvent: MouseEvent) => this.onMouseLeaveLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseleave', onMouseLeave);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseleave', onMouseLeave)));\n\n        this.node.appendChild(this.linkHover);\n    }\n\n    showLinkHover(invokeAction: (event: MouseEvent) => void, x: number, y: number, message?: string): void {\n        const mouseY = this.lastMousePosition?.y ?? y;\n        const mouseX = this.lastMousePosition?.x ?? x;\n        this.linkHoverButton.textContent = this.linkHoverMessage(message);\n        this.linkHoverButton.onclick = (mouseEvent: MouseEvent) => invokeAction(mouseEvent);\n        this.linkHover.style.display = 'inline';\n        this.linkHover.style.top = `${mouseY - 30}px`;\n        this.linkHover.style.left = `${mouseX - 60}px`;\n    }\n\n    protected linkHoverMessage(message?: string): string {\n        return message ?? nls.localizeByDefault('Follow link');\n    }\n\n    hideLinkHover(): void {\n        this.linkHover.style.display = 'none';\n        // eslint-disable-next-line no-null/no-null\n        this.linkHoverButton.onclick = null;\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    protected override onCloseRequest(msg: Message): void {\n        this.exitStatus = { code: undefined, reason: TerminalExitReason.User };\n        super.onCloseRequest(msg);\n    }\n\n    get dimensions(): TerminalDimensions {\n        return {\n            cols: this.term.cols,\n            rows: this.term.rows,\n        };\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => {\n                    this.lastCwd = new URI(cwdUrl);\n                    return this.lastCwd;\n                }).catch(() => this.lastCwd);\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get envVarCollectionDescriptionsByExtension(): Promise<Map<string, (string | MarkdownString | undefined)[]>> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getEnvVarCollectionDescriptionsByExtension(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    get hiddenFromUser(): boolean {\n        if (this.shown) {\n            return false;\n        }\n        return this.options.hideFromUser ?? false;\n    }\n\n    get transient(): boolean {\n        // The terminal is transient if session persistence is disabled or it's explicitly marked as transient\n        return !this.preferences['terminal.integrated.enablePersistentSessions'] || !!this.options.isTransient;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    selectAll(): void {\n        this.term.selectAll();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        if (this.transient || this.options.isPseudoTerminal) {\n            return {};\n        }\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        // transient terminals and pseudo terminals are not restored\n        if (this.transient || this.options.isPseudoTerminal) {\n            this.dispose();\n            return;\n        }\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            await this.shellTerminalServer.onAttachAttempted(this._terminalId);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            // reset exit status if a new terminal process is attached\n            this.exitStatus = undefined;\n            return terminalId;\n        }\n        this.logger.warn(`Failed attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd?.toString();\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root?.resource?.toString();\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shell: this.options.shellPath || this.shellPreferences.shell[OS.backend.type()],\n            args: this.options.shellArgs || this.shellPreferences.shellArgs[OS.backend.type()],\n            env: this.options.env,\n            strictEnv: this.options.strictEnv,\n            isPseudo: this.options.isPseudoTerminal,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    override processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected override onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n        this.shown = true;\n    }\n    protected override onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected override onBeforeDetach(msg: Message): void {\n        Widget.detach(this.searchBox);\n        super.onBeforeDetach(msg);\n    }\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<Channel>();\n        this.connectionProvider.listen(\n            `${terminalsPath}/${this.terminalId}`,\n            (path, connection) => {\n                connection.onMessage(e => {\n                    this.write(e().readString());\n                });\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data) && !this.disableEnterWhenAttachCloseListener()) {\n                        connection.getWriteBuffer().writeString(data).commit();\n                    }\n                };\n\n                const disposable = new DisposableCollection();\n                disposable.push(this.term.onData(sendData));\n                disposable.push(this.term.onBinary(sendData));\n\n                connection.onClose(() => disposable.dispose());\n\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }, false);\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n\n        interface ViewportType {\n            register(d: Disposable): void;\n            _refreshAnimationFrame: number | null;\n            _coreBrowserService: {\n                window: Window;\n            }\n        }\n\n        // Workaround for https://github.com/xtermjs/xterm.js/issues/4775. Can be removed for releases > 5.3.0\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const viewPort: ViewportType = (this.term as any)._core.viewport;\n        viewPort.register(Disposable.create(() => {\n            if (typeof viewPort._refreshAnimationFrame === 'number') {\n                viewPort._coreBrowserService.window.cancelAnimationFrame(viewPort._refreshAnimationFrame);\n            }\n        }));\n\n        if (isFirefox) {\n            // monkey patching intersection observer handling for secondary window support\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const renderService: any = (this.term as any)._core._renderService;\n\n            const originalFunc: (entry: IntersectionObserverEntry) => void = renderService._handleIntersectionChange.bind(renderService);\n            const replacement = function (entry: IntersectionObserverEntry): void {\n                if (entry.target.ownerDocument !== document) {\n                    // in Firefox, the intersection observer always reports the widget as non-intersecting if the dom element\n                    // is in a different document from when the IntersectionObserver started observing. Since we know\n                    // that the widget is always \"visible\" when in a secondary window, so we refresh the rows ourselves\n                    const patchedEvent: IntersectionObserverEntry = {\n                        ...entry,\n                        isIntersecting: true,\n                    };\n                    originalFunc(patchedEvent);\n                } else {\n                    originalFunc(entry);\n                }\n            };\n\n            renderService._handleIntersectionChange = replacement.bind(renderService);\n        }\n\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n    }\n\n    write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n            this.onOutputEmitter.fire(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        this.term.resize(cols, rows);\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.getWriteBuffer().writeString(text).commit()\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + OS.backend.EOL);\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n        this.onOutputEmitter.fire(text + '\\n');\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    override dispose(): void {\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number' && !this.exitStatus) {\n            // Close the backend terminal only when explicitly closing the terminal\n            // a refresh for example won't close it.\n            this.shellTerminalServer.close(this.terminalId);\n            // Exit status is set when terminal is closed by user or by process, so most likely an extension closed it.\n            this.exitStatus = { code: undefined, reason: TerminalExitReason.Extension };\n        }\n        if (this.exitStatus) {\n            this.onTermDidClose.fire(this);\n        }\n        if (this.enhancedPreviewNode) {\n            // don't use preview node anymore. rendered markdown will be disposed on super call\n            this.enhancedPreviewNode = undefined;\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal = debounce(() => this.doResizeTerminal(), 50);\n\n    protected doResizeTerminal(): void {\n        if (this.isDisposed) {\n            return;\n        }\n        const geo = this.fitAddon.proposeDimensions();\n        if (geo) {\n            const cols = geo.cols;\n            const rows = geo.rows - 1; // subtract one row for margin\n            this.term.resize(cols, rows);\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            || this.exitStatus\n            || !this.terminalService.getById(this.id)\n        ) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'] ?? undefined,\n                Linux: this.preferences['terminal.integrated.shell.linux'] ?? undefined,\n                OSX: this.preferences['terminal.integrated.shell.osx'] ?? undefined,\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n\n    waitOnExit(waitOnExit?: boolean | string): void {\n        if (waitOnExit) {\n            if (typeof waitOnExit === 'string') {\n                let message = waitOnExit;\n                // Bold the message and add an extra new line to make it stand out from the rest of the output\n                message = `\\r\\n\\x1b[1m${message}\\x1b[0m`;\n                this.write(message);\n            }\n            this.attachPressEnterKeyToCloseListener(this.term);\n            return;\n        }\n        this.dispose();\n    }\n\n    private attachPressEnterKeyToCloseListener(term: Terminal): void {\n        if (term.textarea) {\n            this.isAttachedCloseListener = true;\n            this.addKeyListener(term.textarea, Key.ENTER, (event: KeyboardEvent) => {\n                this.dispose();\n                this.isAttachedCloseListener = false;\n            });\n        }\n    }\n\n    private disableEnterWhenAttachCloseListener(): boolean {\n        return this.isAttachedCloseListener;\n    }\n\n    getEnhancedPreviewNode(): Node | undefined {\n        if (this.enhancedPreviewNode) {\n            return this.enhancedPreviewNode;\n        }\n\n        this.enhancedPreviewNode = document.createElement('div');\n\n        Promise.all([this.envVarCollectionDescriptionsByExtension, this.processId, this.processInfo])\n            .then((values: [Map<string, (string | MarkdownString | undefined)[]>, number, TerminalProcessInfo]) => {\n                const extensions = values[0];\n                const processId = values[1];\n                const processInfo = values[2];\n\n                const markdown = new MarkdownStringImpl();\n                markdown.appendMarkdown('Process ID: ' + processId + '\\\\\\n');\n                markdown.appendMarkdown('Command line: ' +\n                    processInfo.executable +\n                    ' ' +\n                    processInfo.arguments.join(' ') +\n                    '\\n\\n---\\n\\n');\n                markdown.appendMarkdown('The following extensions have contributed to this terminal\\'s environment:\\n');\n                extensions.forEach((arr, key) => {\n                    arr.forEach(value => {\n                        if (value === undefined) {\n                            markdown.appendMarkdown('* ' + key + '\\n');\n                        } else if (typeof value === 'string') {\n                            markdown.appendMarkdown('* ' + key + ': ' + value + '\\n');\n                        } else {\n                            markdown.appendMarkdown('* ' + key + ': ' + value.value + '\\n');\n                        }\n                    });\n                });\n\n                const enhancedPreviewNode = this.enhancedPreviewNode;\n                if (!this.isDisposed && enhancedPreviewNode) {\n                    const result = this.markdownRenderer.render(markdown);\n                    this.toDispose.push(result);\n                    enhancedPreviewNode.appendChild(result.element);\n                }\n            });\n\n        return this.enhancedPreviewNode;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends RpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    onAttachAttempted(id: number): Promise<void>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Either code and reason will be set or signal.\n    code?: number;\n    reason?: TerminalExitReason;\n    signal?: string;\n\n    attached?: boolean;\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error;\n    attached?: boolean;\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n    updateTerminalEnvVariables(): void;\n    storeTerminalEnvVariables(data: string): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    updateTerminalEnvVariables(): void {\n        this.clients.forEach(c => {\n            try {\n                c.updateTerminalEnvVariables();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    storeTerminalEnvVariables(data: string): void {\n        this.clients.forEach(c => {\n            try {\n                c.storeTerminalEnvVariables(data);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n    getEnvVarCollectionDescriptionsByExtension(id: number): Promise<Map<string, (string | MarkdownString | undefined)[]>>;\n    getEnvVarCollections(): Promise<[string, string, boolean, SerializableEnvironmentVariableCollection][]>;\n\n    restorePersisted(jsonValue: string): void;\n    /**\n     * Sets an extension's environment variable collection.\n     */\n    setCollection(extensionIdentifier: string, rootUri: string, persistent: boolean,\n        collection: SerializableEnvironmentVariableCollection, description: string | MarkdownString | undefined): void;\n    /**\n     * Deletes an extension's environment variable collection.\n     */\n    deleteCollection(extensionIdentifier: string): void;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shell?: string,\n    args?: string[] | string,\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null },\n    strictEnv?: boolean,\n    isPseudo?: boolean,\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = RpcProxy<IShellTerminalServer>;\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariable.ts\n\nexport const NO_ROOT_URI = '<none>';\n\nexport interface EnvironmentVariableCollection {\n    readonly variableMutators: ReadonlyMap<string, EnvironmentVariableMutator>;\n    readonly description: string | MarkdownString | undefined;\n}\n\nexport interface EnvironmentVariableCollectionWithPersistence extends EnvironmentVariableCollection {\n    readonly persistent: boolean;\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\nexport interface EnvironmentVariableMutatorOptions {\n    applyAtProcessCreation?: boolean;\n}\n\nexport interface EnvironmentVariableMutator {\n    readonly value: string;\n    readonly type: EnvironmentVariableMutatorType;\n    readonly options: EnvironmentVariableMutatorOptions;\n}\n\nexport interface SerializableEnvironmentVariableCollection {\n    readonly description: string | MarkdownString | undefined;\n    readonly mutators: [string, EnvironmentVariableMutator][]\n};\n\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    IBaseTerminalClient,\n    IBaseTerminalExitEvent,\n    IBaseTerminalErrorEvent\n} from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        const storeTerminalEnvVariablesEmitter = this.onStoreTerminalEnvVariablesRequestedEmitter;\n        const updateTerminalEnvVariablesEmitter = this.onUpdateTerminalEnvVariablesRequestedEmitter;\n        return {\n            storeTerminalEnvVariables(data: string): void {\n                storeTerminalEnvVariablesEmitter.fire(data);\n            },\n            updateTerminalEnvVariables(): void {\n                updateTerminalEnvVariablesEmitter.fire(undefined);\n            },\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n    private onStoreTerminalEnvVariablesRequestedEmitter = new Emitter<string>();\n    private onUpdateTerminalEnvVariablesRequestedEmitter = new Emitter<undefined>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n\n    get onStoreTerminalEnvVariablesRequested(): Event<string> {\n        return this.onStoreTerminalEnvVariablesRequestedEmitter.event;\n    }\n\n    get onUpdateTerminalEnvVariablesRequested(): Event<undefined> {\n        return this.onUpdateTerminalEnvVariablesRequestedEmitter.event;\n    }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, IDecoration } from 'xterm';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable, disposeArray, MutableDisposable } from 'common/Lifecycle';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n  decorations?: ISearchDecorationOptions;\n  noScroll?: boolean;\n}\n\ninterface ISearchDecorationOptions {\n  matchBackground?: string;\n  matchBorder?: string;\n  matchOverviewRuler: string;\n  activeMatchBackground?: string;\n  activeMatchBorder?: string;\n  activeMatchColorOverviewRuler: string;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchAddonOptions {\n  highlightLimit: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\ninterface IHighlight extends IDisposable {\n  decoration: IDecoration;\n  match: ISearchResult;\n}\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\nconst DEFAULT_HIGHLIGHT_LIMIT = 1000;\n\nexport class SearchAddon extends Disposable implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cachedSearchTerm: string | undefined;\n  private _highlightedLines: Set<number> = new Set();\n  private _highlightDecorations: IHighlight[] = [];\n  private _selectedDecoration: MutableDisposable<IHighlight> = this.register(new MutableDisposable());\n  private _highlightLimit: number;\n  private _lastSearchOptions: ISearchOptions | undefined;\n  private _highlightTimeout: number | undefined;\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  private readonly _onDidChangeResults = this.register(new EventEmitter<{ resultIndex: number, resultCount: number }>());\n  public readonly onDidChangeResults = this._onDidChangeResults.event;\n\n  constructor(options?: Partial<ISearchAddonOptions>) {\n    super();\n\n    this._highlightLimit = options?.highlightLimit ?? DEFAULT_HIGHLIGHT_LIMIT;\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    this.register(this._terminal.onWriteParsed(() => this._updateMatches()));\n    this.register(this._terminal.onResize(() => this._updateMatches()));\n    this.register(toDisposable(() => this.clearDecorations()));\n  }\n\n  private _updateMatches(): void {\n    if (this._highlightTimeout) {\n      window.clearTimeout(this._highlightTimeout);\n    }\n    if (this._cachedSearchTerm && this._lastSearchOptions?.decorations) {\n      this._highlightTimeout = setTimeout(() => {\n        const term = this._cachedSearchTerm;\n        this._cachedSearchTerm = undefined;\n        this.findPrevious(term!, { ...this._lastSearchOptions, incremental: true, noScroll: true });\n      }, 200);\n    }\n  }\n\n  public clearDecorations(retainCachedSearchTerm?: boolean): void {\n    this._selectedDecoration.clear();\n    disposeArray(this._highlightDecorations);\n    this._highlightDecorations = [];\n    this._highlightedLines.clear();\n    if (!retainCachedSearchTerm) {\n      this._cachedSearchTerm = undefined;\n    }\n  }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n\n    const found = this._findNextAndSelect(term, searchOptions);\n    this._fireResults(searchOptions);\n    this._cachedSearchTerm = term;\n\n    return found;\n  }\n\n  private _highlightAllMatches(term: string, searchOptions: ISearchOptions): void {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!term || term.length === 0) {\n      this.clearDecorations();\n      return;\n    }\n    searchOptions = searchOptions || {};\n\n    // new search, clear out the old decorations\n    this.clearDecorations(true);\n\n    const searchResultsWithHighlight: ISearchResult[] = [];\n    let prevResult: ISearchResult | undefined = undefined;\n    let result = this._find(term, 0, 0, searchOptions);\n    while (result && (prevResult?.row !== result.row || prevResult?.col !== result.col)) {\n      if (searchResultsWithHighlight.length >= this._highlightLimit) {\n        break;\n      }\n      prevResult = result;\n      searchResultsWithHighlight.push(prevResult);\n      result = this._find(\n        term,\n        prevResult.col + prevResult.term.length >= this._terminal.cols ? prevResult.row + 1 : prevResult.row,\n        prevResult.col + prevResult.term.length >= this._terminal.cols ? 0 : prevResult.col + 1,\n        searchOptions\n      );\n    }\n    for (const match of searchResultsWithHighlight) {\n      const decoration = this._createResultDecoration(match, searchOptions.decorations!);\n      if (decoration) {\n        this._highlightedLines.add(decoration.marker.line);\n        this._highlightDecorations.push({ decoration, match, dispose() { decoration.dispose(); } });\n      }\n    }\n  }\n\n  private _find(term: string, startRow: number, startCol: number, searchOptions?: ISearchOptions): ISearchResult | undefined {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return undefined;\n    }\n    if (startCol > this._terminal.cols) {\n      throw new Error(`Invalid col: ${startCol} to search in terminal of ${this._terminal.cols} cols`);\n    }\n\n    let result: ISearchResult | undefined = undefined;\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  private _findNextAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return false;\n    }\n\n    const prevSelectedPos = this._terminal.getSelectionPosition();\n    this._terminal.clearSelection();\n\n    let startCol = 0;\n    let startRow = 0;\n    if (prevSelectedPos) {\n      if (this._cachedSearchTerm === term) {\n        startCol = prevSelectedPos.end.x;\n        startRow = prevSelectedPos.end.y;\n      } else {\n        startCol = prevSelectedPos.start.x;\n        startRow = prevSelectedPos.start.y;\n      }\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && prevSelectedPos) {\n      searchPosition.startRow = prevSelectedPos.start.y;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n\n    const found = this._findPreviousAndSelect(term, searchOptions);\n    this._fireResults(searchOptions);\n    this._cachedSearchTerm = term;\n\n    return found;\n  }\n\n  private _fireResults(searchOptions?: ISearchOptions): void {\n    if (searchOptions?.decorations) {\n      let resultIndex = -1;\n      if (this._selectedDecoration.value) {\n        const selectedMatch = this._selectedDecoration.value.match;\n        for (let i = 0; i < this._highlightDecorations.length; i++) {\n          const match = this._highlightDecorations[i].match;\n          if (match.row === selectedMatch.row && match.col === selectedMatch.col && match.size === selectedMatch.size) {\n            resultIndex = i;\n            break;\n          }\n        }\n      }\n      this._onDidChangeResults.fire({ resultIndex, resultCount: this._highlightDecorations.length });\n    }\n  }\n\n  private _findPreviousAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return false;\n    }\n\n    const prevSelectedPos = this._terminal.getSelectionPosition();\n    this._terminal.clearSelection();\n\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows - 1;\n    let startCol = this._terminal.cols;\n    const isReverseSearch = true;\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    let result: ISearchResult | undefined;\n    if (prevSelectedPos) {\n      searchPosition.startRow = startRow = prevSelectedPos.start.y;\n      searchPosition.startCol = startCol = prevSelectedPos.start.x;\n      if (this._cachedSearchTerm !== term) {\n        // Try to expand selection to right first.\n        result = this._findInLine(term, searchPosition, searchOptions, false);\n        if (!result) {\n          // If selection was not able to be expanded to the right, then try reverse search\n          searchPosition.startRow = startRow = prevSelectedPos.end.y;\n          searchPosition.startCol = startCol = prevSelectedPos.end.x;\n        }\n      }\n    }\n\n    if (!result) {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows - 1)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows - 1); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly\n   * adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line,\n   * which may contain subsequent terminal lines if the text is wrapped. If the provided line number\n   * is part of a wrapped text line that started on an earlier line then it is skipped since it will\n   * be properly searched when the terminal line that the text starts on is searched.\n   * @param term The search term.\n   * @param searchPosition The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and\n   * search to the left.\n   * @returns The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple\n      // rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          // Treat null characters as whitespace to align with the translateToString API\n          offset += cell.getCode() === 0 ? 1 : cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @returns Whether a result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined, options?: ISearchDecorationOptions, noScroll?: boolean): boolean {\n    const terminal = this._terminal!;\n    this._selectedDecoration.clear();\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    if (options) {\n      const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n      if (marker) {\n        const decoration = terminal.registerDecoration({\n          marker,\n          x: result.col,\n          width: result.size,\n          backgroundColor: options.activeMatchBackground,\n          layer: 'top',\n          overviewRulerOptions: {\n            color: options.activeMatchColorOverviewRuler\n          }\n        });\n        if (decoration) {\n          const disposables: IDisposable[] = [];\n          disposables.push(marker);\n          disposables.push(decoration.onRender((e) => this._applyStyles(e, options.activeMatchBorder, true)));\n          disposables.push(decoration.onDispose(() => disposeArray(disposables)));\n          this._selectedDecoration.value = { decoration, match: result, dispose() { decoration.dispose(); } };\n        }\n      }\n    }\n\n    if (!noScroll) {\n      // If it is not in the viewport then we scroll else it just gets selected\n      if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n        let scroll = result.row - terminal.buffer.active.viewportY;\n        scroll -= Math.floor(terminal.rows / 2);\n        terminal.scrollLines(scroll);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Applies styles to the decoration when it is rendered.\n   * @param element The decoration's element.\n   * @param borderColor The border color to apply.\n   * @param isActiveResult Whether the element is part of the active search result.\n   * @returns\n   */\n  private _applyStyles(element: HTMLElement, borderColor: string | undefined, isActiveResult: boolean): void {\n    if (!element.classList.contains('xterm-find-result-decoration')) {\n      element.classList.add('xterm-find-result-decoration');\n      if (borderColor) {\n        element.style.outline = `1px solid ${borderColor}`;\n      }\n    }\n    if (isActiveResult) {\n      element.classList.add('xterm-find-active-result-decoration');\n    }\n  }\n\n  /**\n   * Creates a decoration for the result and applies styles\n   * @param result the search result for which to create the decoration\n   * @param options the options for the decoration\n   * @returns the {@link IDecoration} or undefined if the marker has already been disposed of\n   */\n  private _createResultDecoration(result: ISearchResult, options: ISearchDecorationOptions): IDecoration | undefined {\n    const terminal = this._terminal!;\n    const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n    if (!marker) {\n      return undefined;\n    }\n    const findResultDecoration = terminal.registerDecoration({\n      marker,\n      x: result.col,\n      width: result.size,\n      backgroundColor: options.matchBackground,\n      overviewRulerOptions: this._highlightedLines.has(marker.line) ? undefined : {\n        color: options.matchOverviewRuler,\n        position: 'center'\n      }\n    });\n    if (findResultDecoration) {\n      const disposables: IDisposable[] = [];\n      disposables.push(marker);\n      disposables.push(findResultDecoration.onRender((e) => this._applyStyles(e, options.matchBorder, false)));\n      disposables.push(findResultDecoration.onDispose(() => disposeArray(disposables)));\n    }\n    return findResultDecoration;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./terminal-search.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["root","factory","exports","module","define","amd","self","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","isNaN","cols","rows","core","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","height","scrollbarWidth","options","scrollback","viewport","scrollBarWidth","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","floor","_listeners","_disposed","event","_event","listener","push","i","length","splice","fire","arg1","arg2","queue","call","undefined","clearListeners","from","to","e","disposeArray","disposables","d","_disposables","_isDisposed","register","unregister","index","indexOf","value","_value","f","array","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","NON_WORD_CHARACTERS","SearchAddon","Disposable","constructor","super","_highlightedLines","Set","_highlightDecorations","_selectedDecoration","MutableDisposable","_linesCacheTimeoutId","_onDidChangeResults","EventEmitter","onDidChangeResults","_highlightLimit","highlightLimit","onWriteParsed","_updateMatches","onResize","toDisposable","clearDecorations","_highlightTimeout","clearTimeout","_cachedSearchTerm","_lastSearchOptions","decorations","setTimeout","term","findPrevious","incremental","noScroll","retainCachedSearchTerm","findNext","searchOptions","Error","_highlightAllMatches","found","_findNextAndSelect","_fireResults","searchResultsWithHighlight","prevResult","result","_find","row","col","match","decoration","_createResultDecoration","add","marker","line","startRow","startCol","clearSelection","_initLinesCache","searchPosition","_findInLine","y","buffer","active","baseY","prevSelectedPos","getSelectionPosition","end","x","start","_selectResult","_findPreviousAndSelect","resultIndex","selectedMatch","size","resultCount","isReverseSearch","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","_isWholeWord","searchIndex","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","getCell","char","getChars","nextCell","getWidth","lineIndex","getCode","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","join","select","registerMarker","cursorY","registerDecoration","backgroundColor","activeMatchBackground","layer","overviewRulerOptions","color","activeMatchColorOverviewRuler","onRender","_applyStyles","activeMatchBorder","onDispose","viewportY","scroll","scrollLines","borderColor","isActiveResult","classList","contains","style","outline","findResultDecoration","matchBackground","has","matchOverviewRuler","position","matchBorder","a","AccessibilityManager","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityContainer","document","createElement","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","TimeBasedDebouncer","_renderRows","bind","insertAdjacentElement","_handleResize","_refreshRows","onScroll","onA11yChar","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","keyChar","test","refresh","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","node","type","handler","disposed","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","onShowLinkUnderline","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","_lastBufferCell","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","_removeIntersectingLinks","replies","occupiedCells","providerReply","startX","range","endX","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","endRow","_linkLeave","state","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","min","_rowEnd","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","_onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","req","acc","ident","channels","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","ybase","bufferLine","cursorX","cellHeight","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","cursorYOffset","addMarker","decorationOptions","column","setSelection","getSelection","selectionStart","selectionEnd","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollArea","themeService","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","div","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","display","onRenderEmitter","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","leftPadding","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","chars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","body","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","updateWindowsModeWrappedState","final","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","isProtected","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","loadedAddon","_wrappedAddonDispose","_buffer","init","BufferLineApiView","_line","startColumn","endColumn","BufferNamespaceApi","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","Infinity"],"sourceRoot":""}