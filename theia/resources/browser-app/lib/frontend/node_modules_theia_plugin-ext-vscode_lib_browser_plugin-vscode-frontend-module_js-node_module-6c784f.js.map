{"version":3,"file":"node_modules_theia_plugin-ext-vscode_lib_browser_plugin-vscode-frontend-module_js-node_module-6c784f.js","mappings":"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","sources":["webpack:///../node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-contribution.ts?","webpack:///../node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-frontend-module.ts?","webpack:///../node_modules/@theia/plugin-ext-vscode/src/common/plugin-vscode-environment.ts?","webpack:///../node_modules/@theia/plugin-ext-vscode/src/common/plugin-vscode-uri.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser/user-storage-uri';\nimport { FileServiceContribution, FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { Schemes } from '@theia/plugin-ext/lib/common/uri-components';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\n\n@injectable()\nexport class PluginVSCodeContribution implements FileServiceContribution {\n\n    registerFileSystemProviders(service: FileService): void {\n        this.mapSchemas(service, Schemes.vscodeRemote, 'file');\n        this.mapSchemas(service, Schemes.userData, UserStorageUri.scheme);\n    }\n\n    protected mapSchemas(service: FileService, from: string, to: string): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === from) {\n                event.waitUntil((async () => {\n                    const provider = await service.activateProvider(to);\n                    service.registerProvider(from, new DelegatingFileSystemProvider(provider, {\n                        uriConverter: {\n                            to: resource => resource.withScheme(to),\n                            from: resource => resource.withScheme(from)\n                        }\n                    }));\n                })());\n            }\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { CommandContribution } from '@theia/core';\nimport { PluginVscodeCommandsContribution } from './plugin-vscode-commands-contribution';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { PluginVSCodeContribution } from './plugin-vscode-contribution';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\n\nexport default new ContainerModule(bind => {\n    bind(PluginVSCodeEnvironment).toSelf().inSingletonScope();\n    bind(PluginVscodeCommandsContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(PluginVscodeCommandsContribution);\n    bind(PluginVSCodeContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(PluginVSCodeContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class PluginVSCodeEnvironment {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    protected _userExtensionsDirUri: URI | undefined;\n    protected _deployedPluginsUri: URI | undefined;\n    protected _tmpDirUri: URI | undefined;\n\n    async getUserExtensionsDirUri(): Promise<URI> {\n        if (!this._userExtensionsDirUri) {\n            const configDir = new URI(await this.environments.getConfigDirUri());\n            this._userExtensionsDirUri = configDir.resolve('extensions');\n        }\n        return this._userExtensionsDirUri;\n    }\n\n    async getDeploymentDirUri(): Promise<URI> {\n        if (!this._deployedPluginsUri) {\n            const configDir = new URI(await this.environments.getConfigDirUri());\n            this._deployedPluginsUri = configDir.resolve('deployedPlugins');\n        }\n        return this._deployedPluginsUri;\n    }\n\n    async getTempDirUri(prefix?: string): Promise<URI> {\n        if (!this._tmpDirUri) {\n            const configDir: URI = new URI(await this.environments.getConfigDirUri());\n            this._tmpDirUri = configDir.resolve('tmp');\n        }\n\n        if (prefix) {\n            return this._tmpDirUri.resolve(prefix);\n        }\n\n        return this._tmpDirUri;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\n/**\n * Static methods for identifying a plugin as the target of the VSCode deployment system.\n * In practice, this means that it will be resolved and deployed by the Open-VSX system.\n */\nexport namespace VSCodeExtensionUri {\n    export const SCHEME = 'vscode-extension';\n\n    export function fromId(id: string, version?: string): URI {\n        if (typeof version === 'string') {\n            return new URI().withScheme(VSCodeExtensionUri.SCHEME).withAuthority(id).withPath(`/${version}`);\n        } else {\n            return new URI().withScheme(VSCodeExtensionUri.SCHEME).withAuthority(id);\n        }\n    }\n\n    export function fromVersionedId(versionedId: string): URI {\n        const versionAndId = versionedId.split('@');\n        return fromId(versionAndId[0], versionAndId[1]);\n    }\n\n    export function toId(uri: URI): { id: string, version?: string } | undefined {\n        if (uri.scheme === VSCodeExtensionUri.SCHEME) {\n            return { id: uri.authority, version: uri.path.isRoot ? undefined : uri.path.base };\n        }\n        return undefined;\n    }\n}\n"],"names":[],"sourceRoot":""}